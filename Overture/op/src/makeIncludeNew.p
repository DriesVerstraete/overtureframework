eval 'exec perl -S $0 ${1+"$@"}'
if 0;
#!/usr/bin/perl
#
# perl program to create the include files that define difference approximations to orders 2,4,6,8
#   This is for the new versions that allow one to specify the name for the jacobian rsxy 
#

sub printout # ($line)
# output a line to the file
{
  $line=@_[0];
  $line =~ s/[\[\]]//g;  # remove [ and ]
  print FFILE $line;

  $line = @_[0];
  if( $line =~ /^c/ )
  {
    $line =~ s/^c/\/\//;
  }
  elsif( ($line =~ /=/) && ($component eq 0) )
  {
    # for non-comment lines we extract the name of the variable being defined
    if( $line =~ /\w/ )
    {
      $var = $line;
      chop($var);
      $var =~ s/[ ]*\#\#[ ]*//g;
      $var =~ s/^([^\(]*).*/\1/;
      if( !($var =~/\#/) )
      {
        # print "var = [$var]\n";
        print DFILE "      real $var\n";
      }
    }

    # change the statement function into a #define statement
    $line =~ s/=/ /;
    $line =~ s/^/\#define /;
  }
  if( $line =~ /\[/ )
  {
    $line =~ s/\[([^\]]*)\]\*\*2/SQR(\1)/g;   # change [...]**2 to SQR(...)
  }
  print CFILE $line;
}


$maxOrder=8;

for( $order=2; $order<=$maxOrder; $order+=2 )
{

  $ffile = "defineDiffNewerOrder"."$order"."f.h";  # Fortran statement functions
  $cfile = "defineDiffNewerOrder"."$order"."c.h";  # C or C++ defines
  $dfile = "declareDiffNewerOrder"."$order"."f.h";  # declare statement functions for fortran

  printf("Create files $cfile, $ffile and $dfile.\n");

  open(FFILE,">$ffile") || die "cannot open file $ffile!" ;
  open(CFILE,">$cfile") || die "cannot open file $cfile!" ;
  open(DFILE,">$dfile") || die "cannot open file $dfile!" ;


  printout "c Define statement functions for difference approximations of order $order \n";
  printout "c Thsi file was generated by op/src/makeIncludeNew.p  \n";

#  printout "c d12(0:2) = 1/(2.*dr(axis))       12:1st-derivative, 2nd-order accurate\n";
#  printout "c d22(0:2) = 1/([dr(axis)]**2)       22:2nd-derivative, 2nd-order accurate\n";
#
#  printout "c d14(0:2) = 1/(12.*dr(axis))      14:1st-derivative, 4th-order accurate\n";
#  printout "c d24(0:2) = 1/(12.*[dr(axis)]**2)   24:2nd-derivative, 4th-order accurate\n";
#
#  printout "c d16(0:2) = 1/(60.*dr(axis))      16:1st-derivative, 6th-order accurate\n";
#  printout "c d26(0:2) = 1/(180.*[dr(axis)]**2)  16:2nd-derivative, 6th-order accurate\n";
#
#  printout "c d18(0:2) = 1/(840.*dr(axis))     18:1st-derivative, 8th-order accurate\n";
#  printout "c d28(0:2) = 1/(5040.*dr(axis))    18:2nd-derivative, 8th-order accurate\n";
  

  for( $component=0; $component<=1; $component++ )
  {
    printout "c Arguments: u,rx,dr,dx: names for the grid function, jacobian, unit square spacing and rectangular grid spacing\n";
    printout "c To include derivatives of rx use OPTION=RX\n";
    if( $component == 0 )
    {
      printout "#beginMacro defineDifferenceNewOrder$order"."Components$component(u,rx,dr,dx,OPTION)\n";
      $kd = "";
    }
    else
    {
      printout "#beginMacro defineDifferenceNewOrder$order"."Components$component(u,rx,dr,dx,OPTION)\n";
      $kd = ",kd";
    }

  printout "\n";

  $rxn="rx ##";   # name for rx

  $d12 = "dr ## 12";
  $d22 = "dr ## 22";
  $d14 = "dr ## 14";
  $d24 = "dr ## 24";
  $d16 = "dr ## 16";
  $d26 = "dr ## 26";
  $d18 = "dr ## 18";
  $d28 = "dr ## 28";

  $order1 = "$order" . "1";
  $order2 = "$order" . "2";
  $order3 = "$order" . "3";

  if( $order eq '2' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$d12(kd) = 1./(2.*dr(kd))\n"; 
    printout "$d22(kd) = 1./([dr(kd)]**2)\n"; # add [ .. ] so we can easily change to SQR( ) for C++
    printout "#End\n";
    printout "\n";

# \([^o]\)u\([rstxyz]\)
# \1u ## \2

    printout "u ## r2(i1,i2,i3$kd)=(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))*$d12(0)\n";
    printout "u ## s2(i1,i2,i3$kd)=(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))*$d12(1)\n";
    printout "u ## t2(i1,i2,i3$kd)=(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))*$d12(2)\n";

    printout "\n";
    printout "u ## rr2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd)) )*$d22(0)\n";
    printout "u ## ss2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd)) )*$d22(1)\n";
    printout "u ## rs2(i1,i2,i3$kd)=(u ## r2(i1,i2+1,i3$kd)-u ## r2(i1,i2-1,i3$kd))*$d12(1)\n";
    printout "u ## tt2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd)) )*$d22(2)\n";
    printout "u ## rt2(i1,i2,i3$kd)=(u ## r2(i1,i2,i3+1$kd)-u ## r2(i1,i2,i3-1$kd))*$d12(2)\n";
    printout "u ## st2(i1,i2,i3$kd)=(u ## s2(i1,i2,i3+1$kd)-u ## s2(i1,i2,i3-1$kd))*$d12(2)\n";

#    printout "u ## rrr2(i1,i2,i3$kd)=(-2.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))+(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)) )*$d22(0)*$d12(0)\n";
#    printout "u ## sss2(i1,i2,i3$kd)=(-2.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))+(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)) )*$d22(1)*$d12(1)\n";
#    printout "u ## ttt2(i1,i2,i3$kd)=(-2.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))+(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)) )*$d22(2)*$d12(2)\n";

    # ..... 3rd and 4th r derivatives ................
    printout "u ## rrr2(i1,i2,i3$kd)=(-2.*(u ## (i1+1,i2,i3$kd)-u ## (i1-1,i2,i3$kd))".
             "+(u ## (i1+2,i2,i3$kd)-u ## (i1-2,i2,i3$kd)) )*$d22(0)*$d12(0)\n";
    printout "u ## sss2(i1,i2,i3$kd)=(-2.*(u ## (i1,i2+1,i3$kd)-u ## (i1,i2-1,i3$kd))".
             "+(u ## (i1,i2+2,i3$kd)-u ## (i1,i2-2,i3$kd)) )*$d22(1)*$d12(1)\n";
    printout "u ## ttt2(i1,i2,i3$kd)=(-2.*(u ## (i1,i2,i3+1$kd)-u ## (i1,i2,i3-1$kd))".
             "+(u ## (i1,i2,i3+2$kd)-u ## (i1,i2,i3-2$kd)) )*$d22(1)*$d12(2)\n";

    printout "u ## rrs2(i1,i2,i3$kd)=( u ## rr2(i1,i2+1,i3$kd)-u ## rr2(i1,i2-1,i3$kd))/(2.*dr(1))\n";
    printout "u ## rss2(i1,i2,i3$kd)=( u ## ss2(i1+1,i2,i3$kd)-u ## ss2(i1-1,i2,i3$kd))/(2.*dr(0))\n";
    printout "u ## rrt2(i1,i2,i3$kd)=( u ## rr2(i1,i2,i3+1$kd)-u ## rr2(i1,i2,i3-1$kd))/(2.*dr(2))\n";
    printout "u ## sst2(i1,i2,i3$kd)=( u ## ss2(i1,i2,i3+1$kd)-u ## ss2(i1,i2,i3-1$kd))/(2.*dr(2))\n";

    printout "u ## rtt2(i1,i2,i3$kd)=( u ## tt2(i1+1,i2,i3$kd)-u ## tt2(i1-1,i2,i3$kd))/(2.*dr(0))\n";
    printout "u ## stt2(i1,i2,i3$kd)=( u ## tt2(i1,i2+1,i3$kd)-u ## tt2(i1,i2-1,i3$kd))/(2.*dr(1))\n";


    printout "u ## rrrr2(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd))".
                        "+(u ## (i1+2,i2,i3$kd)+u ## (i1-2,i2,i3$kd)) )/(dr(0)**4)\n";
    printout "u ## ssss2(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
                        "+(u ## (i1,i2+2,i3$kd)+u ## (i1,i2-2,i3$kd)) )/(dr(1)**4)\n";
    printout "u ## tttt2(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1,i2,i3+1$kd)+u ## (i1,i2,i3-1$kd))".
                        "+(u ## (i1,i2,i3+2$kd)+u ## (i1,i2,i3-2$kd)) )/(dr(2)**4)\n";

    printout "u ## rrss2(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
     "+   (u ## (i1+1,i2+1,i3$kd)+u ## (i1-1,i2+1,i3$kd)+u ## (i1+1,i2-1,i3$kd)+u ## (i1-1,i2-1,i3$kd)) )/(dr(0)**2*dr(1)**2)\n";
    printout "u ## rrtt2(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2,i3+1$kd)+u ## (i1,i2,i3-1$kd))".
     "+   (u ## (i1+1,i2,i3+1$kd)+u ## (i1-1,i2,i3+1$kd)+u ## (i1+1,i2,i3-1$kd)+u ## (i1-1,i2,i3-1$kd)) )/(dr(0)**2*dr(2)**2)\n";
    printout "u ## sstt2(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1,i2+1,i3$kd)  +u ## (i1,i2-1,i3$kd)+  u ## (i1,i2  ,i3+1$kd)+u ## (i1,i2  ,i3-1$kd))".
     "+   (u ## (i1,i2+1,i3+1$kd)+u ## (i1,i2-1,i3+1$kd)+u ## (i1,i2+1,i3-1$kd)+u ## (i1,i2-1,i3-1$kd)) )/(dr(1)**2*dr(2)**2)\n";


    printout "u ## rrrs2(i1,i2,i3$kd)=( u ## rrr2(i1,i2+1,i3$kd)-u ## rrr2(i1,i2-1,i3$kd))/(2.*dr(1))\n";
    printout "u ## rsss2(i1,i2,i3$kd)=( u ## sss2(i1+1,i2,i3$kd)-u ## sss2(i1-1,i2,i3$kd))/(2.*dr(0))\n";
    printout "u ## rrrt2(i1,i2,i3$kd)=( u ## rrr2(i1,i2,i3+1$kd)-u ## rrr2(i1,i2,i3-1$kd))/(2.*dr(2))\n";
    printout "u ## ssst2(i1,i2,i3$kd)=( u ## sss2(i1,i2,i3+1$kd)-u ## sss2(i1,i2,i3-1$kd))/(2.*dr(2))\n";

    printout "u ## rttt2(i1,i2,i3$kd)=( u ## ttt2(i1+1,i2,i3$kd)-u ## ttt2(i1-1,i2,i3$kd))/(2.*dr(0))\n";
    printout "u ## sttt2(i1,i2,i3$kd)=( u ## ttt2(i1,i2+1,i3$kd)-u ## ttt2(i1,i2-1,i3$kd))/(2.*dr(1))\n";


    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
   
    printout $rxn."r2(i1,i2,i3,m,n)=($rxn(i1+1,i2,i3,m,n)-$rxn(i1-1,i2,i3,m,n))*$d12(0)\n"; 
    printout $rxn."s2(i1,i2,i3,m,n)=($rxn(i1,i2+1,i3,m,n)-$rxn(i1,i2-1,i3,m,n))*$d12(1)\n";
    printout $rxn."t2(i1,i2,i3,m,n)=($rxn(i1,i2,i3+1,m,n)-$rxn(i1,i2,i3-1,m,n))*$d12(2)\n";

    printout $rxn."rr2(i1,i2,i3,m,n)=(-2.*$rxn(i1,i2,i3,m,n)+($rxn(i1+1,i2,i3,m,n)+$rxn(i1-1,i2,i3,m,n)) )*$d22(0)\n";
    printout $rxn."ss2(i1,i2,i3,m,n)=(-2.*$rxn(i1,i2,i3,m,n)+($rxn(i1,i2+1,i3,m,n)+$rxn(i1,i2-1,i3,m,n)) )*$d22(1)\n";
    printout $rxn."rs2(i1,i2,i3,m,n)=($rxn r2(i1,i2+1,i3,m,n)-$rxn r2(i1,i2-1,i3,m,n))*$d12(1)\n";

    printout "$rxn tt2(i1,i2,i3,m,n)=(-2.*rx(i1,i2,i3,m,n)+(rx(i1,i2,i3+1,m,n)+rx(i1,i2,i3-1,m,n)) )*$d22(2)\n";
    printout "$rxn rt2(i1,i2,i3,m,n)=($rxn r2(i1,i2,i3+1,m,n)-$rxn r2(i1,i2,i3-1,m,n))*$d12(2)\n";
    printout "$rxn st2(i1,i2,i3,m,n)=($rxn s2(i1,i2,i3+1,m,n)-$rxn s2(i1,i2,i3-1,m,n))*$d12(2)\n";

    # ..... 3rd and 4th r derivatives of rx ................
    printout "$rxn rrr2(i1,i2,i3,m,n)=(-2.*($rxn (i1+1,i2,i3,m,n)-$rxn (i1-1,i2,i3,m,n))".
             "+($rxn (i1+2,i2,i3,m,n)-$rxn (i1-2,i2,i3,m,n)) )*$d22(0)*$d12(0)\n";
    printout "$rxn sss2(i1,i2,i3,m,n)=(-2.*($rxn (i1,i2+1,i3,m,n)-$rxn (i1,i2-1,i3,m,n))".
             "+($rxn (i1,i2+2,i3,m,n)-$rxn (i1,i2-2,i3,m,n)) )*$d22(1)*$d12(1)\n";
    printout "$rxn ttt2(i1,i2,i3,m,n)=(-2.*($rxn (i1,i2,i3+1,m,n)-$rxn (i1,i2,i3-1,m,n))".
             "+($rxn (i1,i2,i3+2,m,n)-$rxn (i1,i2,i3-2,m,n)) )*$d22(1)*$d12(2)\n";

    printout "$rxn rrs2(i1,i2,i3,m,n)=( $rxn rr2(i1,i2+1,i3,m,n)-$rxn rr2(i1,i2-1,i3,m,n))/(2.*dr(1))\n";
    printout "$rxn rss2(i1,i2,i3,m,n)=( $rxn ss2(i1+1,i2,i3,m,n)-$rxn ss2(i1-1,i2,i3,m,n))/(2.*dr(0))\n";
    printout "$rxn rrt2(i1,i2,i3,m,n)=( $rxn rr2(i1,i2,i3+1,m,n)-$rxn rr2(i1,i2,i3-1,m,n))/(2.*dr(2))\n";
    printout "$rxn sst2(i1,i2,i3,m,n)=( $rxn ss2(i1,i2,i3+1,m,n)-$rxn ss2(i1,i2,i3-1,m,n))/(2.*dr(2))\n";

    printout "$rxn rtt2(i1,i2,i3,m,n)=( $rxn tt2(i1+1,i2,i3,m,n)-$rxn tt2(i1-1,i2,i3,m,n))/(2.*dr(0))\n";
    printout "$rxn stt2(i1,i2,i3,m,n)=( $rxn tt2(i1,i2+1,i3,m,n)-$rxn tt2(i1,i2-1,i3,m,n))/(2.*dr(1))\n";

    printout "$rxn rrrr2(i1,i2,i3,m,n)=(6.*$rxn (i1,i2,i3,m,n)-4.*($rxn (i1+1,i2,i3,m,n)+$rxn (i1-1,i2,i3,m,n))".
                        "+($rxn (i1+2,i2,i3,m,n)+$rxn (i1-2,i2,i3,m,n)) )/(dr(0)**4)\n";
    printout "$rxn ssss2(i1,i2,i3,m,n)=(6.*$rxn (i1,i2,i3,m,n)-4.*($rxn (i1,i2+1,i3,m,n)+$rxn (i1,i2-1,i3,m,n))".
                        "+($rxn (i1,i2+2,i3,m,n)+$rxn (i1,i2-2,i3,m,n)) )/(dr(1)**4)\n";
    printout "$rxn tttt2(i1,i2,i3,m,n)=(6.*$rxn (i1,i2,i3,m,n)-4.*($rxn (i1,i2,i3+1,m,n)+$rxn (i1,i2,i3-1,m,n))".
                        "+($rxn (i1,i2,i3+2,m,n)+$rxn (i1,i2,i3-2,m,n)) )/(dr(2)**4)\n";

    printout "$rxn rrss2(i1,i2,i3,m,n)=( 4.*$rxn (i1,i2,i3,m,n)".
     "-2.*($rxn (i1+1,i2,i3,m,n)+$rxn (i1-1,i2,i3,m,n)+$rxn (i1,i2+1,i3,m,n)+$rxn (i1,i2-1,i3,m,n))".
     "+   ($rxn (i1+1,i2+1,i3,m,n)+$rxn (i1-1,i2+1,i3,m,n)+$rxn (i1+1,i2-1,i3,m,n)+$rxn (i1-1,i2-1,i3,m,n)) )/(dr(0)**2*dr(1)**2)\n";
    printout "$rxn rrtt2(i1,i2,i3,m,n)=( 4.*$rxn (i1,i2,i3,m,n)".
     "-2.*($rxn (i1+1,i2,i3,m,n)+$rxn (i1-1,i2,i3,m,n)+$rxn (i1,i2,i3+1,m,n)+$rxn (i1,i2,i3-1,m,n))".
     "+   ($rxn (i1+1,i2,i3+1,m,n)+$rxn (i1-1,i2,i3+1,m,n)+$rxn (i1+1,i2,i3-1,m,n)+$rxn (i1-1,i2,i3-1,m,n)) )/(dr(0)**2*dr(2)**2)\n";
    printout "$rxn sstt2(i1,i2,i3,m,n)=( 4.*$rxn (i1,i2,i3,m,n)".
     "-2.*($rxn (i1,i2+1,i3,m,n)  +$rxn (i1,i2-1,i3,m,n)+  $rxn (i1,i2  ,i3+1,m,n)+$rxn (i1,i2  ,i3-1,m,n))".
     "+   ($rxn (i1,i2+1,i3+1,m,n)+$rxn (i1,i2-1,i3+1,m,n)+$rxn (i1,i2+1,i3-1,m,n)+$rxn (i1,i2-1,i3-1,m,n)) )/(dr(1)**2*dr(2)**2)\n";

    printout "#End\n";
  }
  elsif( $order eq '4' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$d14(kd) = 1./(12.*dr(kd))\n"; 
    printout "$d24(kd) = 1./(12.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r4(i1,i2,i3$kd)=(8.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)))*$d14(0)\n";
    printout "u ## s4(i1,i2,i3$kd)=(8.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)))*$d14(1)\n";
    printout "u ## t4(i1,i2,i3$kd)=(8.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)))*$d14(2)\n";
    printout "\n";
    printout "u ## rr4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
                                   "-(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd)) )*$d24(0)\n";
    printout "u ## ss4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
                                   "-(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd)) )*$d24(1)\n";
    printout "u ## tt4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
                                   "-(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd)) )*$d24(2)\n";
    printout "u ## rs4(i1,i2,i3$kd)=(8.*(u ## r4(i1,i2+1,i3$kd)-u ## r4(i1,i2-1,i3$kd))-(u ## r4(i1,i2+2,i3$kd)-u ## r4(i1,i2-2,i3$kd)))*$d14(1)\n";
    printout "u ## rt4(i1,i2,i3$kd)=(8.*(u ## r4(i1,i2,i3+1$kd)-u ## r4(i1,i2,i3-1$kd))-(u ## r4(i1,i2,i3+2$kd)-u ## r4(i1,i2,i3-2$kd)))*$d14(2)\n";
    printout "u ## st4(i1,i2,i3$kd)=(8.*(u ## s4(i1,i2,i3+1$kd)-u ## s4(i1,i2,i3-1$kd))-(u ## s4(i1,i2,i3+2$kd)-u ## s4(i1,i2,i3-2$kd)))*$d14(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
    printout $rxn."r4(i1,i2,i3,m,n)=(8.*($rxn(i1+1,i2,i3,m,n)-$rxn(i1-1,i2,i3,m,n))-($rxn(i1+2,i2,i3,m,n)-$rxn(i1-2,i2,i3,m,n)))*$d14(0)\n"; 
    printout $rxn."s4(i1,i2,i3,m,n)=(8.*($rxn(i1,i2+1,i3,m,n)-$rxn(i1,i2-1,i3,m,n))-($rxn(i1,i2+2,i3,m,n)-$rxn(i1,i2-2,i3,m,n)))*$d14(1)\n";
    printout $rxn."t4(i1,i2,i3,m,n)=(8.*($rxn(i1,i2,i3+1,m,n)-$rxn(i1,i2,i3-1,m,n))-($rxn(i1,i2,i3+2,m,n)-$rxn(i1,i2,i3-2,m,n)))*$d14(2)\n";
    printout "#End\n";

  }
  elsif( $order eq '6' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$d16(kd) = 1./(60.*dr(kd))\n"; 
    printout "$d26(kd) = 1./(180.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r6(i1,i2,i3$kd)=(45.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-9.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))". # /60
             "+(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd)))*$d16(0)\n";
    printout "u ## s6(i1,i2,i3$kd)=(45.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-9.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd)))*$d16(1)\n";
    printout "u ## t6(i1,i2,i3$kd)=(45.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-9.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd)))*$d16(2)\n";

    printout "\n";
    printout "u ## rr6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
         "-27.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+2.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd)) )*$d26(0)\n"; # /180
    printout "u ## ss6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-27.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+2.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd)) )*$d26(1)\n";
    printout "u ## tt6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-27.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+2.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd)) )*$d26(2)\n";

    printout "u ## rs6(i1,i2,i3$kd)=(45.*(u ## r6(i1,i2+1,i3$kd)-u ## r6(i1,i2-1,i3$kd))".
         "-9.*(u ## r6(i1,i2+2,i3$kd)-u ## r6(i1,i2-2,i3$kd))+(u ## r6(i1,i2+3,i3$kd)-u ## r6(i1,i2-3,i3$kd)))*$d16(1)\n";
    printout "u ## rt6(i1,i2,i3$kd)=(45.*(u ## r6(i1,i2,i3+1$kd)-u ## r6(i1,i2,i3-1$kd))".
         "-9.*(u ## r6(i1,i2,i3+2$kd)-u ## r6(i1,i2,i3-2$kd))+(u ## r6(i1,i2,i3+3$kd)-u ## r6(i1,i2,i3-3$kd)))*$d16(2)\n";
    printout "u ## st6(i1,i2,i3$kd)=(45.*(u ## s6(i1,i2,i3+1$kd)-u ## s6(i1,i2,i3-1$kd))".
         "-9.*(u ## s6(i1,i2,i3+2$kd)-u ## s6(i1,i2,i3-2$kd))+(u ## s6(i1,i2,i3+3$kd)-u ## s6(i1,i2,i3-3$kd)))*$d16(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
      printout $rxn."r6(i1,i2,i3,m,n)=(45.*($rxn(i1+1,i2,i3,m,n)-$rxn(i1-1,i2,i3,m,n))-9.*($rxn(i1+2,i2,i3,m,n)-$rxn(i1-2,i2,i3,m,n))".
             "+($rxn(i1+3,i2,i3,m,n)-$rxn(i1-3,i2,i3,m,n)))*$d16(0)\n";
      printout $rxn."s6(i1,i2,i3,m,n)=(45.*($rxn(i1,i2+1,i3,m,n)-$rxn(i1,i2-1,i3,m,n))-9.*($rxn(i1,i2+2,i3,m,n)-$rxn(i1,i2-2,i3,m,n))".
             "+($rxn(i1,i2+3,i3,m,n)-$rxn(i1,i2-3,i3,m,n)))*$d16(1)\n";
      printout $rxn."t6(i1,i2,i3,m,n)=(45.*($rxn(i1,i2,i3+1,m,n)-$rxn(i1,i2,i3-1,m,n))-9.*($rxn(i1,i2,i3+2,m,n)-$rxn(i1,i2,i3-2,m,n))".
             "+($rxn(i1,i2,i3+3,m,n)-$rxn(i1,i2,i3-3,m,n)))*$d16(2)\n";
    printout "#End\n";
  }
  else
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$d18(kd) = 1./(840.*dr(kd))\n"; 
    printout "$d28(kd) = 1./(5040.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r8(i1,i2,i3$kd)=(672.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-168.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))".
             "+32.*(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd))-3.*(u(i1+4,i2,i3$kd)-u(i1-4,i2,i3$kd)))*$d18(0)\n";
    printout "u ## s8(i1,i2,i3$kd)=(672.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-168.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+32.*(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd))-3.*(u(i1,i2+4,i3$kd)-u(i1,i2-4,i3$kd)))*$d18(1)\n";
    printout "u ## t8(i1,i2,i3$kd)=(672.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-168.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+32.*(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd))-3.*(u(i1,i2,i3+4$kd)-u(i1,i2,i3-4$kd)))*$d18(2)\n";

    printout "\n";
    printout "u ## rr8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".  # /5040
         "-1008.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+128.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd))".
         "-9.*(u(i1+4,i2,i3$kd)+u(i1-4,i2,i3$kd)) )*$d28(0)\n"; # /180
    printout "u ## ss8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-1008.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+128.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd))".
         "-9.*(u(i1,i2+4,i3$kd)+u(i1,i2-4,i3$kd)) )*$d28(1)\n";
    printout "u ## tt8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-1008.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+128.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd))".
         "-9.*(u(i1,i2,i3+4$kd)+u(i1,i2,i3-4$kd)) )*$d28(2)\n";

    printout "u ## rs8(i1,i2,i3$kd)=(672.*(u ## r8(i1,i2+1,i3$kd)-u ## r8(i1,i2-1,i3$kd))".
         "-168.*(u ## r8(i1,i2+2,i3$kd)-u ## r8(i1,i2-2,i3$kd))+32.*(u ## r8(i1,i2+3,i3$kd)-u ## r8(i1,i2-3,i3$kd))".
         "-3.*(u ## r8(i1,i2+4,i3$kd)-u ## r8(i1,i2-4,i3$kd)))*$d18(1)\n";
    printout "u ## rt8(i1,i2,i3$kd)=(672.*(u ## r8(i1,i2,i3+1$kd)-u ## r8(i1,i2,i3-1$kd))".
         "-168.*(u ## r8(i1,i2,i3+2$kd)-u ## r8(i1,i2,i3-2$kd))+32.*(u ## r8(i1,i2,i3+3$kd)-u ## r8(i1,i2,i3-3$kd))".
         "-3.*(u ## r8(i1,i2,i3+4$kd)-u ## r8(i1,i2,i3-4$kd)))*$d18(2)\n";
    printout "u ## st8(i1,i2,i3$kd)=(672.*(u ## s8(i1,i2,i3+1$kd)-u ## s8(i1,i2,i3-1$kd))".
         "-168.*(u ## s8(i1,i2,i3+2$kd)-u ## s8(i1,i2,i3-2$kd))+32.*(u ## s8(i1,i2,i3+3$kd)-u ## s8(i1,i2,i3-3$kd))".
         "-3.*(u ## s8(i1,i2,i3+4$kd)-u ## s8(i1,i2,i3-4$kd)))*$d18(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";

      printout $rxn."r8(i1,i2,i3,m,n)=(672.*($rxn(i1+1,i2,i3,m,n)-$rxn(i1-1,i2,i3,m,n))-168.*($rxn(i1+2,i2,i3,m,n)-$rxn(i1-2,i2,i3,m,n))".
             "+32.*($rxn(i1+3,i2,i3,m,n)-$rxn(i1-3,i2,i3,m,n))-3.*($rxn(i1+4,i2,i3,m,n)-$rxn(i1-4,i2,i3,m,n)))*$d18(0)\n";
      printout $rxn."s8(i1,i2,i3,m,n)=(672.*($rxn(i1,i2+1,i3,m,n)-$rxn(i1,i2-1,i3,m,n))-168.*($rxn(i1,i2+2,i3,m,n)-$rxn(i1,i2-2,i3,m,n))".
             "+32.*($rxn(i1,i2+3,i3,m,n)-$rxn(i1,i2-3,i3,m,n))-3.*($rxn(i1,i2+4,i3,m,n)-$rxn(i1,i2-4,i3,m,n)))*$d18(1)\n";
      printout $rxn."t8(i1,i2,i3,m,n)=(672.*($rxn(i1,i2,i3+1,m,n)-$rxn(i1,i2,i3-1,m,n))-168.*($rxn(i1,i2,i3+2,m,n)-$rxn(i1,i2,i3-2,m,n))".
             "+32.*($rxn(i1,i2,i3+3,m,n)-$rxn(i1,i2,i3-3,m,n))-3.*($rxn(i1,i2,i3+4,m,n)-$rxn(i1,i2,i3-4,m,n)))*$d18(2)\n";
    printout "#End\n";
  }

  $rx = "rx(i1,i2,i3,0,0)";
  $ry = "rx(i1,i2,i3,0,1)";
  $rz = "rx(i1,i2,i3,0,2)";
  $sx = "rx(i1,i2,i3,1,0)";
  $sy = "rx(i1,i2,i3,1,1)";
  $sz = "rx(i1,i2,i3,1,2)";
  $tx = "rx(i1,i2,i3,2,0)";
  $ty = "rx(i1,i2,i3,2,1)";
  $tz = "rx(i1,i2,i3,2,2)";

  printout "\n";
  printout "u ## x$order"."1(i1,i2,i3$kd)= $rx*u ## r$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## z$order"."1(i1,i2,i3$kd)=0\n";

  printout "\n";
  printout "u ## x$order"."2(i1,i2,i3$kd)= $rx*u ## r$order(i1,i2,i3$kd)+$sx*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."2(i1,i2,i3$kd)= $ry*u ## r$order(i1,i2,i3$kd)+$sy*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## z$order"."2(i1,i2,i3$kd)=0\n";

  printout "u ## x$order"."3(i1,i2,i3$kd)=$rx*u ## r$order(i1,i2,i3$kd)+$sx*u ## s$order(i1,i2,i3$kd)+".
                                     "$tx*u ## t$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."3(i1,i2,i3$kd)=$ry*u ## r$order(i1,i2,i3$kd)+$sy*u ## s$order(i1,i2,i3$kd)+".
                                     "$ty*u ## t$order(i1,i2,i3$kd)\n";
  printout "u ## z$order"."3(i1,i2,i3$kd)=$rz*u ## r$order(i1,i2,i3$kd)+$sz*u ## s$order(i1,i2,i3$kd)+".
                      "$tz*u ## t$order(i1,i2,i3$kd)\n";

  printout "\n";
  printout "#If #OPTION == \"RX\"\n";
  printout "$rxn x$order"."1(i1,i2,i3,m,n)= $rx*$rxn"."r$order(i1,i2,i3,m,n)\n";
  {
    printout $rxn."x$order"."2(i1,i2,i3,m,n)= $rx*$rxn"."r$order(i1,i2,i3,m,n)".
             "+$sx*$rxn"."s$order(i1,i2,i3,m,n)\n";
    printout $rxn."y$order"."2(i1,i2,i3,m,n)= $ry*$rxn"."r$order(i1,i2,i3,m,n)".
             "+$sy*$rxn"."s$order(i1,i2,i3,m,n)\n";

    printout $rxn."x$order"."3(i1,i2,i3,m,n)=$rx*$rxn"."r$order(i1,i2,i3,m,n)".
             "+$sx*$rxn"."s$order(i1,i2,i3,m,n)+$tx*$rxn"."t$order(i1,i2,i3,m,n)\n";
    printout $rxn."y$order"."3(i1,i2,i3,m,n)=$ry*$rxn"."r$order(i1,i2,i3,m,n)".
             "+$sy*$rxn"."s$order(i1,i2,i3,m,n)+$ty*$rxn"."t$order(i1,i2,i3,m,n)\n";
    printout $rxn."z$order"."3(i1,i2,i3,m,n)=$rz*$rxn"."r$order(i1,i2,i3,m,n)".
             "+$sz*$rxn"."s$order(i1,i2,i3,m,n)+$tz*$rxn"."t$order(i1,i2,i3,m,n)\n";
  }
  printout "#End\n";
  printout "\n";

  $rxx1 = "rx ## x$order ## 1(i1,i2,i3,0,0)";

  $rxx2 = "rx ## x$order ## 2(i1,i2,i3,0,0)";
  $rxy2 = "rx ## x$order ## 2(i1,i2,i3,0,1)";
  $rxz2 = "rx ## x$order ## 2(i1,i2,i3,0,2)";
  $ryx2 = "rx ## y$order ## 2(i1,i2,i3,0,0)";
  $ryy2 = "rx ## y$order ## 2(i1,i2,i3,0,1)";
  $ryz2 = "rx ## y$order ## 2(i1,i2,i3,0,2)";
  $rzx2 = "rx ## z$order ## 2(i1,i2,i3,0,0)";
  $rzy2 = "rx ## z$order ## 2(i1,i2,i3,0,1)";
  $rzz2 = "rx ## z$order ## 2(i1,i2,i3,0,2)";

  $sxx2 = "rx ## x$order ## 2(i1,i2,i3,1,0)";
  $sxy2 = "rx ## x$order ## 2(i1,i2,i3,1,1)";
  $sxz2 = "rx ## x$order ## 2(i1,i2,i3,1,2)";
  $syx2 = "rx ## y$order ## 2(i1,i2,i3,1,0)";
  $syy2 = "rx ## y$order ## 2(i1,i2,i3,1,1)";
  $syz2 = "rx ## y$order ## 2(i1,i2,i3,1,2)";
  $szx2 = "rx ## z$order ## 2(i1,i2,i3,1,0)";
  $szy2 = "rx ## z$order ## 2(i1,i2,i3,1,1)";
  $szz2 = "rx ## z$order ## 2(i1,i2,i3,1,2)";

  $rxx3 = "rx ## x$order ## 3(i1,i2,i3,0,0)";
  $rxy3 = "rx ## x$order ## 3(i1,i2,i3,0,1)";
  $rxz3 = "rx ## x$order ## 3(i1,i2,i3,0,2)";
  $ryx3 = "rx ## y$order ## 3(i1,i2,i3,0,0)";
  $ryy3 = "rx ## y$order ## 3(i1,i2,i3,0,1)";
  $ryz3 = "rx ## y$order ## 3(i1,i2,i3,0,2)";
  $rzx3 = "rx ## z$order ## 3(i1,i2,i3,0,0)";
  $rzy3 = "rx ## z$order ## 3(i1,i2,i3,0,1)";
  $rzz3 = "rx ## z$order ## 3(i1,i2,i3,0,2)";

  $sxx3 = "rx ## x$order ## 3(i1,i2,i3,1,0)";
  $sxy3 = "rx ## x$order ## 3(i1,i2,i3,1,1)";
  $sxz3 = "rx ## x$order ## 3(i1,i2,i3,1,2)";
  $syx3 = "rx ## y$order ## 3(i1,i2,i3,1,0)";
  $syy3 = "rx ## y$order ## 3(i1,i2,i3,1,1)";
  $syz3 = "rx ## y$order ## 3(i1,i2,i3,1,2)";
  $szx3 = "rx ## z$order ## 3(i1,i2,i3,1,0)";
  $szy3 = "rx ## z$order ## 3(i1,i2,i3,1,1)";
  $szz3 = "rx ## z$order ## 3(i1,i2,i3,1,2)";

  $txx3 = "rx ## x$order ## 3(i1,i2,i3,2,0)";
  $txy3 = "rx ## x$order ## 3(i1,i2,i3,2,1)";
  $txz3 = "rx ## x$order ## 3(i1,i2,i3,2,2)";
  $tyx3 = "rx ## y$order ## 3(i1,i2,i3,2,0)";
  $tyy3 = "rx ## y$order ## 3(i1,i2,i3,2,1)";
  $tyz3 = "rx ## y$order ## 3(i1,i2,i3,2,2)";
  $tzx3 = "rx ## z$order ## 3(i1,i2,i3,2,0)";
  $tzy3 = "rx ## z$order ## 3(i1,i2,i3,2,1)";
  $tzz3 = "rx ## z$order ## 3(i1,i2,i3,2,2)";


  printout "u ## xx$order"."1(i1,i2,i3$kd)=([$rx]**2)*u ## rr$order(i1,i2,i3$kd)".
             "+($rxx2)*u ## r$order(i1,i2,i3$kd)\n";

  printout "u ## yy$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## xy$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## xz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## yz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## zz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## laplacian$order"."1(i1,i2,i3$kd)=u ## xx$order"."1(i1,i2,i3$kd)\n";


  #    ------------- 2D -------------------------  

  printout "u ## xx$order"."2(i1,i2,i3$kd)=([$rx]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*($rx*$sx)*u ## rs$order(i1,i2,i3$kd)".
     "+([$sx]**2)*u ## ss$order(i1,i2,i3$kd)+($rxx2)*u ## r$order(i1,i2,i3$kd)".
     "+($sxx2)*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## yy$order"."2(i1,i2,i3$kd)=([$ry]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*($ry*$sy)*u ## rs$order(i1,i2,i3$kd)".
     "+([$sy]**2)*u ## ss$order(i1,i2,i3$kd)+($ryy2)*u ## r$order(i1,i2,i3$kd)".
     "+($syy2)*u ## s$order(i1,i2,i3$kd)\n";

  printout "u ## xy$order"."2(i1,i2,i3$kd)=$rx*$ry*u ## rr$order(i1,i2,i3$kd)".
     "+($rx*$sy+$ry*$sx)*u ## rs$order(i1,i2,i3$kd)".
     "+$sx*$sy*u ## ss$order(i1,i2,i3$kd)".
     "+$rxy2*u ## r$order(i1,i2,i3$kd)+$sxy2*u ## s$order(i1,i2,i3$kd)\n";

  printout "u ## xz$order"."2(i1,i2,i3$kd)=0\n";
  printout "u ## yz$order"."2(i1,i2,i3$kd)=0\n";
  printout "u ## zz$order"."2(i1,i2,i3$kd)=0\n";

  printout "u ## laplacian$order"."2(i1,i2,i3$kd)=([$rx]**2+[$ry]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*($rx*$sx+ $ry*$sy)*u ## rs$order(i1,i2,i3$kd)".
     "+([$sx]**2+[$sy]**2)*u ## ss$order(i1,i2,i3$kd)".
     "+($rxx2+$ryy2)*u ## r$order(i1,i2,i3$kd)".
     "+($sxx2+$syy2)*u ## s$order(i1,i2,i3$kd)\n";

    # ..... 3rd and 4th derivatives......  
  if( $order eq '2' )
  {
  $rxx = $rxx2;
  $rxy = $rxy2;
  $ryy = $ryy2;
         	   
  $sxx = $sxx2;
  $sxy = $sxy2;
  $syy = $syy2;

  $rxr   = "rx ## r$order(i1,i2,i3,m,n)";
  $rxs   = "rx ## s$order(i1,i2,i3,m,n)";
  $rxrr  = "rx ## rr$order(i1,i2,i3,m,n)";
  $rxrs  = "rx ## rs$order(i1,i2,i3,m,n)";
  $rxss  = "rx ## ss$order(i1,i2,i3,m,n)";
  $rxrrr = "rx ## rrr$order(i1,i2,i3,m,n)";
  $rxrrs = "rx ## rrs$order(i1,i2,i3,m,n)";
  $rxrss = "rx ## rss$order(i1,i2,i3,m,n)";
  $rxsss = "rx ## sss$order(i1,i2,i3,m,n)";
  $rxrrrr= "rx ## rrrr$order(i1,i2,i3,m,n)";
  $rxrrrs= "rx ## rrrs$order(i1,i2,i3,m,n)";
  $rxrrss= "rx ## rrss$order(i1,i2,i3,m,n)";
  $rxrsss= "rx ## rsss$order(i1,i2,i3,m,n)";
  $rxssss= "rx ## ssss$order(i1,i2,i3,m,n)";

  $rxxx = "rx ## xx$order2(i1,i2,i3,0,0)";
  $rxxy = "rx ## xy$order2(i1,i2,i3,0,0)";
  $rxyy = "rx ## yy$order2(i1,i2,i3,0,0)";
  $ryyy = "rx ## yy$order2(i1,i2,i3,0,1)";

  $sxxx = "rx ## xx$order2(i1,i2,i3,1,0)";
  $sxxy = "rx ## xy$order2(i1,i2,i3,1,0)";
  $sxyy = "rx ## yy$order2(i1,i2,i3,1,0)";
  $syyy = "rx ## yy$order2(i1,i2,i3,1,1)";

  $rxxxx = "rx ## xxx$order2(i1,i2,i3,0,0)";
  $rxxxy = "rx ## xxy$order2(i1,i2,i3,0,0)";
  $rxxyy = "rx ## xyy$order2(i1,i2,i3,0,0)";
  $rxyyy = "rx ## yyy$order2(i1,i2,i3,0,0)";
  $ryyyy = "rx ## yyy$order2(i1,i2,i3,0,1)";

  $sxxxx = "rx ## xxx$order2(i1,i2,i3,1,0)";
  $sxxxy = "rx ## xxy$order2(i1,i2,i3,1,0)";
  $sxxyy = "rx ## xyy$order2(i1,i2,i3,1,0)";
  $sxyyy = "rx ## yyy$order2(i1,i2,i3,1,0)";
  $syyyy = "rx ## yyy$order2(i1,i2,i3,1,1)";


  $ur   = "u ## r$order(i1,i2,i3$kd)";
  $us   = "u ## s$order(i1,i2,i3$kd)";
  $urr  = "u ## rr$order(i1,i2,i3$kd)";
  $urs  = "u ## rs$order(i1,i2,i3$kd)";
  $uss  = "u ## ss$order(i1,i2,i3$kd)";
  $urrr = "u ## rrr$order(i1,i2,i3$kd)";
  $urrs = "u ## rrs$order(i1,i2,i3$kd)";
  $urss = "u ## rss$order(i1,i2,i3$kd)";
  $usss = "u ## sss$order(i1,i2,i3$kd)";
  $urrrr= "u ## rrrr$order(i1,i2,i3$kd)";
  $urrrs= "u ## rrrs$order(i1,i2,i3$kd)";
  $urrss= "u ## rrss$order(i1,i2,i3$kd)";
  $ursss= "u ## rsss$order(i1,i2,i3$kd)";
  $ussss= "u ## ssss$order(i1,i2,i3$kd)";

  # *** these are new *** 041018 --- optionally add the 3rd derivatives through another arg
  # ---- todo : check these, add 3rd derivatives of jacobians

  printout "\nc ..... start: 3rd and 4th derivatives, 2D ....\n";

  printout "#If #OPTION == \"RX\"\n";
  printout "rx ## xx$order"."2(i1,i2,i3,m,n)=([$rx]**2)*rx ## rr$order(i1,i2,i3,m,n)".
     "+2.*($rx*$sx)*rx ## rs$order(i1,i2,i3,m,n)".
     "+([$sx]**2)*rx ## ss$order(i1,i2,i3,m,n)+($rxx2)*rx ## r$order(i1,i2,i3,m,n)".
     "+($sxx2)*rx ## s$order(i1,i2,i3,m,n)\n";
  printout "rx ## yy$order"."2(i1,i2,i3,m,n)=([$ry]**2)*rx ## rr$order(i1,i2,i3,m,n)".
     "+2.*($ry*$sy)*rx ## rs$order(i1,i2,i3,m,n)".
     "+([$sy]**2)*rx ## ss$order(i1,i2,i3,m,n)+($ryy2)*rx ## r$order(i1,i2,i3,m,n)".
     "+($syy2)*rx ## s$order(i1,i2,i3,m,n)\n";

  printout "rx ## xy$order"."2(i1,i2,i3,m,n)=$rx*$ry*rx ## rr$order(i1,i2,i3,m,n)".
     "+($rx*$sy+$ry*$sx)*rx ## rs$order(i1,i2,i3,m,n)".
     "+$sx*$sy*rx ## ss$order(i1,i2,i3,m,n)".
     "+$rxy2*rx ## r$order(i1,i2,i3,m,n)+$sxy2*rx ## s$order(i1,i2,i3,m,n)\n";
  printout "#End\n";

  # these next lines are from deriv.maple -> deriv.h

 printout "rx ## xxx$order2(i1,i2,i3,m,n)=$rxxx*$rxr+$sxxx*$rxs+$rxx*($rx*$rxrr+$sx*$rxrs)+$rx*($rxx*$rxrr+$sxx*$rxrs)+$sxx*($rx*$rxrs+$sx*$rxss)+$sx*($rxx*$rxrs+$sxx*$rxss)+$rx*($rxx*$rxrr+$sxx*$rxrs+$rx*($rx*$rxrrr+$sx*$rxrrs)+$sx*($rx*$rxrrs+$sx*$rxrss))+$sx*($rxx*$rxrs+$sxx*$rxss+$rx*($rx*$rxrrs+$sx*$rxrss)+$sx*($rx*$rxrss+$sx*$rxsss))\n";

 printout "rx ## xxy$order2(i1,i2,i3,m,n)=$rxxy*$rxr+$sxxy*$rxs+$rxy*($rx*$rxrr+$sx*$rxrs)+$rx*($rxy*$rxrr+$sxy*$rxrs)+$sxy*($rx*$rxrs+$sx*$rxss)+$sx*($rxy*$rxrs+$sxy*$rxss)+$ry*($rxx*$rxrr+$sxx*$rxrs+$rx*($rx*$rxrrr+$sx*$rxrrs)+$sx*($rx*$rxrrs+$sx*$rxrss))+$sy*($rxx*$rxrs+$sxx*$rxss+$rx*($rx*$rxrrs+$sx*$rxrss)+$sx*($rx*$rxrss+$sx*$rxsss))\n";

 printout "rx ## xyy$order2(i1,i2,i3,m,n)=$rxyy*$rxr+$sxyy*$rxs+$ryy*($rx*$rxrr+$sx*$rxrs)+$ry*($rxy*$rxrr+$sxy*$rxrs)+$syy*($rx*$rxrs+$sx*$rxss)+$sy*($rxy*$rxrs+$sxy*$rxss)+$ry*($rxy*$rxrr+$sxy*$rxrs+$ry*($rx*$rxrrr+$sx*$rxrrs)+$sy*($rx*$rxrrs+$sx*$rxrss))+$sy*($rxy*$rxrs+$sxy*$rxss+$ry*($rx*$rxrrs+$sx*$rxrss)+$sy*($rx*$rxrss+$sx*$rxsss))\n";

 printout "rx ## yyy$order2(i1,i2,i3,m,n)=$ryyy*$rxr+$syyy*$rxs+$ryy*($ry*$rxrr+$sy*$rxrs)+$ry*($ryy*$rxrr+$syy*$rxrs)+$syy*($ry*$rxrs+$sy*$rxss)+$sy*($ryy*$rxrs+$syy*$rxss)+$ry*($ryy*$rxrr+$syy*$rxrs+$ry*($ry*$rxrrr+$sy*$rxrrs)+$sy*($ry*$rxrrs+$sy*$rxrss))+$sy*($ryy*$rxrs+$syy*$rxss+$ry*($ry*$rxrrs+$sy*$rxrss)+$sy*($ry*$rxrss+$sy*$rxsss))\n";


  # these next lines are from deriv.maple -> deriv.h

 printout "u ## xxx$order2(i1,i2,i3$kd)=$rxxx*$ur+$sxxx*$us+$rxx*($rx*$urr+$sx*$urs)+$rx*($rxx*$urr+$sxx*$urs)+$sxx*($rx*$urs+$sx*$uss)+$sx*($rxx*$urs+$sxx*$uss)+$rx*($rxx*$urr+$sxx*$urs+$rx*($rx*$urrr+$sx*$urrs)+$sx*($rx*$urrs+$sx*$urss))+$sx*($rxx*$urs+$sxx*$uss+$rx*($rx*$urrs+$sx*$urss)+$sx*($rx*$urss+$sx*$usss))\n";

 printout "u ## xxy$order2(i1,i2,i3$kd)=$rxxy*$ur+$sxxy*$us+$rxy*($rx*$urr+$sx*$urs)+$rx*($rxy*$urr+$sxy*$urs)+$sxy*($rx*$urs+$sx*$uss)+$sx*($rxy*$urs+$sxy*$uss)+$ry*($rxx*$urr+$sxx*$urs+$rx*($rx*$urrr+$sx*$urrs)+$sx*($rx*$urrs+$sx*$urss))+$sy*($rxx*$urs+$sxx*$uss+$rx*($rx*$urrs+$sx*$urss)+$sx*($rx*$urss+$sx*$usss))\n";

 printout "u ## xyy$order2(i1,i2,i3$kd)=$rxyy*$ur+$sxyy*$us+$ryy*($rx*$urr+$sx*$urs)+$ry*($rxy*$urr+$sxy*$urs)+$syy*($rx*$urs+$sx*$uss)+$sy*($rxy*$urs+$sxy*$uss)+$ry*($rxy*$urr+$sxy*$urs+$ry*($rx*$urrr+$sx*$urrs)+$sy*($rx*$urrs+$sx*$urss))+$sy*($rxy*$urs+$sxy*$uss+$ry*($rx*$urrs+$sx*$urss)+$sy*($rx*$urss+$sx*$usss))\n";

 printout "u ## yyy$order2(i1,i2,i3$kd)=$ryyy*$ur+$syyy*$us+$ryy*($ry*$urr+$sy*$urs)+$ry*($ryy*$urr+$syy*$urs)+$syy*($ry*$urs+$sy*$uss)+$sy*($ryy*$urs+$syy*$uss)+$ry*($ryy*$urr+$syy*$urs+$ry*($ry*$urrr+$sy*$urrs)+$sy*($ry*$urrs+$sy*$urss))+$sy*($ryy*$urs+$syy*$uss+$ry*($ry*$urrs+$sy*$urss)+$sy*($ry*$urss+$sy*$usss))\n";

 printout "u ## xxxx$order2(i1,i2,i3$kd)=$rxxxx*$ur+$sxxxx*$us+$rxxx*($rx*$urr+$sx*$urs)+2*$rxx*($rxx*$urr+$sxx*$urs)+$rx*($rxxx*$urr+$sxxx*$urs)+$sxxx*($rx*$urs+$sx*$uss)+2*$sxx*($rxx*$urs+$sxx*$uss)+$sx*($rxxx*$urs+$sxxx*$uss)+$rxx*($rxx*$urr+$sxx*$urs+$rx*($rx*$urrr+$sx*$urrs)+$sx*($rx*$urrs+$sx*$urss))+$rx*($rxxx*$urr+$sxxx*$urs+$rxx*($rx*$urrr+$sx*$urrs)+$rx*($rxx*$urrr+$sxx*$urrs)+$sxx*($rx*$urrs+$sx*$urss)+$sx*($rxx*$urrs+$sxx*$urss))+$sxx*($rxx*$urs+$sxx*$uss+$rx*($rx*$urrs+$sx*$urss)+$sx*($rx*$urss+$sx*$usss))+$sx*($rxxx*$urs+$sxxx*$uss+$rxx*($rx*$urrs+$sx*$urss)+$rx*($rxx*$urrs+$sxx*$urss)+$sxx*($rx*$urss+$sx*$usss)+$sx*($rxx*$urss+$sxx*$usss))+$rx*($rxxx*$urr+$sxxx*$urs+$rxx*($rx*$urrr+$sx*$urrs)+$rx*($rxx*$urrr+$sxx*$urrs)+$sxx*($rx*$urrs+$sx*$urss)+$sx*($rxx*$urrs+$sxx*$urss)+$rx*($rxx*$urrr+$sxx*$urrs+$rx*($rx*$urrrr+$sx*$urrrs)+$sx*($rx*$urrrs+$sx*$urrss))+$sx*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss)))+$sx*($rxxx*$urs+$sxxx*$uss+$rxx*($rx*$urrs+$sx*$urss)+$rx*($rxx*$urrs+$sxx*$urss)+$sxx*($rx*$urss+$sx*$usss)+$sx*($rxx*$urss+$sxx*$usss)+$rx*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss))+$sx*($rxx*$urss+$sxx*$usss+$rx*($rx*$urrss+$sx*$ursss)+$sx*($rx*$ursss+$sx*$ussss)))\n";

 printout "u ## xxxy$order2(i1,i2,i3$kd)=$rxxxy*$ur+$sxxxy*$us+$rxxy*($rx*$urr+$sx*$urs)+$rxx*($rxy*$urr+$sxy*$urs)+$rxy*($rxx*$urr+$sxx*$urs)+$rx*($rxxy*$urr+$sxxy*$urs)+$sxxy*($rx*$urs+$sx*$uss)+$sxx*($rxy*$urs+$sxy*$uss)+$sxy*($rxx*$urs+$sxx*$uss)+$sx*($rxxy*$urs+$sxxy*$uss)+$rxy*($rxx*$urr+$sxx*$urs+$rx*($rx*$urrr+$sx*$urrs)+$sx*($rx*$urrs+$sx*$urss))+$rx*($rxxy*$urr+$sxxy*$urs+$rxy*($rx*$urrr+$sx*$urrs)+$rx*($rxy*$urrr+$sxy*$urrs)+$sxy*($rx*$urrs+$sx*$urss)+$sx*($rxy*$urrs+$sxy*$urss))+$sxy*($rxx*$urs+$sxx*$uss+$rx*($rx*$urrs+$sx*$urss)+$sx*($rx*$urss+$sx*$usss))+$sx*($rxxy*$urs+$sxxy*$uss+$rxy*($rx*$urrs+$sx*$urss)+$rx*($rxy*$urrs+$sxy*$urss)+$sxy*($rx*$urss+$sx*$usss)+$sx*($rxy*$urss+$sxy*$usss))+$ry*($rxxx*$urr+$sxxx*$urs+$rxx*($rx*$urrr+$sx*$urrs)+$rx*($rxx*$urrr+$sxx*$urrs)+$sxx*($rx*$urrs+$sx*$urss)+$sx*($rxx*$urrs+$sxx*$urss)+$rx*($rxx*$urrr+$sxx*$urrs+$rx*($rx*$urrrr+$sx*$urrrs)+$sx*($rx*$urrrs+$sx*$urrss))+$sx*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss)))+$sy*($rxxx*$urs+$sxxx*$uss+$rxx*($rx*$urrs+$sx*$urss)+$rx*($rxx*$urrs+$sxx*$urss)+$sxx*($rx*$urss+$sx*$usss)+$sx*($rxx*$urss+$sxx*$usss)+$rx*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss))+$sx*($rxx*$urss+$sxx*$usss+$rx*($rx*$urrss+$sx*$ursss)+$sx*($rx*$ursss+$sx*$ussss)))\n";

 printout "u ## xxyy$order2(i1,i2,i3$kd)=$rxxyy*$ur+$sxxyy*$us+$rxyy*($rx*$urr+$sx*$urs)+2*$rxy*($rxy*$urr+$sxy*$urs)+$rx*($rxyy*$urr+$sxyy*$urs)+$sxyy*($rx*$urs+$sx*$uss)+2*$sxy*($rxy*$urs+$sxy*$uss)+$sx*($rxyy*$urs+$sxyy*$uss)+$ryy*($rxx*$urr+$sxx*$urs+$rx*($rx*$urrr+$sx*$urrs)+$sx*($rx*$urrs+$sx*$urss))+$ry*($rxxy*$urr+$sxxy*$urs+$rxy*($rx*$urrr+$sx*$urrs)+$rx*($rxy*$urrr+$sxy*$urrs)+$sxy*($rx*$urrs+$sx*$urss)+$sx*($rxy*$urrs+$sxy*$urss))+$syy*($rxx*$urs+$sxx*$uss+$rx*($rx*$urrs+$sx*$urss)+$sx*($rx*$urss+$sx*$usss))+$sy*($rxxy*$urs+$sxxy*$uss+$rxy*($rx*$urrs+$sx*$urss)+$rx*($rxy*$urrs+$sxy*$urss)+$sxy*($rx*$urss+$sx*$usss)+$sx*($rxy*$urss+$sxy*$usss))+$ry*($rxxy*$urr+$sxxy*$urs+$rxy*($rx*$urrr+$sx*$urrs)+$rx*($rxy*$urrr+$sxy*$urrs)+$sxy*($rx*$urrs+$sx*$urss)+$sx*($rxy*$urrs+$sxy*$urss)+$ry*($rxx*$urrr+$sxx*$urrs+$rx*($rx*$urrrr+$sx*$urrrs)+$sx*($rx*$urrrs+$sx*$urrss))+$sy*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss)))+$sy*($rxxy*$urs+$sxxy*$uss+$rxy*($rx*$urrs+$sx*$urss)+$rx*($rxy*$urrs+$sxy*$urss)+$sxy*($rx*$urss+$sx*$usss)+$sx*($rxy*$urss+$sxy*$usss)+$ry*($rxx*$urrs+$sxx*$urss+$rx*($rx*$urrrs+$sx*$urrss)+$sx*($rx*$urrss+$sx*$ursss))+$sy*($rxx*$urss+$sxx*$usss+$rx*($rx*$urrss+$sx*$ursss)+$sx*($rx*$ursss+$sx*$ussss)))\n";

 printout "u ## xyyy$order2(i1,i2,i3$kd)=$rxyyy*$ur+$sxyyy*$us+$ryyy*($rx*$urr+$sx*$urs)+2*$ryy*($rxy*$urr+$sxy*$urs)+$ry*($rxyy*$urr+$sxyy*$urs)+$syyy*($rx*$urs+$sx*$uss)+2*$syy*($rxy*$urs+$sxy*$uss)+$sy*($rxyy*$urs+$sxyy*$uss)+$ryy*($rxy*$urr+$sxy*$urs+$ry*($rx*$urrr+$sx*$urrs)+$sy*($rx*$urrs+$sx*$urss))+$ry*($rxyy*$urr+$sxyy*$urs+$ryy*($rx*$urrr+$sx*$urrs)+$ry*($rxy*$urrr+$sxy*$urrs)+$syy*($rx*$urrs+$sx*$urss)+$sy*($rxy*$urrs+$sxy*$urss))+$syy*($rxy*$urs+$sxy*$uss+$ry*($rx*$urrs+$sx*$urss)+$sy*($rx*$urss+$sx*$usss))+$sy*($rxyy*$urs+$sxyy*$uss+$ryy*($rx*$urrs+$sx*$urss)+$ry*($rxy*$urrs+$sxy*$urss)+$syy*($rx*$urss+$sx*$usss)+$sy*($rxy*$urss+$sxy*$usss))+$ry*($rxyy*$urr+$sxyy*$urs+$ryy*($rx*$urrr+$sx*$urrs)+$ry*($rxy*$urrr+$sxy*$urrs)+$syy*($rx*$urrs+$sx*$urss)+$sy*($rxy*$urrs+$sxy*$urss)+$ry*($rxy*$urrr+$sxy*$urrs+$ry*($rx*$urrrr+$sx*$urrrs)+$sy*($rx*$urrrs+$sx*$urrss))+$sy*($rxy*$urrs+$sxy*$urss+$ry*($rx*$urrrs+$sx*$urrss)+$sy*($rx*$urrss+$sx*$ursss)))+$sy*($rxyy*$urs+$sxyy*$uss+$ryy*($rx*$urrs+$sx*$urss)+$ry*($rxy*$urrs+$sxy*$urss)+$syy*($rx*$urss+$sx*$usss)+$sy*($rxy*$urss+$sxy*$usss)+$ry*($rxy*$urrs+$sxy*$urss+$ry*($rx*$urrrs+$sx*$urrss)+$sy*($rx*$urrss+$sx*$ursss))+$sy*($rxy*$urss+$sxy*$usss+$ry*($rx*$urrss+$sx*$ursss)+$sy*($rx*$ursss+$sx*$ussss)))\n";

 printout "u ## yyyy$order2(i1,i2,i3$kd)=$ryyyy*$ur+$syyyy*$us+$ryyy*($ry*$urr+$sy*$urs)+2*$ryy*($ryy*$urr+$syy*$urs)+$ry*($ryyy*$urr+$syyy*$urs)+$syyy*($ry*$urs+$sy*$uss)+2*$syy*($ryy*$urs+$syy*$uss)+$sy*($ryyy*$urs+$syyy*$uss)+$ryy*($ryy*$urr+$syy*$urs+$ry*($ry*$urrr+$sy*$urrs)+$sy*($ry*$urrs+$sy*$urss))+$ry*($ryyy*$urr+$syyy*$urs+$ryy*($ry*$urrr+$sy*$urrs)+$ry*($ryy*$urrr+$syy*$urrs)+$syy*($ry*$urrs+$sy*$urss)+$sy*($ryy*$urrs+$syy*$urss))+$syy*($ryy*$urs+$syy*$uss+$ry*($ry*$urrs+$sy*$urss)+$sy*($ry*$urss+$sy*$usss))+$sy*($ryyy*$urs+$syyy*$uss+$ryy*($ry*$urrs+$sy*$urss)+$ry*($ryy*$urrs+$syy*$urss)+$syy*($ry*$urss+$sy*$usss)+$sy*($ryy*$urss+$syy*$usss))+$ry*($ryyy*$urr+$syyy*$urs+$ryy*($ry*$urrr+$sy*$urrs)+$ry*($ryy*$urrr+$syy*$urrs)+$syy*($ry*$urrs+$sy*$urss)+$sy*($ryy*$urrs+$syy*$urss)+$ry*($ryy*$urrr+$syy*$urrs+$ry*($ry*$urrrr+$sy*$urrrs)+$sy*($ry*$urrrs+$sy*$urrss))+$sy*($ryy*$urrs+$syy*$urss+$ry*($ry*$urrrs+$sy*$urrss)+$sy*($ry*$urrss+$sy*$ursss)))+$sy*($ryyy*$urs+$syyy*$uss+$ryy*($ry*$urrs+$sy*$urss)+$ry*($ryy*$urrs+$syy*$urss)+$syy*($ry*$urss+$sy*$usss)+$sy*($ryy*$urss+$syy*$usss)+$ry*($ryy*$urrs+$syy*$urss+$ry*($ry*$urrrs+$sy*$urrss)+$sy*($ry*$urrss+$sy*$ursss))+$sy*($ryy*$urss+$syy*$usss+$ry*($ry*$urrss+$sy*$ursss)+$sy*($ry*$ursss+$sy*$ussss)))\n";


 printout "u ## LapSq$order2(i1,i2,i3$kd)=u ## xxxx$order2(i1,i2,i3$kd)+u ## yyyy$order2(i1,i2,i3$kd)+2.*u ## xxyy$order2(i1,i2,i3$kd)\n";

   printout "c ..... end: 3rd and 4th derivatives, 2D ....\n\n";
  } 

#   printout "u ## xxx$order"."2(i1,i2,i3$kd)=".
#      "([$rx]**3)*$urrr+3.*($rx*$sx)*($rx*$urrs+$sx*$urss)+([$sx]**3)*$usss".
#      "+3.*($rx*$rxx2*$urr+$rxx2*$sx*$urs+$rx*$sxx2*$urs+$sx*$sxx2*$uss)".
#      "+$rxxx2*$ur +$sxxx*$us\n";
# 
#   printout "u ## yyy$order"."2(i1,i2,i3$kd)=".
#      "([$ry]**3)*$urrr+3.*($ry*$sy)*($ry*$urrs+$sy*$urss)+([$sy]**3)*$usss".
#      "+3.*($ry*$ryy2*$urr+$ryy2*$sy*$urs+$ry*$syy2*$urs+$sy*$syy2*$uss)".
#      "+$ryyy2*$ur +$syyy*$us\n";
# 
#   printout "u ## xxy$order"."2(i1,i2,i3$kd)=".
#      " ([$rx]**2*$ry)*$urrr +([$rx]**2*$sy+2.*$rx*$sx*$ry)*$urrs+([$sx]**2*$ry+2.*$rx*$sx*$sy)*$urss".
#      "+([$sx]**2*$sy)*$usss +(2.*$rx*$rxy2+$rxx2*$ry)*$urr+(2.*$sx*$sxy2+$sxx2*$sy)*$uss".
#      "+(2.*$rxy2*$sx+2.*$rx*$sxy2+$rxx2*$sy+$ry*$sxx2)*$urs +$rxxy2*$ur+$sxxy2*$us\n";
# 
#   printout "u ## xyy$order"."2(i1,i2,i3$kd)=".
#      " ([$ry]**2*$rx)*$urrr +([$ry]**2*$sx+2.*$ry*$sy*$rx)*$urrs+([$sy]**2*$rx+2.*$ry*$sy*$sx)*$urss".
#      "+([$sy]**2*$sx)*$usss +(2.*$ry*$rxy2+$ryy2*$rx)*$urr+(2.*$sy*$sxy2+$syy2*$sx)*$uss".
#      "+(2.*$rxy2*$sy+2.*$ry*$sxy2+$ryy2*$sx+$rx*$syy2)*$urs +$rxyy2*$ur+$sxyy2*$us\n";
# 
# 
#    printout "u ## xxxx$order"."2(i1,i2,i3$kd)=".
#      "([$rx]**4)*$urrrr+4.*([$rx]**3)*$sx*$urrrs+6.*([$rx]**2)*([$sx]**2)*$urrss+4.*([$sx]**3)*$rx*$ursss".
#      "+([$sx]**4)*$ussss +6.*([$rx]**2)*$rxx2*$urrr +6.*($rxx2*$rx*$sx+([$rx]**2)*$sxx2)*$urrs".
#      "+6.*($sxx2*$rx*$sx+([$sx]**2)*$rxx2)*$urss".
# 
#      "+3.*($rx*$rxx2*$urr+$rxx2*$sx*$urs+$rx*$sxx2*$urs+$sx*$sxx2*$uss)".
#      "+$rxxx2*$ur +$sxxx*$us\n";



  #    ------------- 3D -------------------------  

  printout "u ## xx$order"."3(i1,i2,i3$kd)=[$rx]**2*u ## rr$order(i1,i2,i3$kd)+[$sx]**2*u ## ss$order(i1,i2,i3$kd)".
     "+[$tx]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*$rx*$sx*u ## rs$order(i1,i2,i3$kd)+2.*$rx*$tx*u ## rt$order(i1,i2,i3$kd)".
     "+2.*$sx*$tx*u ## st$order(i1,i2,i3$kd)+".
     "$rxx3*u ## r$order(i1,i2,i3$kd)+$sxx3*u ## s$order(i1,i2,i3$kd)".
     "+$txx3*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## yy$order"."3(i1,i2,i3$kd)=".
                   "[$ry]**2*u ## rr$order(i1,i2,i3$kd)".
                  "+[$sy]**2*u ## ss$order(i1,i2,i3$kd)".
                  "+[$ty]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*$ry*$sy*u ## rs$order(i1,i2,i3$kd)".
     "+2.*$ry*$ty*u ## rt$order(i1,i2,i3$kd)".
     "+2.*$sy*$ty*u ## st$order(i1,i2,i3$kd)".
                    "+$ryy3*u ## r$order(i1,i2,i3$kd)".
                    "+$syy3*u ## s$order(i1,i2,i3$kd)".
		    "+$tyy3*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## zz$order"."3(i1,i2,i3$kd)=".
                   "[$rz]**2*u ## rr$order(i1,i2,i3$kd)".
                  "+[$sz]**2*u ## ss$order(i1,i2,i3$kd)".
                  "+[$tz]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*$rz*$sz*u ## rs$order(i1,i2,i3$kd)".
     "+2.*$rz*$tz*u ## rt$order(i1,i2,i3$kd)".
     "+2.*$sz*$tz*u ## st$order(i1,i2,i3$kd)".
                    "+$rzz3*u ## r$order(i1,i2,i3$kd)".
                    "+$szz3*u ## s$order(i1,i2,i3$kd)".
                    "+$tzz3*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## xy$order"."3(i1,i2,i3$kd)=".
        "$rx*$ry*u ## rr$order(i1,i2,i3$kd)".
       "+$sx*$sy*u ## ss$order(i1,i2,i3$kd)".
       "+$tx*$ty*u ## tt$order(i1,i2,i3$kd)".
     "+($rx*$sy".
      "+$ry*$sx)*u ## rs$order(i1,i2,i3$kd)".
     "+($rx*$ty".
      "+$ry*$tx)*u ## rt$order(i1,i2,i3$kd)".
     "+($sx*$ty".
      "+$sy*$tx)*u ## st$order(i1,i2,i3$kd)".
                   "+$rxy3*u ## r$order(i1,i2,i3$kd)".
                   "+$sxy3*u ## s$order(i1,i2,i3$kd)".
                   "+$txy3*u ## t$order(i1,i2,i3$kd)\n";
      printout "u ## xz$order"."3(i1,i2,i3$kd)=".
        "$rx*$rz*u ## rr$order(i1,i2,i3$kd)".
       "+$sx*$sz*u ## ss$order(i1,i2,i3$kd)".
       "+$tx*$tz*u ## tt$order(i1,i2,i3$kd)".
     "+($rx*$sz".
      "+$rz*$sx)*u ## rs$order(i1,i2,i3$kd)".
     "+($rx*$tz".
      "+$rz*$tx)*u ## rt$order(i1,i2,i3$kd)".
     "+($sx*$tz".
      "+$sz*$tx)*u ## st$order(i1,i2,i3$kd)".
                   "+$rxz3*u ## r$order(i1,i2,i3$kd)".
                   "+$sxz3*u ## s$order(i1,i2,i3$kd)".
                   "+$txz3*u ## t$order(i1,i2,i3$kd)\n";
      printout "u ## yz$order"."3(i1,i2,i3$kd)=".
        "$ry*$rz*u ## rr$order(i1,i2,i3$kd)".
       "+$sy*$sz*u ## ss$order(i1,i2,i3$kd)".
       "+$ty*$tz*u ## tt$order(i1,i2,i3$kd)".
     "+($ry*$sz".
      "+$rz*$sy)*u ## rs$order(i1,i2,i3$kd)".
     "+($ry*$tz".
      "+$rz*$ty)*u ## rt$order(i1,i2,i3$kd)".
     "+($sy*$tz".
      "+$sz*$ty)*u ## st$order(i1,i2,i3$kd)".
                   "+$ryz3*u ## r$order(i1,i2,i3$kd)".
                   "+$syz3*u ## s$order(i1,i2,i3$kd)".
                   "+$tyz3*u ## t$order(i1,i2,i3$kd)\n";
       
  printout "u ## laplacian$order"."3(i1,i2,i3$kd)=".
       "([$rx]**2+[$ry]**2+[$rz]**2)*u ## rr$order(i1,i2,i3$kd)". 
       "+([$sx]**2+[$sy]**2+[$sz]**2)*u ## ss$order(i1,i2,i3$kd)". 
       "+([$tx]**2+[$ty]**2+[$tz]**2)*u ## tt$order(i1,i2,i3$kd)". 
       "+2.*($rx*$sx+ $ry*$sy+$rz*$sz)*u ## rs$order(i1,i2,i3$kd)". 
       "+2.*($rx*$tx+ $ry*$ty+$rz*$tz)*u ## rt$order(i1,i2,i3$kd)". 
       "+2.*($sx*$tx+ $sy*$ty+$sz*$tz)*u ## st$order(i1,i2,i3$kd)". 
       "+($rxx3+$ryy3+$rzz3)*u ## r$order(i1,i2,i3$kd)". 
       "+($sxx3+$syy3+$szz3)*u ## s$order(i1,i2,i3$kd)". 
       "+($txx3+$tyy3+$tzz3)*u ## t$order(i1,i2,i3$kd)\n";



  printout "c============================================================================================\n";
  printout "c Define derivatives for a rectangular grid\n";
  printout "c\n";
  printout "c============================================================================================\n";

  $h12 = "dx ## 12";
  $h22 = "dx ## 22";
  $h14 = "dx ## 14";
  $h24 = "dx ## 24";
  $h16 = "dx ## 16";
  $h26 = "dx ## 26";
  $h18 = "dx ## 18";
  $h28 = "dx ## 28";

  $h41 = "dx ## 41";
  $h42 = "dx ## 42";

  if( $order eq '2' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$h12(kd) = 1./(2.*dx(kd))\n"; 
    printout "$h22(kd) = 1./([dx(kd)]**2)\n"; # add [ .. ] so we can easily change to SQR( ) for C++
    printout "#End\n";
    printout "\n";

    printout "u ## x23r(i1,i2,i3$kd)=(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))*$h12(0)\n";
    printout "u ## y23r(i1,i2,i3$kd)=(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))*$h12(1)\n";
    printout "u ## z23r(i1,i2,i3$kd)=(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))*$h12(2)\n";

    printout "\n";
    printout "u ## xx23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd)) )*$h22(0)\n";
    printout "u ## yy23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd)) )*$h22(1)\n";
    printout "u ## xy23r(i1,i2,i3$kd)=(u ## x23r(i1,i2+1,i3$kd)-u ## x23r(i1,i2-1,i3$kd))*$h12(1)\n";
    printout "u ## zz23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd)) )*$h22(2)\n";
    printout "u ## xz23r(i1,i2,i3$kd)=(u ## x23r(i1,i2,i3+1$kd)-u ## x23r(i1,i2,i3-1$kd))*$h12(2)\n";
    printout "u ## yz23r(i1,i2,i3$kd)=(u ## y23r(i1,i2,i3+1$kd)-u ## y23r(i1,i2,i3-1$kd))*$h12(2)\n";

    printout "\n";
  }
  elsif( $order eq '4' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$h41(kd) = 1./(12.*dx(kd))\n";
    printout "$h42(kd) = 1./(12.*[dx(kd)]**2)\n";
    printout "#End\n";

    printout "u ## x43r(i1,i2,i3$kd)=(8.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)))*$h41(0)\n";

    printout "u ## y43r(i1,i2,i3$kd)=(8.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)))*$h41(1)\n"; 
    printout "u ## z43r(i1,i2,i3$kd)=(8.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)))*$h41(2)\n"; 

    printout "u ## xx43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
             "-(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd)) )*$h42(0) \n"; 

    printout "u ## yy43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
             "-(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd)) )*$h42(1) \n";

    printout "u ## zz43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
             "-(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd)) )*$h42(2)\n"; 

    printout "u ## xy43r(i1,i2,i3$kd)=".
         "( (u(i1+2,i2+2,i3$kd)-u(i1-2,i2+2,i3$kd)-".
           " u(i1+2,i2-2,i3$kd)+u(i1-2,i2-2,i3$kd)) ".
       "+8.*(u(i1-1,i2+2,i3$kd)-u(i1-1,i2-2,i3$kd)-".
            "u(i1+1,i2+2,i3$kd)+u(i1+1,i2-2,i3$kd) ". 
           "+u(i1+2,i2-1,i3$kd)-u(i1-2,i2-1,i3$kd)-".
            "u(i1+2,i2+1,i3$kd)+u(i1-2,i2+1,i3$kd))". 
      "+64.*(u(i1+1,i2+1,i3$kd)-u(i1-1,i2+1,i3$kd)-".
           " u(i1+1,i2-1,i3$kd)+u(i1-1,i2-1,i3$kd))". 
                           ")*($h41(0)*$h41(1))\n"; 

    printout "u ## xz43r(i1,i2,i3$kd)=". 
         "( (u(i1+2,i2,i3+2$kd)-u(i1-2,i2,i3+2$kd)-".
            "u(i1+2,i2,i3-2$kd)+u(i1-2,i2,i3-2$kd)) ".
       "+8.*(u(i1-1,i2,i3+2$kd)-u(i1-1,i2,i3-2$kd)-".
            "u(i1+1,i2,i3+2$kd)+u(i1+1,i2,i3-2$kd) ". 
           "+u(i1+2,i2,i3-1$kd)-u(i1-2,i2,i3-1$kd)-".
           " u(i1+2,i2,i3+1$kd)+u(i1-2,i2,i3+1$kd)) ".
      "+64.*(u(i1+1,i2,i3+1$kd)-u(i1-1,i2,i3+1$kd)-".
            "u(i1+1,i2,i3-1$kd)+u(i1-1,i2,i3-1$kd)) ".
                ")*($h41(0)*$h41(2))\n";
                            
    printout "u ## yz43r(i1,i2,i3$kd)=".
         "( (u(i1,i2+2,i3+2$kd)-u(i1,i2-2,i3+2$kd)-".
            "u(i1,i2+2,i3-2$kd)+u(i1,i2-2,i3-2$kd)) ".
       "+8.*(u(i1,i2-1,i3+2$kd)-u(i1,i2-1,i3-2$kd)-".
            "u(i1,i2+1,i3+2$kd)+u(i1,i2+1,i3-2$kd) ". 
           "+u(i1,i2+2,i3-1$kd)-u(i1,i2-2,i3-1$kd)-".
            "u(i1,i2+2,i3+1$kd)+u(i1,i2-2,i3+1$kd)) ".
      "+64.*(u(i1,i2+1,i3+1$kd)-u(i1,i2-1,i3+1$kd)-".
            "u(i1,i2+1,i3-1$kd)+u(i1,i2-1,i3-1$kd)) ".
                     ")*($h41(1)*$h41(2))\n";


  }
  elsif( $order eq '6' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "$h16(kd) = 1./(60.*dx(kd))\n"; 
    printout "$h26(kd) = 1./(180.*[dx(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## x63r(i1,i2,i3$kd)=(45.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-9.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))". # /60
             "+(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd)))*$h16(0)\n";
    printout "u ## y63r(i1,i2,i3$kd)=(45.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-9.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd)))*$h16(1)\n";
    printout "u ## z63r(i1,i2,i3$kd)=(45.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-9.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd)))*$h16(2)\n";

    printout "\n";
    printout "u ## xx63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
         "-27.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+2.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd)) )*$h26(0)\n"; # /180
    printout "u ## yy63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-27.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+2.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd)) )*$h26(1)\n";
    printout "u ## zz63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-27.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+2.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd)) )*$h26(2)\n";

    printout "u ## xy63r(i1,i2,i3$kd)=(45.*(u ## x63r(i1,i2+1,i3$kd)-u ## x63r(i1,i2-1,i3$kd))".
         "-9.*(u ## x63r(i1,i2+2,i3$kd)-u ## x63r(i1,i2-2,i3$kd))+(u ## x63r(i1,i2+3,i3$kd)-u ## x63r(i1,i2-3,i3$kd)))*$h16(1)\n";
    printout "u ## xz63r(i1,i2,i3$kd)=(45.*(u ## x63r(i1,i2,i3+1$kd)-u ## x63r(i1,i2,i3-1$kd))".
         "-9.*(u ## x63r(i1,i2,i3+2$kd)-u ## x63r(i1,i2,i3-2$kd))+(u ## x63r(i1,i2,i3+3$kd)-u ## x63r(i1,i2,i3-3$kd)))*$h16(2)\n";
    printout "u ## yz63r(i1,i2,i3$kd)=(45.*(u ## y63r(i1,i2,i3+1$kd)-u ## y63r(i1,i2,i3-1$kd))".
         "-9.*(u ## y63r(i1,i2,i3+2$kd)-u ## y63r(i1,i2,i3-2$kd))+(u ## y63r(i1,i2,i3+3$kd)-u ## y63r(i1,i2,i3-3$kd)))*$h16(2)\n";

    printout "\n";
  }
  else
  {
     # --- 8th order ----
    printout "#If #OPTION == \"RX\"\n";
    printout "$h18(kd) = 1./(840.*dx(kd))\n"; 
    printout "$h28(kd) = 1./(5040.*[dx(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## x83r(i1,i2,i3$kd)=(672.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-168.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))".
             "+32.*(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd))-3.*(u(i1+4,i2,i3$kd)-u(i1-4,i2,i3$kd)))*$h18(0)\n";
    printout "u ## y83r(i1,i2,i3$kd)=(672.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-168.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+32.*(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd))-3.*(u(i1,i2+4,i3$kd)-u(i1,i2-4,i3$kd)))*$h18(1)\n";
    printout "u ## z83r(i1,i2,i3$kd)=(672.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-168.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+32.*(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd))-3.*(u(i1,i2,i3+4$kd)-u(i1,i2,i3-4$kd)))*$h18(2)\n";

    printout "\n";
    printout "u ## xx83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".  # /5040
         "-1008.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+128.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd))".
         "-9.*(u(i1+4,i2,i3$kd)+u(i1-4,i2,i3$kd)) )*$h28(0)\n"; # /180
    printout "u ## yy83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-1008.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+128.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd))".
         "-9.*(u(i1,i2+4,i3$kd)+u(i1,i2-4,i3$kd)) )*$h28(1)\n";
    printout "u ## zz83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-1008.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+128.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd))".
         "-9.*(u(i1,i2,i3+4$kd)+u(i1,i2,i3-4$kd)) )*$h28(2)\n";

    printout "u ## xy83r(i1,i2,i3$kd)=(672.*(u ## x83r(i1,i2+1,i3$kd)-u ## x83r(i1,i2-1,i3$kd))".
         "-168.*(u ## x83r(i1,i2+2,i3$kd)-u ## x83r(i1,i2-2,i3$kd))+32.*(u ## x83r(i1,i2+3,i3$kd)-u ## x83r(i1,i2-3,i3$kd))".
         "-3.*(u ## x83r(i1,i2+4,i3$kd)-u ## x83r(i1,i2-4,i3$kd)))*$h18(1)\n";
    printout "u ## xz83r(i1,i2,i3$kd)=(672.*(u ## x83r(i1,i2,i3+1$kd)-u ## x83r(i1,i2,i3-1$kd))".
         "-168.*(u ## x83r(i1,i2,i3+2$kd)-u ## x83r(i1,i2,i3-2$kd))+32.*(u ## x83r(i1,i2,i3+3$kd)-u ## x83r(i1,i2,i3-3$kd))".
         "-3.*(u ## x83r(i1,i2,i3+4$kd)-u ## x83r(i1,i2,i3-4$kd)))*$h18(2)\n";
    printout "u ## yz83r(i1,i2,i3$kd)=(672.*(u ## y83r(i1,i2,i3+1$kd)-u ## y83r(i1,i2,i3-1$kd))".
         "-168.*(u ## y83r(i1,i2,i3+2$kd)-u ## y83r(i1,i2,i3-2$kd))+32.*(u ## y83r(i1,i2,i3+3$kd)-u ## y83r(i1,i2,i3-3$kd))".
         "-3.*(u ## y83r(i1,i2,i3+4$kd)-u ## y83r(i1,i2,i3-4$kd)))*$h18(2)\n";

    printout "\n";
  }

   # here are the rectangular versions that can be defined from the previous defintions

   printout "u ## x$order"."1r(i1,i2,i3$kd)= u ## x$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## y$order"."1r(i1,i2,i3$kd)= u ## y$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## z$order"."1r(i1,i2,i3$kd)= u ## z$order"."3r(i1,i2,i3$kd)\n"; 
			   
   printout "u ## xx$order"."1r(i1,i2,i3$kd)= u ## xx$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yy$order"."1r(i1,i2,i3$kd)= u ## yy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## zz$order"."1r(i1,i2,i3$kd)= u ## zz$order"."3r(i1,i2,i3$kd)\n";
			   
   printout "u ## xy$order"."1r(i1,i2,i3$kd)= u ## xy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## xz$order"."1r(i1,i2,i3$kd)= u ## xz$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yz$order"."1r(i1,i2,i3$kd)= u ## yz$order"."3r(i1,i2,i3$kd)\n";
                           
   printout "u ## laplacian$order"."1r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)\n";

   printout "u ## x$order"."2r(i1,i2,i3$kd)= u ## x$order"."3r(i1,i2,i3$kd)\n"; 
   printout "u ## y$order"."2r(i1,i2,i3$kd)= u ## y$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## z$order"."2r(i1,i2,i3$kd)= u ## z$order"."3r(i1,i2,i3$kd)\n"; 
			   
   printout "u ## xx$order"."2r(i1,i2,i3$kd)= u ## xx$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yy$order"."2r(i1,i2,i3$kd)= u ## yy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## zz$order"."2r(i1,i2,i3$kd)= u ## zz$order"."3r(i1,i2,i3$kd)\n";
			   
   printout "u ## xy$order"."2r(i1,i2,i3$kd)= u ## xy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## xz$order"."2r(i1,i2,i3$kd)= u ## xz$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yz$order"."2r(i1,i2,i3$kd)= u ## yz$order"."3r(i1,i2,i3$kd)\n";
                           
   printout "u ## laplacian$order"."2r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)+u ## yy$order"."3r(i1,i2,i3$kd)\n";

   printout "u ## laplacian$order"."3r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)+u ## yy$order"."3r(i1,i2,i3$kd)+u ## zz$order"."3r(i1,i2,i3$kd)\n";


   # 3rd and 4th derivatives: (do here since they depend on previous 
  if( $order eq '2' )
  {
    printout "u ## xxx22r(i1,i2,i3$kd)=(-2.*(u ## (i1+1,i2,i3$kd)-u ## (i1-1,i2,i3$kd))".
             "+(u ## (i1+2,i2,i3$kd)-u ## (i1-2,i2,i3$kd)) )*$h22(0)*$h12(0)\n";
    printout "u ## yyy22r(i1,i2,i3$kd)=(-2.*(u ## (i1,i2+1,i3$kd)-u ## (i1,i2-1,i3$kd))".
             "+(u ## (i1,i2+2,i3$kd)-u ## (i1,i2-2,i3$kd)) )*$h22(1)*$h12(1)\n";

    printout "u ## xxy22r(i1,i2,i3$kd)=( u ## xx22r(i1,i2+1,i3$kd)-u ## xx22r(i1,i2-1,i3$kd))/(2.*dx(1))\n";
    printout "u ## xyy22r(i1,i2,i3$kd)=( u ## yy22r(i1+1,i2,i3$kd)-u ## yy22r(i1-1,i2,i3$kd))/(2.*dx(0))\n";

    printout "u ## xxxx22r(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd))".
                       " +(u ## (i1+2,i2,i3$kd)+u ## (i1-2,i2,i3$kd)) )/(dx(0)**4)\n";

    printout "u ## yyyy22r(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
                       " +(u ## (i1,i2+2,i3$kd)+u ## (i1,i2-2,i3$kd)) )/(dx(1)**4)\n";

    printout "u ## xxyy22r(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
             "-2.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
       "+   (u ## (i1+1,i2+1,i3$kd)+u ## (i1-1,i2+1,i3$kd)+u ## (i1+1,i2-1,i3$kd)+u ## (i1-1,i2-1,i3$kd)) )/(dx(0)**2*dx(1)**2)\n";

   #  2D laplacian squared = u.xxxx + 2 u.xxyy + u.yyyy
    printout "u ## LapSq22r(i1,i2,i3$kd)= ( 6.*u ## (i1,i2,i3$kd)".
             "- 4.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd))".
             "+(u ## (i1+2,i2,i3$kd)+u ## (i1-2,i2,i3$kd)) )/(dx(0)**4)".
             "+( 6.*u ## (i1,i2,i3$kd)".
             "-4.*(u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
             " +(u ## (i1,i2+2,i3$kd)+u ## (i1,i2-2,i3$kd)) )/(dx(1)**4)".
             "+( 8.*u ## (i1,i2,i3$kd)".
             "-4.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
       "+2.*(u ## (i1+1,i2+1,i3$kd)+u ## (i1-1,i2+1,i3$kd)+u ## (i1+1,i2-1,i3$kd)+u ## (i1-1,i2-1,i3$kd)) )/(dx(0)**2*dx(1)**2)\n";

    printout "u ## xxx23r(i1,i2,i3$kd)=(-2.*(u ## (i1+1,i2,i3$kd)-u ## (i1-1,i2,i3$kd))".
             "+(u ## (i1+2,i2,i3$kd)-u ## (i1-2,i2,i3$kd)) )*$h22(0)*$h12(0)\n";
    printout "u ## yyy23r(i1,i2,i3$kd)=(-2.*(u ## (i1,i2+1,i3$kd)-u ## (i1,i2-1,i3$kd))".
             "+(u ## (i1,i2+2,i3$kd)-u ## (i1,i2-2,i3$kd)) )*$h22(1)*$h12(1)\n";
    printout "u ## zzz23r(i1,i2,i3$kd)=(-2.*(u ## (i1,i2,i3+1$kd)-u ## (i1,i2,i3-1$kd))".
             "+(u ## (i1,i2,i3+2$kd)-u ## (i1,i2,i3-2$kd)) )*$h22(1)*$h12(2)\n";

    printout "u ## xxy23r(i1,i2,i3$kd)=( u ## xx22r(i1,i2+1,i3$kd)-u ## xx22r(i1,i2-1,i3$kd))/(2.*dx(1))\n";
    printout "u ## xyy23r(i1,i2,i3$kd)=( u ## yy22r(i1+1,i2,i3$kd)-u ## yy22r(i1-1,i2,i3$kd))/(2.*dx(0))\n";
    printout "u ## xxz23r(i1,i2,i3$kd)=( u ## xx22r(i1,i2,i3+1$kd)-u ## xx22r(i1,i2,i3-1$kd))/(2.*dx(2))\n";
    printout "u ## yyz23r(i1,i2,i3$kd)=( u ## yy22r(i1,i2,i3+1$kd)-u ## yy22r(i1,i2,i3-1$kd))/(2.*dx(2))\n";

    printout "u ## xzz23r(i1,i2,i3$kd)=( u ## zz22r(i1+1,i2,i3$kd)-u ## zz22r(i1-1,i2,i3$kd))/(2.*dx(0))\n";
    printout "u ## yzz23r(i1,i2,i3$kd)=( u ## zz22r(i1,i2+1,i3$kd)-u ## zz22r(i1,i2-1,i3$kd))/(2.*dx(1))\n";

    printout "u ## xxxx23r(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd))".
                        "+(u ## (i1+2,i2,i3$kd)+u ## (i1-2,i2,i3$kd)) )/(dx(0)**4)\n";

    printout "u ## yyyy23r(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
                        "+(u ## (i1,i2+2,i3$kd)+u ## (i1,i2-2,i3$kd)) )/(dx(1)**4)\n";
    printout "u ## zzzz23r(i1,i2,i3$kd)=(6.*u ## (i1,i2,i3$kd)-4.*(u ## (i1,i2,i3+1$kd)+u ## (i1,i2,i3-1$kd))".
                        "+(u ## (i1,i2,i3+2$kd)+u ## (i1,i2,i3-2$kd)) )/(dx(2)**4)\n";

    printout "u ## xxyy23r(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2+1,i3$kd)+u ## (i1,i2-1,i3$kd))".
     "+   (u ## (i1+1,i2+1,i3$kd)+u ## (i1-1,i2+1,i3$kd)+u ## (i1+1,i2-1,i3$kd)+u ## (i1-1,i2-1,i3$kd)) )/(dx(0)**2*dx(1)**2)\n";

    printout "u ## xxzz23r(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1+1,i2,i3$kd)+u ## (i1-1,i2,i3$kd)+u ## (i1,i2,i3+1$kd)+u ## (i1,i2,i3-1$kd))".
     "+   (u ## (i1+1,i2,i3+1$kd)+u ## (i1-1,i2,i3+1$kd)+u ## (i1+1,i2,i3-1$kd)+u ## (i1-1,i2,i3-1$kd)) )/(dx(0)**2*dx(2)**2)\n";

    printout "u ## yyzz23r(i1,i2,i3$kd)=( 4.*u ## (i1,i2,i3$kd)".
     "-2.*(u ## (i1,i2+1,i3$kd)  +u ## (i1,i2-1,i3$kd)+  u ## (i1,i2  ,i3+1$kd)+u ## (i1,i2  ,i3-1$kd))".
     "+   (u ## (i1,i2+1,i3+1$kd)+u ## (i1,i2-1,i3+1$kd)+u ## (i1,i2+1,i3-1$kd)+u ## (i1,i2-1,i3-1$kd)) )/(dx(1)**2*dx(2)**2)\n";



    printout "\n";
  }
  elsif( $order eq '4' )
  {
     # finish this 
  }




  printout "#endMacro\n";

  } # end for $component


  close(DFILE); 
  
  print FFILE "\n\n";
  print FFILE "#beginMacro declareDifferenceNewOrder$order(u,rx,dr,dx,OPTION)\n";

  # reopen for the declaration file for reading:
  open(DFILE,"$dfile") || die "cannot open file $dfile!" ;

  while( <DFILE> )
  {
    $line = $_;
    $line =~ s/ u/ u \#\#/;
    $line =~ s/ dr/ dr \#\#/;
    $line =~ s/ dx/ dx \#\#/;
    $line =~ s/ rx/ rx \#\#/;
    $line =~ s/^[ ]*//;

    print FFILE $line;
  }
  print FFILE "#endMacro\n";

  close(FFILE);
  close(CFILE);
  close(DFILE);

}


