eval 'exec perl -S $0 ${1+"$@"}'
if 0;
#!/usr/bin/perl
#
# perl program to create the include files that define difference approximations to orders 2,4,6,8
#

sub printout # ($line)
# output a line to the file
{
  $line=@_[0];
  $line =~ s/[\[\]]//g;  # remove [ and ]
  print FFILE $line;

  $line = @_[0];
  if( $line =~ /^c/ )
  {
    $line =~ s/^c/\/\//;
  }
  elsif( ($line =~ /=/) && ($component eq 0) )
  {
    # for non-comment lines we extract the name of the variable being defined
    if( $line =~ /\w/ )
    {
      $var = $line;
      chop($var);
      $var =~ s/[ ]*\#\#[ ]*//g;
      $var =~ s/^([^\(]*).*/\1/;
      if( !($var =~/\#/) )
      {
        # print "var = [$var]\n";
        print DFILE "      real $var\n";
      }
    }

    # change the statement function into a #define statement
    $line =~ s/=/ /;
    $line =~ s/^/\#define /;
  }
  if( $line =~ /\[/ )
  {
    $line =~ s/\[([^\]]*)\]\*\*2/SQR(\1)/g;   # change [...]**2 to SQR(...)
  }
  print CFILE $line;
}


$maxOrder=8;

for( $order=2; $order<=$maxOrder; $order+=2 )
{

  $ffile = "defineDiffOrder"."$order"."f.h";  # Fortran statement functions
  $cfile = "defineDiffOrder"."$order"."c.h";  # C or C++ defines
  $dfile = "declareDiffOrder"."$order"."f.h";  # declare statement functions for fortran

  printf("Create files $cfile, $ffile and $dfile.\n");

  open(FFILE,">$ffile") || die "cannot open file $ffile!" ;
  open(CFILE,">$cfile") || die "cannot open file $cfile!" ;
  open(DFILE,">$dfile") || die "cannot open file $dfile!" ;


  printout "c Define statement functions for difference approximations of order $order \n";
  printout "c This file was generated by op/src/makeInclude.p \n";

#  printout "c d12(0:2) = 1/(2.*dr(axis))       12:1st-derivative, 2nd-order accurate\n";
#  printout "c d22(0:2) = 1/([dr(axis)]**2)       22:2nd-derivative, 2nd-order accurate\n";
#
#  printout "c d14(0:2) = 1/(12.*dr(axis))      14:1st-derivative, 4th-order accurate\n";
#  printout "c d24(0:2) = 1/(12.*[dr(axis)]**2)   24:2nd-derivative, 4th-order accurate\n";
#
#  printout "c d16(0:2) = 1/(60.*dr(axis))      16:1st-derivative, 6th-order accurate\n";
#  printout "c d26(0:2) = 1/(180.*[dr(axis)]**2)  16:2nd-derivative, 6th-order accurate\n";
#
#  printout "c d18(0:2) = 1/(840.*dr(axis))     18:1st-derivative, 8th-order accurate\n";
#  printout "c d28(0:2) = 1/(5040.*dr(axis))    18:2nd-derivative, 8th-order accurate\n";
  

  for( $component=0; $component<=1; $component++ )
  {
    printout "c To include derivatives of rx use OPTION=RX\n";
    if( $component == 0 )
    {
      printout "#beginMacro defineDifferenceOrder$order"."Components$component(u,OPTION)\n";
      $kd = "";
    }
    else
    {
      printout "#beginMacro defineDifferenceOrder$order"."Components$component(u,OPTION)\n";
      $kd = ",kd";
    }

  printout "\n";

  @rxNames=("rx","ry","rz","sx","sy","sz","tx","ty","tz");


  if( $order eq '2' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "d12(kd) = 1./(2.*dr(kd))\n"; 
    printout "d22(kd) = 1./([dr(kd)]**2)\n"; # add [ .. ] so we can easily change to SQR( ) for C++
    printout "#End\n";
    printout "\n";

# \([^o]\)u\([rstxyz]\)
# \1u ## \2

    printout "u ## r2(i1,i2,i3$kd)=(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))*d12(0)\n";
    printout "u ## s2(i1,i2,i3$kd)=(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))*d12(1)\n";
    printout "u ## t2(i1,i2,i3$kd)=(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))*d12(2)\n";

    printout "\n";
    printout "u ## rr2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd)) )*d22(0)\n";
    printout "u ## ss2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd)) )*d22(1)\n";
    printout "u ## rs2(i1,i2,i3$kd)=(u ## r2(i1,i2+1,i3$kd)-u ## r2(i1,i2-1,i3$kd))*d12(1)\n";
    printout "u ## tt2(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd)) )*d22(2)\n";
    printout "u ## rt2(i1,i2,i3$kd)=(u ## r2(i1,i2,i3+1$kd)-u ## r2(i1,i2,i3-1$kd))*d12(2)\n";
    printout "u ## st2(i1,i2,i3$kd)=(u ## s2(i1,i2,i3+1$kd)-u ## s2(i1,i2,i3-1$kd))*d12(2)\n";

    printout "u ## rrr2(i1,i2,i3$kd)=(-2.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))+(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)) )*d22(0)*d12(0)\n";
    printout "u ## sss2(i1,i2,i3$kd)=(-2.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))+(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)) )*d22(1)*d12(1)\n";
    printout "u ## ttt2(i1,i2,i3$kd)=(-2.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))+(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)) )*d22(2)*d12(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
    foreach $rx ( @rxNames )
    {
      printout $rx."r2(i1,i2,i3)=($rx(i1+1,i2,i3)-$rx(i1-1,i2,i3))*d12(0)\n"; 
      printout $rx."s2(i1,i2,i3)=($rx(i1,i2+1,i3)-$rx(i1,i2-1,i3))*d12(1)\n";
      printout $rx."t2(i1,i2,i3)=($rx(i1,i2,i3+1)-$rx(i1,i2,i3-1))*d12(2)\n";

      printout $rx."rr2(i1,i2,i3)=(-2.*$rx(i1,i2,i3)+($rx(i1+1,i2,i3)+$rx(i1-1,i2,i3)) )*d22(0)\n";
      printout $rx."ss2(i1,i2,i3)=(-2.*$rx(i1,i2,i3)+($rx(i1,i2+1,i3)+$rx(i1,i2-1,i3)) )*d22(1)\n";
      printout $rx."rs2(i1,i2,i3)=($rx ## r2(i1,i2+1,i3)-$rx ## r2(i1,i2-1,i3))*d12(1)\n";
    }
    printout "#End\n";
  }
  elsif( $order eq '4' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "d14(kd) = 1./(12.*dr(kd))\n"; 
    printout "d24(kd) = 1./(12.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r4(i1,i2,i3$kd)=(8.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)))*d14(0)\n";
    printout "u ## s4(i1,i2,i3$kd)=(8.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)))*d14(1)\n";
    printout "u ## t4(i1,i2,i3$kd)=(8.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)))*d14(2)\n";
    printout "\n";
    printout "u ## rr4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
                                   "-(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd)) )*d24(0)\n";
    printout "u ## ss4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
                                   "-(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd)) )*d24(1)\n";
    printout "u ## tt4(i1,i2,i3$kd)=(-30.*u(i1,i2,i3$kd)+16.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
                                   "-(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd)) )*d24(2)\n";
    printout "u ## rs4(i1,i2,i3$kd)=(8.*(u ## r4(i1,i2+1,i3$kd)-u ## r4(i1,i2-1,i3$kd))-(u ## r4(i1,i2+2,i3$kd)-u ## r4(i1,i2-2,i3$kd)))*d14(1)\n";
    printout "u ## rt4(i1,i2,i3$kd)=(8.*(u ## r4(i1,i2,i3+1$kd)-u ## r4(i1,i2,i3-1$kd))-(u ## r4(i1,i2,i3+2$kd)-u ## r4(i1,i2,i3-2$kd)))*d14(2)\n";
    printout "u ## st4(i1,i2,i3$kd)=(8.*(u ## s4(i1,i2,i3+1$kd)-u ## s4(i1,i2,i3-1$kd))-(u ## s4(i1,i2,i3+2$kd)-u ## s4(i1,i2,i3-2$kd)))*d14(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
    foreach $rx ( @rxNames )
    {
      printout $rx."r4(i1,i2,i3)=(8.*($rx(i1+1,i2,i3)-$rx(i1-1,i2,i3))-($rx(i1+2,i2,i3)-$rx(i1-2,i2,i3)))*d14(0)\n"; 
      printout $rx."s4(i1,i2,i3)=(8.*($rx(i1,i2+1,i3)-$rx(i1,i2-1,i3))-($rx(i1,i2+2,i3)-$rx(i1,i2-2,i3)))*d14(1)\n";
      printout $rx."t4(i1,i2,i3)=(8.*($rx(i1,i2,i3+1)-$rx(i1,i2,i3-1))-($rx(i1,i2,i3+2)-$rx(i1,i2,i3-2)))*d14(2)\n";
    }
    printout "#End\n";

  }
  elsif( $order eq '6' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "d16(kd) = 1./(60.*dr(kd))\n"; 
    printout "d26(kd) = 1./(180.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r6(i1,i2,i3$kd)=(45.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-9.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))". # /60
             "+(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd)))*d16(0)\n";
    printout "u ## s6(i1,i2,i3$kd)=(45.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-9.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd)))*d16(1)\n";
    printout "u ## t6(i1,i2,i3$kd)=(45.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-9.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd)))*d16(2)\n";

    printout "\n";
    printout "u ## rr6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
         "-27.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+2.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd)) )*d26(0)\n"; # /180
    printout "u ## ss6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-27.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+2.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd)) )*d26(1)\n";
    printout "u ## tt6(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-27.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+2.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd)) )*d26(2)\n";

    printout "u ## rs6(i1,i2,i3$kd)=(45.*(u ## r6(i1,i2+1,i3$kd)-u ## r6(i1,i2-1,i3$kd))".
         "-9.*(u ## r6(i1,i2+2,i3$kd)-u ## r6(i1,i2-2,i3$kd))+(u ## r6(i1,i2+3,i3$kd)-u ## r6(i1,i2-3,i3$kd)))*d16(1)\n";
    printout "u ## rt6(i1,i2,i3$kd)=(45.*(u ## r6(i1,i2,i3+1$kd)-u ## r6(i1,i2,i3-1$kd))".
         "-9.*(u ## r6(i1,i2,i3+2$kd)-u ## r6(i1,i2,i3-2$kd))+(u ## r6(i1,i2,i3+3$kd)-u ## r6(i1,i2,i3-3$kd)))*d16(2)\n";
    printout "u ## st6(i1,i2,i3$kd)=(45.*(u ## s6(i1,i2,i3+1$kd)-u ## s6(i1,i2,i3-1$kd))".
         "-9.*(u ## s6(i1,i2,i3+2$kd)-u ## s6(i1,i2,i3-2$kd))+(u ## s6(i1,i2,i3+3$kd)-u ## s6(i1,i2,i3-3$kd)))*d16(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
    foreach $rx ( @rxNames )
    {
      printout $rx."r6(i1,i2,i3)=(45.*($rx(i1+1,i2,i3)-$rx(i1-1,i2,i3))-9.*($rx(i1+2,i2,i3)-$rx(i1-2,i2,i3))".
             "+($rx(i1+3,i2,i3)-$rx(i1-3,i2,i3)))*d16(0)\n";
      printout $rx."s6(i1,i2,i3)=(45.*($rx(i1,i2+1,i3)-$rx(i1,i2-1,i3))-9.*($rx(i1,i2+2,i3)-$rx(i1,i2-2,i3))".
             "+($rx(i1,i2+3,i3)-$rx(i1,i2-3,i3)))*d16(1)\n";
      printout $rx."t6(i1,i2,i3)=(45.*($rx(i1,i2,i3+1)-$rx(i1,i2,i3-1))-9.*($rx(i1,i2,i3+2)-$rx(i1,i2,i3-2))".
             "+($rx(i1,i2,i3+3)-$rx(i1,i2,i3-3)))*d16(2)\n";
    }
    printout "#End\n";
  }
  else
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "d18(kd) = 1./(840.*dr(kd))\n"; 
    printout "d28(kd) = 1./(5040.*[dr(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## r8(i1,i2,i3$kd)=(672.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-168.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))".
             "+32.*(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd))-3.*(u(i1+4,i2,i3$kd)-u(i1-4,i2,i3$kd)))*d18(0)\n";
    printout "u ## s8(i1,i2,i3$kd)=(672.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-168.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+32.*(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd))-3.*(u(i1,i2+4,i3$kd)-u(i1,i2-4,i3$kd)))*d18(1)\n";
    printout "u ## t8(i1,i2,i3$kd)=(672.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-168.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+32.*(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd))-3.*(u(i1,i2,i3+4$kd)-u(i1,i2,i3-4$kd)))*d18(2)\n";

    printout "\n";
    printout "u ## rr8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".  # /5040
         "-1008.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+128.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd))".
         "-9.*(u(i1+4,i2,i3$kd)+u(i1-4,i2,i3$kd)) )*d28(0)\n"; # /180
    printout "u ## ss8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-1008.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+128.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd))".
         "-9.*(u(i1,i2+4,i3$kd)+u(i1,i2-4,i3$kd)) )*d28(1)\n";
    printout "u ## tt8(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-1008.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+128.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd))".
         "-9.*(u(i1,i2,i3+4$kd)+u(i1,i2,i3-4$kd)) )*d28(2)\n";

    printout "u ## rs8(i1,i2,i3$kd)=(672.*(u ## r8(i1,i2+1,i3$kd)-u ## r8(i1,i2-1,i3$kd))".
         "-168.*(u ## r8(i1,i2+2,i3$kd)-u ## r8(i1,i2-2,i3$kd))+32.*(u ## r8(i1,i2+3,i3$kd)-u ## r8(i1,i2-3,i3$kd))".
         "-3.*(u ## r8(i1,i2+4,i3$kd)-u ## r8(i1,i2-4,i3$kd)))*d18(1)\n";
    printout "u ## rt8(i1,i2,i3$kd)=(672.*(u ## r8(i1,i2,i3+1$kd)-u ## r8(i1,i2,i3-1$kd))".
         "-168.*(u ## r8(i1,i2,i3+2$kd)-u ## r8(i1,i2,i3-2$kd))+32.*(u ## r8(i1,i2,i3+3$kd)-u ## r8(i1,i2,i3-3$kd))".
         "-3.*(u ## r8(i1,i2,i3+4$kd)-u ## r8(i1,i2,i3-4$kd)))*d18(2)\n";
    printout "u ## st8(i1,i2,i3$kd)=(672.*(u ## s8(i1,i2,i3+1$kd)-u ## s8(i1,i2,i3-1$kd))".
         "-168.*(u ## s8(i1,i2,i3+2$kd)-u ## s8(i1,i2,i3-2$kd))+32.*(u ## s8(i1,i2,i3+3$kd)-u ## s8(i1,i2,i3-3$kd))".
         "-3.*(u ## s8(i1,i2,i3+4$kd)-u ## s8(i1,i2,i3-4$kd)))*d18(2)\n";

    printout "\n";
    printout "#If #OPTION == \"RX\"\n";
    foreach $rx ( @rxNames )
    {
      printout $rx."r8(i1,i2,i3)=(672.*($rx(i1+1,i2,i3)-$rx(i1-1,i2,i3))-168.*($rx(i1+2,i2,i3)-$rx(i1-2,i2,i3))".
             "+32.*($rx(i1+3,i2,i3)-$rx(i1-3,i2,i3))-3.*($rx(i1+4,i2,i3)-$rx(i1-4,i2,i3)))*d18(0)\n";
      printout $rx."s8(i1,i2,i3)=(672.*($rx(i1,i2+1,i3)-$rx(i1,i2-1,i3))-168.*($rx(i1,i2+2,i3)-$rx(i1,i2-2,i3))".
             "+32.*($rx(i1,i2+3,i3)-$rx(i1,i2-3,i3))-3.*($rx(i1,i2+4,i3)-$rx(i1,i2-4,i3)))*d18(1)\n";
      printout $rx."t8(i1,i2,i3)=(672.*($rx(i1,i2,i3+1)-$rx(i1,i2,i3-1))-168.*($rx(i1,i2,i3+2)-$rx(i1,i2,i3-2))".
             "+32.*($rx(i1,i2,i3+3)-$rx(i1,i2,i3-3))-3.*($rx(i1,i2,i3+4)-$rx(i1,i2,i3-4)))*d18(2)\n";
    }
    printout "#End\n";
  }

  printout "\n";
  printout "u ## x$order"."1(i1,i2,i3$kd)= rx(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## z$order"."1(i1,i2,i3$kd)=0\n";

  printout "\n";
  printout "u ## x$order"."2(i1,i2,i3$kd)= rx(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sx(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."2(i1,i2,i3$kd)= ry(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sy(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## z$order"."2(i1,i2,i3$kd)=0\n";

  printout "u ## x$order"."3(i1,i2,i3$kd)=rx(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sx(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)+".
                                     "tx(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";
  printout "u ## y$order"."3(i1,i2,i3$kd)=ry(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sy(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)+".
                                     "ty(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";
  printout "u ## z$order"."3(i1,i2,i3$kd)=rz(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sz(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)+".
                      "tz(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";

  printout "\n";
  printout "#If #OPTION == \"RX\"\n";
  printout "rxx$order"."1(i1,i2,i3)= rx(i1,i2,i3)*rx"."r$order(i1,i2,i3)\n";
  foreach $rx ( @rxNames )
  {
    printout $rx."x$order"."2(i1,i2,i3)= rx(i1,i2,i3)*$rx"."r$order(i1,i2,i3)".
             "+sx(i1,i2,i3)*$rx"."s$order(i1,i2,i3)\n";
    printout $rx."y$order"."2(i1,i2,i3)= ry(i1,i2,i3)*$rx"."r$order(i1,i2,i3)".
             "+sy(i1,i2,i3)*$rx"."s$order(i1,i2,i3)\n";

    printout $rx."x$order"."3(i1,i2,i3)=rx(i1,i2,i3)*$rx"."r$order(i1,i2,i3)".
             "+sx(i1,i2,i3)*$rx"."s$order(i1,i2,i3)+tx(i1,i2,i3)*$rx"."t$order(i1,i2,i3)\n";
    printout $rx."y$order"."3(i1,i2,i3)=ry(i1,i2,i3)*$rx"."r$order(i1,i2,i3)".
             "+sy(i1,i2,i3)*$rx"."s$order(i1,i2,i3)+ty(i1,i2,i3)*$rx"."t$order(i1,i2,i3)\n";
    printout $rx."z$order"."3(i1,i2,i3)=rz(i1,i2,i3)*$rx"."r$order(i1,i2,i3)".
             "+sz(i1,i2,i3)*$rx"."s$order(i1,i2,i3)+tz(i1,i2,i3)*$rx"."t$order(i1,i2,i3)\n";
  }
  printout "#End\n";
  printout "\n";

  printout "u ## xx$order"."1(i1,i2,i3$kd)=([rx(i1,i2,i3)]**2)*u ## rr$order(i1,i2,i3$kd)".
             "+(rxx$order"."2(i1,i2,i3))*u ## r$order(i1,i2,i3$kd)\n";

  printout "u ## yy$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## xy$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## xz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## yz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## zz$order"."1(i1,i2,i3$kd)=0\n";
  printout "u ## laplacian$order"."1(i1,i2,i3$kd)=u ## xx$order"."1(i1,i2,i3$kd)\n";

  #    ------------- 2D -------------------------  
  printout "u ## xx$order"."2(i1,i2,i3$kd)=([rx(i1,i2,i3)]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*(rx(i1,i2,i3)*sx(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+([sx(i1,i2,i3)]**2)*u ## ss$order(i1,i2,i3$kd)+(rxx$order"."2(i1,i2,i3))*u ## r$order(i1,i2,i3$kd)".
     "+(sxx$order"."2(i1,i2,i3))*u ## s$order(i1,i2,i3$kd)\n";
  printout "u ## yy$order"."2(i1,i2,i3$kd)=([ry(i1,i2,i3)]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*(ry(i1,i2,i3)*sy(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+([sy(i1,i2,i3)]**2)*u ## ss$order(i1,i2,i3$kd)+(ryy$order"."2(i1,i2,i3))*u ## r$order(i1,i2,i3$kd)".
     "+(syy$order"."2(i1,i2,i3))*u ## s$order(i1,i2,i3$kd)\n";

  printout "u ## xy$order"."2(i1,i2,i3$kd)=rx(i1,i2,i3)*ry(i1,i2,i3)*u ## rr$order(i1,i2,i3$kd)".
     "+(rx(i1,i2,i3)*sy(i1,i2,i3)+ry(i1,i2,i3)*sx(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+sx(i1,i2,i3)*sy(i1,i2,i3)*u ## ss$order(i1,i2,i3$kd)".
     "+rxy$order"."2(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sxy$order"."2(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)\n";

  printout "u ## xz$order"."2(i1,i2,i3$kd)=0\n";
  printout "u ## yz$order"."2(i1,i2,i3$kd)=0\n";
  printout "u ## zz$order"."2(i1,i2,i3$kd)=0\n";

  printout "u ## laplacian$order"."2(i1,i2,i3$kd)=([rx(i1,i2,i3)]**2+[ry(i1,i2,i3)]**2)*u ## rr$order(i1,i2,i3$kd)".
     "+2.*(rx(i1,i2,i3)*sx(i1,i2,i3)+ ry(i1,i2,i3)*sy(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+([sx(i1,i2,i3)]**2+[sy(i1,i2,i3)]**2)*u ## ss$order(i1,i2,i3$kd)".
     "+(rxx$order"."2(i1,i2,i3)+ryy$order"."2(i1,i2,i3))*u ## r$order(i1,i2,i3$kd)".
     "+(sxx$order"."2(i1,i2,i3)+syy$order"."2(i1,i2,i3))*u ## s$order(i1,i2,i3$kd)\n";

  #    ------------- 3D -------------------------  

  printout "u ## xx$order"."3(i1,i2,i3$kd)=[rx(i1,i2,i3)]**2*u ## rr$order(i1,i2,i3$kd)+[sx(i1,i2,i3)]**2*u ## ss$order(i1,i2,i3$kd)".
     "+[tx(i1,i2,i3)]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*rx(i1,i2,i3)*sx(i1,i2,i3)*u ## rs$order(i1,i2,i3$kd)+2.*rx(i1,i2,i3)*tx(i1,i2,i3)*u ## rt$order(i1,i2,i3$kd)".
     "+2.*sx(i1,i2,i3)*tx(i1,i2,i3)*u ## st$order(i1,i2,i3$kd)+".
     "rxx$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)+sxx$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
     "+txx$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## yy$order"."3(i1,i2,i3$kd)=".
                   "[ry(i1,i2,i3)]**2*u ## rr$order(i1,i2,i3$kd)".
                  "+[sy(i1,i2,i3)]**2*u ## ss$order(i1,i2,i3$kd)".
                  "+[ty(i1,i2,i3)]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*ry(i1,i2,i3)*sy(i1,i2,i3)*u ## rs$order(i1,i2,i3$kd)".
     "+2.*ry(i1,i2,i3)*ty(i1,i2,i3)*u ## rt$order(i1,i2,i3$kd)".
     "+2.*sy(i1,i2,i3)*ty(i1,i2,i3)*u ## st$order(i1,i2,i3$kd)".
                    "+ryy$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)".
                    "+syy$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
		    "+tyy$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## zz$order"."3(i1,i2,i3$kd)=".
                   "[rz(i1,i2,i3)]**2*u ## rr$order(i1,i2,i3$kd)".
                  "+[sz(i1,i2,i3)]**2*u ## ss$order(i1,i2,i3$kd)".
                  "+[tz(i1,i2,i3)]**2*u ## tt$order(i1,i2,i3$kd)".
     "+2.*rz(i1,i2,i3)*sz(i1,i2,i3)*u ## rs$order(i1,i2,i3$kd)".
     "+2.*rz(i1,i2,i3)*tz(i1,i2,i3)*u ## rt$order(i1,i2,i3$kd)".
     "+2.*sz(i1,i2,i3)*tz(i1,i2,i3)*u ## st$order(i1,i2,i3$kd)".
                    "+rzz$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)".
                    "+szz$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
                    "+tzz$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";

  printout "u ## xy$order"."3(i1,i2,i3$kd)=".
        "rx(i1,i2,i3)*ry(i1,i2,i3)*u ## rr$order(i1,i2,i3$kd)".
       "+sx(i1,i2,i3)*sy(i1,i2,i3)*u ## ss$order(i1,i2,i3$kd)".
       "+tx(i1,i2,i3)*ty(i1,i2,i3)*u ## tt$order(i1,i2,i3$kd)".
     "+(rx(i1,i2,i3)*sy(i1,i2,i3)".
      "+ry(i1,i2,i3)*sx(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+(rx(i1,i2,i3)*ty(i1,i2,i3)".
      "+ry(i1,i2,i3)*tx(i1,i2,i3))*u ## rt$order(i1,i2,i3$kd)".
     "+(sx(i1,i2,i3)*ty(i1,i2,i3)".
      "+sy(i1,i2,i3)*tx(i1,i2,i3))*u ## st$order(i1,i2,i3$kd)".
                   "+rxy$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)".
                   "+sxy$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
                   "+txy$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";
      printout "u ## xz$order"."3(i1,i2,i3$kd)=".
        "rx(i1,i2,i3)*rz(i1,i2,i3)*u ## rr$order(i1,i2,i3$kd)".
       "+sx(i1,i2,i3)*sz(i1,i2,i3)*u ## ss$order(i1,i2,i3$kd)".
       "+tx(i1,i2,i3)*tz(i1,i2,i3)*u ## tt$order(i1,i2,i3$kd)".
     "+(rx(i1,i2,i3)*sz(i1,i2,i3)".
      "+rz(i1,i2,i3)*sx(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+(rx(i1,i2,i3)*tz(i1,i2,i3)".
      "+rz(i1,i2,i3)*tx(i1,i2,i3))*u ## rt$order(i1,i2,i3$kd)".
     "+(sx(i1,i2,i3)*tz(i1,i2,i3)".
      "+sz(i1,i2,i3)*tx(i1,i2,i3))*u ## st$order(i1,i2,i3$kd)".
                   "+rxz$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)".
                   "+sxz$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
                   "+txz$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";
      printout "u ## yz$order"."3(i1,i2,i3$kd)=".
        "ry(i1,i2,i3)*rz(i1,i2,i3)*u ## rr$order(i1,i2,i3$kd)".
       "+sy(i1,i2,i3)*sz(i1,i2,i3)*u ## ss$order(i1,i2,i3$kd)".
       "+ty(i1,i2,i3)*tz(i1,i2,i3)*u ## tt$order(i1,i2,i3$kd)".
     "+(ry(i1,i2,i3)*sz(i1,i2,i3)".
      "+rz(i1,i2,i3)*sy(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)".
     "+(ry(i1,i2,i3)*tz(i1,i2,i3)".
      "+rz(i1,i2,i3)*ty(i1,i2,i3))*u ## rt$order(i1,i2,i3$kd)".
     "+(sy(i1,i2,i3)*tz(i1,i2,i3)".
      "+sz(i1,i2,i3)*ty(i1,i2,i3))*u ## st$order(i1,i2,i3$kd)".
                   "+ryz$order"."3(i1,i2,i3)*u ## r$order(i1,i2,i3$kd)".
                   "+syz$order"."3(i1,i2,i3)*u ## s$order(i1,i2,i3$kd)".
                   "+tyz$order"."3(i1,i2,i3)*u ## t$order(i1,i2,i3$kd)\n";
       
  printout "u ## laplacian$order"."3(i1,i2,i3$kd)=".
       "([rx(i1,i2,i3)]**2+[ry(i1,i2,i3)]**2+[rz(i1,i2,i3)]**2)*u ## rr$order(i1,i2,i3$kd)". 
       "+([sx(i1,i2,i3)]**2+[sy(i1,i2,i3)]**2+[sz(i1,i2,i3)]**2)*u ## ss$order(i1,i2,i3$kd)". 
       "+([tx(i1,i2,i3)]**2+[ty(i1,i2,i3)]**2+[tz(i1,i2,i3)]**2)*u ## tt$order(i1,i2,i3$kd)". 
       "+2.*(rx(i1,i2,i3)*sx(i1,i2,i3)+ ry(i1,i2,i3)*sy(i1,i2,i3)+rz(i1,i2,i3)*sz(i1,i2,i3))*u ## rs$order(i1,i2,i3$kd)". 
       "+2.*(rx(i1,i2,i3)*tx(i1,i2,i3)+ ry(i1,i2,i3)*ty(i1,i2,i3)+rz(i1,i2,i3)*tz(i1,i2,i3))*u ## rt$order(i1,i2,i3$kd)". 
       "+2.*(sx(i1,i2,i3)*tx(i1,i2,i3)+ sy(i1,i2,i3)*ty(i1,i2,i3)+sz(i1,i2,i3)*tz(i1,i2,i3))*u ## st$order(i1,i2,i3$kd)". 
       "+(rxx$order"."3(i1,i2,i3)+ryy$order"."3(i1,i2,i3)+rzz$order"."3(i1,i2,i3))*u ## r$order(i1,i2,i3$kd)". 
       "+(sxx$order"."3(i1,i2,i3)+syy$order"."3(i1,i2,i3)+szz$order"."3(i1,i2,i3))*u ## s$order(i1,i2,i3$kd)". 
       "+(txx$order"."3(i1,i2,i3)+tyy$order"."3(i1,i2,i3)+tzz$order"."3(i1,i2,i3))*u ## t$order(i1,i2,i3$kd)\n";



  printout "c============================================================================================\n";
  printout "c Define derivatives for a rectangular grid\n";
  printout "c\n";
  printout "c============================================================================================\n";

  if( $order eq '2' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "h12(kd) = 1./(2.*dx(kd))\n"; 
    printout "h22(kd) = 1./([dx(kd)]**2)\n"; # add [ .. ] so we can easily change to SQR( ) for C++
    printout "#End\n";
    printout "\n";

    printout "u ## x23r(i1,i2,i3$kd)=(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))*h12(0)\n";
    printout "u ## y23r(i1,i2,i3$kd)=(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))*h12(1)\n";
    printout "u ## z23r(i1,i2,i3$kd)=(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))*h12(2)\n";

    printout "\n";
    printout "u ## xx23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd)) )*h22(0)\n";
    printout "u ## yy23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd)) )*h22(1)\n";
    printout "u ## xy23r(i1,i2,i3$kd)=(u ## x23r(i1,i2+1,i3$kd)-u ## x23r(i1,i2-1,i3$kd))*h12(1)\n";
    printout "u ## zz23r(i1,i2,i3$kd)=(-2.*u(i1,i2,i3$kd)+(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd)) )*h22(2)\n";
    printout "u ## xz23r(i1,i2,i3$kd)=(u ## x23r(i1,i2,i3+1$kd)-u ## x23r(i1,i2,i3-1$kd))*h12(2)\n";
    printout "u ## yz23r(i1,i2,i3$kd)=(u ## y23r(i1,i2,i3+1$kd)-u ## y23r(i1,i2,i3-1$kd))*h12(2)\n";

    printout "\n";
  }
  elsif( $order eq '4' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "h41(kd) = 1./(12.*dx(kd))\n";
    printout "h42(kd) = 1./(12.*[dx(kd)]**2)\n";
    printout "#End\n";

    printout "u ## x43r(i1,i2,i3$kd)=(8.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd)))*h41(0)\n";

    printout "u ## y43r(i1,i2,i3$kd)=(8.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd)))*h41(1)\n"; 
    printout "u ## z43r(i1,i2,i3$kd)=(8.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd)))*h41(2)\n"; 

    printout "u ## xx43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
             "-(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd)) )*h42(0) \n"; 

    printout "u ## yy43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
             "-(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd)) )*h42(1) \n";

    printout "u ## zz43r(i1,i2,i3$kd)=( -30.*u(i1,i2,i3$kd)+16.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
             "-(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd)) )*h42(2)\n"; 

    printout "u ## xy43r(i1,i2,i3$kd)=".
         "( (u(i1+2,i2+2,i3$kd)-u(i1-2,i2+2,i3$kd)-".
           " u(i1+2,i2-2,i3$kd)+u(i1-2,i2-2,i3$kd)) ".
       "+8.*(u(i1-1,i2+2,i3$kd)-u(i1-1,i2-2,i3$kd)-".
            "u(i1+1,i2+2,i3$kd)+u(i1+1,i2-2,i3$kd) ". 
           "+u(i1+2,i2-1,i3$kd)-u(i1-2,i2-1,i3$kd)-".
            "u(i1+2,i2+1,i3$kd)+u(i1-2,i2+1,i3$kd))". 
      "+64.*(u(i1+1,i2+1,i3$kd)-u(i1-1,i2+1,i3$kd)-".
           " u(i1+1,i2-1,i3$kd)+u(i1-1,i2-1,i3$kd))". 
                           ")*(h41(0)*h41(1))\n"; 

    printout "u ## xz43r(i1,i2,i3$kd)=". 
         "( (u(i1+2,i2,i3+2$kd)-u(i1-2,i2,i3+2$kd)-".
            "u(i1+2,i2,i3-2$kd)+u(i1-2,i2,i3-2$kd)) ".
       "+8.*(u(i1-1,i2,i3+2$kd)-u(i1-1,i2,i3-2$kd)-".
            "u(i1+1,i2,i3+2$kd)+u(i1+1,i2,i3-2$kd) ". 
           "+u(i1+2,i2,i3-1$kd)-u(i1-2,i2,i3-1$kd)-".
           " u(i1+2,i2,i3+1$kd)+u(i1-2,i2,i3+1$kd)) ".
      "+64.*(u(i1+1,i2,i3+1$kd)-u(i1-1,i2,i3+1$kd)-".
            "u(i1+1,i2,i3-1$kd)+u(i1-1,i2,i3-1$kd)) ".
                ")*(h41(0)*h41(2))\n";
                            
    printout "u ## yz43r(i1,i2,i3$kd)=".
         "( (u(i1,i2+2,i3+2$kd)-u(i1,i2-2,i3+2$kd)-".
            "u(i1,i2+2,i3-2$kd)+u(i1,i2-2,i3-2$kd)) ".
       "+8.*(u(i1,i2-1,i3+2$kd)-u(i1,i2-1,i3-2$kd)-".
            "u(i1,i2+1,i3+2$kd)+u(i1,i2+1,i3-2$kd) ". 
           "+u(i1,i2+2,i3-1$kd)-u(i1,i2-2,i3-1$kd)-".
            "u(i1,i2+2,i3+1$kd)+u(i1,i2-2,i3+1$kd)) ".
      "+64.*(u(i1,i2+1,i3+1$kd)-u(i1,i2-1,i3+1$kd)-".
            "u(i1,i2+1,i3-1$kd)+u(i1,i2-1,i3-1$kd)) ".
                     ")*(h41(1)*h41(2))\n";


  }
  elsif( $order eq '6' )
  {
    printout "#If #OPTION == \"RX\"\n";
    printout "h16(kd) = 1./(60.*dx(kd))\n"; 
    printout "h26(kd) = 1./(180.*[dx(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## x63r(i1,i2,i3$kd)=(45.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-9.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))". # /60
             "+(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd)))*h16(0)\n";
    printout "u ## y63r(i1,i2,i3$kd)=(45.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-9.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd)))*h16(1)\n";
    printout "u ## z63r(i1,i2,i3$kd)=(45.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-9.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd)))*h16(2)\n";

    printout "\n";
    printout "u ## xx63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".
         "-27.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+2.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd)) )*h26(0)\n"; # /180
    printout "u ## yy63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-27.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+2.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd)) )*h26(1)\n";
    printout "u ## zz63r(i1,i2,i3$kd)=(-490.*u(i1,i2,i3$kd)+270.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-27.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+2.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd)) )*h26(2)\n";

    printout "u ## xy63r(i1,i2,i3$kd)=(45.*(u ## x63r(i1,i2+1,i3$kd)-u ## x63r(i1,i2-1,i3$kd))".
         "-9.*(u ## x63r(i1,i2+2,i3$kd)-u ## x63r(i1,i2-2,i3$kd))+(u ## x63r(i1,i2+3,i3$kd)-u ## x63r(i1,i2-3,i3$kd)))*h16(1)\n";
    printout "u ## xz63r(i1,i2,i3$kd)=(45.*(u ## x63r(i1,i2,i3+1$kd)-u ## x63r(i1,i2,i3-1$kd))".
         "-9.*(u ## x63r(i1,i2,i3+2$kd)-u ## x63r(i1,i2,i3-2$kd))+(u ## x63r(i1,i2,i3+3$kd)-u ## x63r(i1,i2,i3-3$kd)))*h16(2)\n";
    printout "u ## yz63r(i1,i2,i3$kd)=(45.*(u ## y63r(i1,i2,i3+1$kd)-u ## y63r(i1,i2,i3-1$kd))".
         "-9.*(u ## y63r(i1,i2,i3+2$kd)-u ## y63r(i1,i2,i3-2$kd))+(u ## y63r(i1,i2,i3+3$kd)-u ## y63r(i1,i2,i3-3$kd)))*h16(2)\n";

    printout "\n";
  }
  else
  {
     # --- 8th order ----
    printout "#If #OPTION == \"RX\"\n";
    printout "h18(kd) = 1./(840.*dx(kd))\n"; 
    printout "h28(kd) = 1./(5040.*[dx(kd)]**2)\n"; 
    printout "#End\n";
    printout "\n";

    printout "u ## x83r(i1,i2,i3$kd)=(672.*(u(i1+1,i2,i3$kd)-u(i1-1,i2,i3$kd))-168.*(u(i1+2,i2,i3$kd)-u(i1-2,i2,i3$kd))".
             "+32.*(u(i1+3,i2,i3$kd)-u(i1-3,i2,i3$kd))-3.*(u(i1+4,i2,i3$kd)-u(i1-4,i2,i3$kd)))*h18(0)\n";
    printout "u ## y83r(i1,i2,i3$kd)=(672.*(u(i1,i2+1,i3$kd)-u(i1,i2-1,i3$kd))-168.*(u(i1,i2+2,i3$kd)-u(i1,i2-2,i3$kd))".
             "+32.*(u(i1,i2+3,i3$kd)-u(i1,i2-3,i3$kd))-3.*(u(i1,i2+4,i3$kd)-u(i1,i2-4,i3$kd)))*h18(1)\n";
    printout "u ## z83r(i1,i2,i3$kd)=(672.*(u(i1,i2,i3+1$kd)-u(i1,i2,i3-1$kd))-168.*(u(i1,i2,i3+2$kd)-u(i1,i2,i3-2$kd))".
             "+32.*(u(i1,i2,i3+3$kd)-u(i1,i2,i3-3$kd))-3.*(u(i1,i2,i3+4$kd)-u(i1,i2,i3-4$kd)))*h18(2)\n";

    printout "\n";
    printout "u ## xx83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1+1,i2,i3$kd)+u(i1-1,i2,i3$kd))".  # /5040
         "-1008.*(u(i1+2,i2,i3$kd)+u(i1-2,i2,i3$kd))+128.*(u(i1+3,i2,i3$kd)+u(i1-3,i2,i3$kd))".
         "-9.*(u(i1+4,i2,i3$kd)+u(i1-4,i2,i3$kd)) )*h28(0)\n"; # /180
    printout "u ## yy83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2+1,i3$kd)+u(i1,i2-1,i3$kd))".
         "-1008.*(u(i1,i2+2,i3$kd)+u(i1,i2-2,i3$kd))+128.*(u(i1,i2+3,i3$kd)+u(i1,i2-3,i3$kd))".
         "-9.*(u(i1,i2+4,i3$kd)+u(i1,i2-4,i3$kd)) )*h28(1)\n";
    printout "u ## zz83r(i1,i2,i3$kd)=(-14350.*u(i1,i2,i3$kd)+8064.*(u(i1,i2,i3+1$kd)+u(i1,i2,i3-1$kd))".
         "-1008.*(u(i1,i2,i3+2$kd)+u(i1,i2,i3-2$kd))+128.*(u(i1,i2,i3+3$kd)+u(i1,i2,i3-3$kd))".
         "-9.*(u(i1,i2,i3+4$kd)+u(i1,i2,i3-4$kd)) )*h28(2)\n";

    printout "u ## xy83r(i1,i2,i3$kd)=(672.*(u ## x83r(i1,i2+1,i3$kd)-u ## x83r(i1,i2-1,i3$kd))".
         "-168.*(u ## x83r(i1,i2+2,i3$kd)-u ## x83r(i1,i2-2,i3$kd))+32.*(u ## x83r(i1,i2+3,i3$kd)-u ## x83r(i1,i2-3,i3$kd))".
         "-3.*(u ## x83r(i1,i2+4,i3$kd)-u ## x83r(i1,i2-4,i3$kd)))*h18(1)\n";
    printout "u ## xz83r(i1,i2,i3$kd)=(672.*(u ## x83r(i1,i2,i3+1$kd)-u ## x83r(i1,i2,i3-1$kd))".
         "-168.*(u ## x83r(i1,i2,i3+2$kd)-u ## x83r(i1,i2,i3-2$kd))+32.*(u ## x83r(i1,i2,i3+3$kd)-u ## x83r(i1,i2,i3-3$kd))".
         "-3.*(u ## x83r(i1,i2,i3+4$kd)-u ## x83r(i1,i2,i3-4$kd)))*h18(2)\n";
    printout "u ## yz83r(i1,i2,i3$kd)=(672.*(u ## y83r(i1,i2,i3+1$kd)-u ## y83r(i1,i2,i3-1$kd))".
         "-168.*(u ## y83r(i1,i2,i3+2$kd)-u ## y83r(i1,i2,i3-2$kd))+32.*(u ## y83r(i1,i2,i3+3$kd)-u ## y83r(i1,i2,i3-3$kd))".
         "-3.*(u ## y83r(i1,i2,i3+4$kd)-u ## y83r(i1,i2,i3-4$kd)))*h18(2)\n";

    printout "\n";
  }

   # here are the rectangular versions that can be defined from the previous defintions

   printout "u ## x$order"."1r(i1,i2,i3$kd)= u ## x$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## y$order"."1r(i1,i2,i3$kd)= u ## y$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## z$order"."1r(i1,i2,i3$kd)= u ## z$order"."3r(i1,i2,i3$kd)\n"; 
			   
   printout "u ## xx$order"."1r(i1,i2,i3$kd)= u ## xx$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yy$order"."1r(i1,i2,i3$kd)= u ## yy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## zz$order"."1r(i1,i2,i3$kd)= u ## zz$order"."3r(i1,i2,i3$kd)\n";
			   
   printout "u ## xy$order"."1r(i1,i2,i3$kd)= u ## xy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## xz$order"."1r(i1,i2,i3$kd)= u ## xz$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yz$order"."1r(i1,i2,i3$kd)= u ## yz$order"."3r(i1,i2,i3$kd)\n";
                           
   printout "u ## laplacian$order"."1r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)\n";

   printout "u ## x$order"."2r(i1,i2,i3$kd)= u ## x$order"."3r(i1,i2,i3$kd)\n"; 
   printout "u ## y$order"."2r(i1,i2,i3$kd)= u ## y$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## z$order"."2r(i1,i2,i3$kd)= u ## z$order"."3r(i1,i2,i3$kd)\n"; 
			   
   printout "u ## xx$order"."2r(i1,i2,i3$kd)= u ## xx$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yy$order"."2r(i1,i2,i3$kd)= u ## yy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## zz$order"."2r(i1,i2,i3$kd)= u ## zz$order"."3r(i1,i2,i3$kd)\n";
			   
   printout "u ## xy$order"."2r(i1,i2,i3$kd)= u ## xy$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## xz$order"."2r(i1,i2,i3$kd)= u ## xz$order"."3r(i1,i2,i3$kd)\n";
   printout "u ## yz$order"."2r(i1,i2,i3$kd)= u ## yz$order"."3r(i1,i2,i3$kd)\n";
                           
   printout "u ## laplacian$order"."2r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)+u ## yy$order"."3r(i1,i2,i3$kd)\n";

   printout "u ## laplacian$order"."3r(i1,i2,i3$kd)=u ## xx$order"."3r(i1,i2,i3$kd)+u ## yy$order"."3r(i1,i2,i3$kd)+u ## zz$order"."3r(i1,i2,i3$kd)\n";


  printout "#endMacro\n";

  } # end for $component


  # -- this part added 041017 to add declare macro which must have been done by hand before
  close(DFILE); 
  
  print FFILE "\n\n";
  print FFILE "#beginMacro declareDifferenceOrder$order(u,OPTION)\n";

  # reopen for the declaration file for reading:
  open(DFILE,"$dfile") || die "cannot open file $dfile!" ;

  while( <DFILE> )
  {
    $line = $_;
    $line =~ s/ u/ u \#\#/;

    print FFILE $line;
  }
  print FFILE "#endMacro\n";


  close(FFILE);
  close(CFILE);
  close(DFILE);

}


