#
# Measure convergence rates for tbm : BeamModel tester
#
# --------options: 
#   -Em = 
#   -T = 
#   -tz : poly or trig 
#   -bcn=[c|p|f]
#   -en : error norm: max, l1, l2
#   -ng : number of grids to use (i.e. how many times is the grid refined)
#   -ngStart : start with this grid (default is 1, set to 2 to skip first grid)
#   -cg=[line]
#   -alwaysCompute=1 : force each case to be re-run even if the check file exists
#   -conv= conv directory (and directory for output). .. So you can run the script outside the conv dir, e.g. for parallel
# 
# To run the convergence tests type: 
# 
# === linear beam ===
#  -bc=clamped
#    -- poly(2,1)
#    conv.p tbm.conv -model=linearBeam -tz=poly -bcn=c -tf=.1 -cg=line -degreeX=2 -degreeT=1 -ng=2   [exact 
#    -- trig
#    conv.p tbm.conv -model=linearBeam -tz=trig -bcn=c -tf=1. -cg=line -ng=4
#
# ---------------------
# Set default parameters: 
$model="linearBeam";
#Longfei: BM option FEM or FD
$BM="FEM";
$tz="trig"; $bcn = "c"; $cg="line"; $suffix=""; 
$en="max"; $ngStart=1; $ng=4; $tf=.5;  $tp=.1; $degreeX=2; $degreeT=2; $fx=2.; $ft=2.; $order=2; $nd=2; $cfl=.5; 
$Em=1.; $T=1.; $rhos=100.; $debug=0; $orderOfProjection=2; 
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$tbmCmd = "$CGBUILDPREFIX/unitTests/bin/tbm";  # command we run
$cmdDir="$ENV{CG}/unitTests/cmd"; 
$alwaysCompute=1; 
$showAllComponents=1;  # set to 1 to include all components in the table.
#Longfei: time-stepping options
$predictor="newmark2Implicit";
$corrector="newmarkCorrector";
$Kxxt=0.;
$smooth=0;
$smoothOrder=4; # 4 or 6
$numberOfSmooths=1;
$
#
GetOptions( "model=s"=>\$model,"BM=s"=>\$BM,"en=s"=>\$en,"ng=i"=>\$ng,"bcn=s"=>\$bcn,"cg=s"=>\$cg,"tf=f"=>\$tf,"tp=f"=>\$tp,\
            "Em=f"=>\$Em,"T=f"=>\$T,"tz=s"=>\$tz,"fx=f"=>\$fx,"ft=f"=>\$ft,"order=i"=>\$order,"alwaysCompute=i"=>\$alwaysCompute,\
            "showAllComponents=i"=>\$showAllComponents,"orderOfProjection=i"=>\$orderOfProjection,\
            "cfl=f"=>\$cfl,"degreeX=f"=>\$degreeX,"degreeT=f"=>\$degreeT,"debug=i"=>\$debug,\
            "tbmCmd=s"=>\$tbmCmd,"ngStart=i"=>\$ngStart,"rhos=f"=>\$rhos,"suffix=s"=>\$suffix,"predictor=s"=>\$predictor, "corrector=s"=>\$corrector,"Kxxt=f"=>\$Kxxt,\
	    "smooth=i"=>\$smooth,"smoothOrder=i"=>\$smoothOrder,"numberOfSmooths=i"=>\$numberOfSmooths );
# 
# Name of the check file created by tbm:
$check="tbm.check";
#
if( $suffix eq "" ){ $suffix = $tz; }else{ $suffix .= "." . $tz; }
$caseName="tbm.$BM.$model.$bcn.$suffix"; 
$name="$caseName"; 
#
# --- define the table heading and caption --
# Longfei: now compute errors for u,v,a
if( $model eq "linearBeam" )\
{\
  $numberOfComponents=3; \
  $title ="grid  \& N \&  \$\\vert u \\vert\$ \&  \$\\vert v \\vert\$  \&  \$\\vert a \\vert\$   "; \
  @componentName = ( "u","v","a" ); \
}
# 
if( $tz eq "poly" ){ $tzLabel = "$tz TZ, degreeX=$degreeX, degreeT=$degreeT"; }else{ $tzLabel = "$tz TZ, fx=$fx, ft=$ft"; }
$smoothLabel = "smooth=$smooth, smoothOrder=$smoothOrder, numberOfSmooths=$numberOfSmooths";
$caption= "\\caption\{tbm, $model, $name, bcn=$bcn, \$ t=$tf\$, \$ E=$Em\$, \$ rhos=$rhos\$, \$ T=$T\$,  orderOfProjection=$orderOfProjection, $smoothLable, $tzLabel, cfl=$cfl, $date}\\label\{table:$name}"; 
$outputFile="$name" . ".ConvTable.tex"; 
# 
$options = "-BM=$BM -predictor=$predictor  -corrector=$corrector  -tz=$tz -degreex=$degreeX -degreet=$degreeT -bc=$bcn -Em=$Em -tension=$T -rhos=$rhos -fx=$fx -ft=$ft -tf=$tf -tp=$tp -orderOfProjection=$orderOfProjection -cfl=$cfl -Kxxt=$Kxxt -smooth=$smooth  -smoothOrder=$smoothOrder  -numberOfSmooths=$numberOfSmooths  -go=go";
if( $cg eq "line" ){\
$grid1="Line10"; $gName1 = "Line10";\
$grid2="Line20"; $gName2 = "Line20";\
$grid3="Line40"; $gName3 = "Line40";\
$grid4="Line80"; $gName4 = "Line80";\
$grid5="Line160"; $gName5 = "Line160";\
$grid6="Line320"; $gName6 = "Line320";}
#Longfei: make ngStart and ng work:
$ngEnd=$ngStart+$ng;
if($ngStart<=1 && 1 < $ngEnd){ $grid=$grid1; $res=10; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}	
if($ngStart<=2 && 2 < $ngEnd){ $grid=$grid2; $res=20; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}
if($ngStart<=3 && 3 < $ngEnd){ $grid=$grid3; $res=40; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}
if($ngStart<=4 && 4 < $ngEnd){ $grid=$grid4; $res=80; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}
if($ngStart<=5 && 5 < $ngEnd){ $grid=$grid5; $res=160; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}
if($ngStart<=6 && 6 < $ngEnd){ $grid=$grid6; $res=320; $cmd="$tbmCmd -noplot -cmd=$cmdDir/tzbeam -nElem=$res $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit
