# restart; read "diff.maple";
clear;


Dzr := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( (f(x+1,y,z)-f(x-1,y,z))/2 ), x,y,z);
end:
Dpr := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x+1,y,z)-f(x,y,z) ), x,y,z );
end:
Dmr := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x,y,z)-f(x-1,y,z)), x,y,z);
end:
Dzs := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( (f(x,y+1,z)-f(x,y-1,z))/2 ), x,y,z);
end:
Dps := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x,y+1,z)-f(x,y,z) ), x,y,z);
end:
Dms := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x,y,z)-f(x,y-1,z)), x,y,z);
end:

Dzt := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( (f(x,y,z+1)-f(x,y,z-1))/2 ), x,y,z);
end:
Dpt := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x,y,z+1)-f(x,y,z) ), x,y,z);
end:
Dmt := proc(f)
  local x,y,z;
  option operator;
  unapply( simplify( f(x,y,z)-f(x,y,z-1)), x,y,z);
end:

# Compute fourth-order accurate approximations to the 3rd order mixed derivatives

urr4 := (i1,i2,i3) -> ( Dpr(Dmr(u))(i1,i2,i3) -(1/12)*(Dpr(Dmr(Dpr(Dmr( u )) ))(i1,i2,i3)) ): # /dra^2
uss4 := (i1,i2,i3) -> ( Dps(Dms(u))(i1,i2,i3) -(1/12)*(Dps(Dms(Dps(Dms( u )) ))(i1,i2,i3)) ): # /dsa^2
utt4 := (i1,i2,i3) -> ( Dpt(Dmt(u))(i1,i2,i3) -(1/12)*(Dpt(Dmt(Dpt(Dmt( u )) ))(i1,i2,i3)) ): # /dta^2

urrs4 := (Dzs(urr4)(i1,i2,i3) -(1/6)*( Dzs(Dps(Dms(urr4)))(i1,i2,i3) ) ): # /(2*dsa)
urrs4 := simplify(urrs4*144):

printf("urrs4 = (%s)/(144.*dr(0)**2*dr(1))\n",convert(urrs4,string)):

urrt4 := (Dzt(urr4)(i1,i2,i3) -(1/6)*( Dzt(Dpt(Dmt(urr4)))(i1,i2,i3) ) ): # /(2*dta)
urrt4 := simplify(urrt4*144):

printf("urrt4 = (%s)/(144.*dr(0)**2*dr(2))\n",convert(urrt4,string)):

usst4 := (Dzt(uss4)(i1,i2,i3) -(1/6)*( Dzt(Dpt(Dmt(uss4)))(i1,i2,i3) ) ): # /(2*dta)
usst4 := simplify(usst4*144):

printf("usst4 = (%s)/(144.*dr(1)**2*dr(2))\n",convert(usst4,string)):

ussr4 := (Dzr(uss4)(i1,i2,i3) -(1/6)*( Dzr(Dpr(Dmr(uss4)))(i1,i2,i3) ) ): # /(2*dra)
ussr4 := simplify(ussr4*144):

printf("urss4 = (%s)/(144.*dr(1)**2*dr(0))\n",convert(ussr4,string)):

utts4 := (Dzs(utt4)(i1,i2,i3) -(1/6)*( Dzs(Dps(Dms(utt4)))(i1,i2,i3) ) ): # /(2*dsa)
utts4 := simplify(utts4*144):

printf("ustt4 = (%s)/(144.*dr(2)**2*dr(1))\n",convert(utts4,string)):

uttr4 := (Dzr(utt4)(i1,i2,i3) -(1/6)*( Dzr(Dpr(Dmr(utt4)))(i1,i2,i3) ) ): # /(2*dra)
uttr4 := simplify(uttr4*144):

printf("urtt4 = (%s)/(144.*dr(2)**2*dr(0))\n",convert(uttr4,string)):



ur4 := (i1,i2,i3) -> (Dzr(u)(i1,i2,i3) -(1/6)*( Dzr(Dpr(Dmr(u)))(i1,i2,i3) ) ): # /(2*dra)

urs4 := (Dzs(ur4)(i1,i2,i3) -(1/6)*( Dzs(Dps(Dms(ur4)))(i1,i2,i3) ) ): # /(2*dsa)
urs4 := simplify(urs4*48):

printf("urs4 = (%s)/(48.*dr(0)*dr(1))\n",convert(uttr4,string)):

# -----------------

urrr4 := Dzr(Dpr(Dmr(u)))(i1,i2,i3) -(1/4)*( Dzr(Dpr(Dmr(Dpr(Dmr( u ))) ) )(i1,i2,i3)):

urrr4 := simplify(urrr4*8):

printf("urrr4 = (%s)/(8.*dr(0)**3)\n",convert(urrr4,string)):


usss4 := Dzs(Dps(Dms(u)))(i1,i2,i3) -(1/4)*( Dzs(Dps(Dms(Dps(Dms( u ))) ) )(i1,i2,i3)):

usss4 := simplify(usss4*8):

printf("usss4 = (%s)/(8.*dr(1)**3)\n",convert(usss4,string)):

# restart; read "diff.maple";
