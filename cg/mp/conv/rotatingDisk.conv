#
# Measure convergence rates for cgmp and the rotatingDisk
#
# -conv= conv directory (and directory for output). .. So you can run the script outside the conv dir, e.g. for parallel
# 
# -- no projection: 
#  conv.p rotatingDisk.conv -tf=.1 -tp=.1 -cg=dd -godunovType=2 -pi=0 -bcOption=4 -ng=2
#
# 
# --------options: 
#   -pv : PDE variation:  nc=non-conservative, c=conservative, g=Godunov
#   -en : error norm: max, l1, l2
#   -ng : number of grids to use (i.e. how many times is the grid refined)
#   -cg : dd
#   -alwaysCompute=1 : force each case to be re-run even if the check file exists
# ---------------------
# Set default parameters: 
$pv = "g"; $tz="none"; $bcn = "d";  $ng=4; $diss=0.; $dissOrder=4; $tf=.5;  $tPlot=.1; $order=2; $nd=2; $scf=1.; 
$rho0=1.4; $pOffset=1.; $adCns=0.; 
$cfl=.9; $ad=0.; $numberOfParallelGhost=2; $bcOption=0; $smVariation="g"; $pi=0; $piGhostOption=3; $piOption=0; $adCns=0.; $angle=0;
$rotationRate=1.; 
$problem=1; $en="max"; 
$stressRelaxation=1; $relaxAlpha=0.1; $relaxDelta=0.1; $godunovType=0; 
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$cgsmCmd = "$CGBUILDPREFIX/mp/bin/cgmp";  # command for cgmp
$cmdDir="$ENV{CG}/mp/cmd"; 
$cmdFile="$cmdDir/rotatingDisk.cmd"; 
$amr=0; $tol=.01; $x0=.5; $y0=.5; $z0=0.; $ratio=2;  $nrl=2; $nbz=2;
$cg = "square"; $bg="square"; $alwaysCompute=1; $ts="me"; $lambda=1; $filter=0; $filterOrder=6; $filterStages=2; 
$showAllComponents=0;  # set to 1 to include all components in the table.
$case="default"; 
#
GetOptions( "pv=s"=>\$pv,"cg=s"=>\$cg,"en=s"=>\$en,"mode=i"=>\$mode,"ng=i"=>\$ng,"bcn=s"=>\$bcn,"ts=s"=>\$ts,"tf=f"=>\$tf,\
            "diss=f"=>\$diss,"tp=f"=>\$tPlot,"alwaysCompute=i"=>\$alwaysCompute,"lambda=f"=>\$lambda,\
            "filter=i"=>\$filter,"filterOrder=i"=>\$filterOrder,"filterStages=i"=>\$filterStages,\
            "showAllComponents=i"=>\$showAllComponents,"bg=s"=>\$bg,"amr=i"=>\$amr,"tol=f"=>\$tol,"nrl=i"=>\$nrl,\
            "nbz=i"=>\$nbz,"ratio=i"=>\$ratio,"x0=f"=>\$x0,"y0=f"=>\$y0,"z0=f"=>\$z0,"cfl=f"=>\$cfl,"ad=f"=>\$ad,\
            "cgsmCmd=s"=>\$cgsmCmd,"numberOfParallelGhost=i"=>\$numberOfParallelGhost,"dissOrder=i"=>\$dissOrder,\
            "stressRelaxation=f"=>\$stressRelaxation,"relaxAlpha=f"=>\$relaxAlpha,"relaxDelta=f"=>\$relaxDelta,\
            "bcOption=i"=>\$bcOption,"smVariation=s"=>\$smVariation,"pi=i"=>\$pi,"adCns=f"=>\$adCns,"piOption=i"=>\$piOption,\
            "angle=i"=>\$angle,"piGhostOption=i"=>\$piGhostOption,"godunovType=i"=>\$godunovType,"tz=s"=>\$tz,\
            "problem=i"=>\$problem,"scf=f"=>\$scf,"pOffset=f"=>\$pOffset,"rotationRate=f"=>\$rotationRate,\
            "rho0=f"=>\$rho0,"adCns=f"=>\$adCns,"case=s"=>\$case );
#
$rho0=$rho0/$scf;
$pOffset=$pOffset/$scf; 
#
$check="mp.check";
#
$numberOfDomains=2; 
$caseName="rotatingDisk.$cg.$case"; 
if( $saveVectorErrors eq 1 ){ $caseName.= ".vector"; }
$name=$caseName;
#
# --- define the table heading and caption --
# 
#  --- Godunov solid: include |u|, |v|, |sigma| in table by default (these are the first three in the sm check file)
#    for($i=3; $i<11; $i++ ){ $ignoreComponent[$i]=1; } 
#    $ignoreComponent[3]=1; $ignoreComponent[4]=1;  
if( $pv eq "g" )\
{\
  if( $showAllComponents == 1 )\
  { \
    if( $nd eq 2 ){ $numberOfComponents= 4 + 11; }else{ $numberOfComponents= 5 + 18; }  \
     $title ="grid  \& N \&  \$\\rho\$  \& \$u\$  \& \$v\$  \& \$T\$  \&\$u\$  \&  \$v$  \&  \$\\sigma\$ \& \$v_1\$ \& \$v_2\$ \& \$s_{11}\$ \& \$s_{12}\$ \& \$s_{21}\$ \& \$s_{22}\$ \&  \$u_1\$ \& \$u_2\$ ";\
     @componentName = ( "r", "v0", "v1" , "T" , "u", "v", "s", "v0", "v1" , "s11", "s12", "s21", "s22", "u0", "u1" );\
  }\
  else\
  { \
    $numberOfComponents= 4 + 3;  \
    $numberOfComponents= 4 + 11; for($i=7; $i<15; $i++ ){ $ignoreComponent[$i]=1; }  \
    $title ="grid  \& N \&  \$\\rho\$  \& \$v_1\$  \& \$v_2\$  \& \$T\$ \& \$\\vert u\\vert\$  \&  \$\\vert v\\vert\$  \&  \$\\vert\\sigma\\vert\$  "; \
    @componentName = ( "r", "v0", "v1" , "T", "u", "v", "s"  ); \
  }\
}
#
if( $pv eq "g" ){ $clabel = "diss=$diss"; }
$caption= "\\caption\{MP, $name, \$t=$tf\$, $clabel, \$\\lambda=$lambda\$, rotationRate=$rotationRate, cfl=$cfl, pi=$pi, piOption=$piOption, piGhostOption=$piGhostOption, -godunovType=$godunovType, problem=$problem tz=$tz, rho0=$rho0, pOffset=$pOffset, adCns=$adCns stressRelaxation=$stressRelaxation, $date}\\label\{table:$name}"; 
$outputFile="$name" . ".ConvTable.tex"; 
# 
$options = "-method=cns -cfl=$cfl -tp=$tPlot -tf=$tf -tz=$tz -problem=$problem -cnsVariation=godunov -cnsGodunovOrder=2 -smVariation=$smVariation -pi=$pi -en=$en -adCns=$adCns -bcOption=$bcOption -rotationRate=$rotationRate -piGhostOption=$piGhostOption -piOption=$piOption -godunovType=$godunovType -stressRelaxation=$stressRelaxation -d1=outerDomain -d2=innerDomain -rho0=$rho0 -pOffset=$pOffset -lambdaSolid=1. -muSolid=1. -diss=1. multiDomainAlgorithm=1";
# 
if( $cg eq "dd" ){\
$grid1="dd2";  $gName1 = "diskDeformFixedBig2e"; \
$grid2="dd4";  $gName2 = "diskDeformFixedBig4e"; \
$grid3="dd8";  $gName3 = "diskDeformFixedBig8e"; \
$grid4="dd16";  $gName4 = "diskDeformFixedBig16e"; \
$grid5="dd32";  $gName5 = "diskDeformFixedBig32e"; }
# 
# 
$grid=$grid1; $res=1; $cmd="$cgsmCmd -noplot $cmdFile -g=$gName1 $options";
$grid=$grid2; $res=2; $cmd="$cgsmCmd -noplot $cmdFile -g=$gName2 $options";
if( $ng > 2 ){ $grid=$grid3; $res=4;  $cmd="$cgsmCmd -noplot $cmdFile -g=$gName3 $options";}
if( $ng > 3 ){ $grid=$grid4; $res=8;  $cmd="$cgsmCmd -noplot $cmdFile -g=$gName4 $options";}
if( $ng > 4 ){ $grid=$grid5; $res=16; $cmd="$cgsmCmd -noplot $cmdFile -g=$gName5 $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit
