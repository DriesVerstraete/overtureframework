! This file automatically generated from bcOptSmCons.bf with bpp.
c     *******************************************************************************
c     Solid Mechanics boundary conditions -- conservative version
c     *******************************************************************************

c     These next include files will define the macros that will define the difference approximations
c     The actual macro is called below
c Define statement functions for difference approximations of order 2 
c Thsi file was generated by op/src/makeIncludeNew.p  
c Arguments: u,rx,dr,dx: names for the grid function, jacobian, unit square spacing and rectangular grid spacing
c To include derivatives of rx use OPTION=RX
c Arguments: u,rx,dr,dx: names for the grid function, jacobian, unit square spacing and rectangular grid spacing
c To include derivatives of rx use OPTION=RX


c Define statement functions for difference approximations of order 4 
c Thsi file was generated by op/src/makeIncludeNew.p  
c Arguments: u,rx,dr,dx: names for the grid function, jacobian, unit square spacing and rectangular grid spacing
c To include derivatives of rx use OPTION=RX
c Arguments: u,rx,dr,dx: names for the grid function, jacobian, unit square spacing and rectangular grid spacing
c To include derivatives of rx use OPTION=RX








! *wdh* 091205 -- changed most loops to use the mask (any loops setting ghost values) ----













c     ************************************************************************************************
c     This macro is used for looping over the faces of a grid to assign booundary conditions
c     
c     extra: extra points to assign
c     Case 1: extra=numberOfGhostPoints -- for assigning extended boundaries
c     Case 2: extra=-1 -- for assigning ghost points but not including extended boundaries
c     numberOfGhostPoints : number of ghost points (1 for 2nd order, 2 for fourth-order ...)
c     
c     
c     Output:
c     n1a,n1b,n2a,n2b,n3a,n3b : from gridIndexRange
c     nn1a,nn1b,nn2a,nn2b,nn3a,nn3b : includes "extra" points
c     
c     ***********************************************************************************************

!     
!     Below are the conservative stress free BC on rectangular grids
!     






!     ==========================================================================
!     Constervative
!     Apply a stress free BC -- curvilinear and 2d
!     
!     FORCING equals noForcing or forcing
!     ==========================================================================


!     ! 3D stuff



!     Edge stuff

! ================================================================================================
! ================================================================================================


!     ! 3D Cartesian stuff




!     ==========================================================================
!     Apply a stress free BC -- rectangular and 3d
!     
!     FORCING equals noForcing or forcing
!     ==========================================================================

!     Special cases for the edge and corners




! *wdh* 091205


      subroutine bcOptSmCons( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, ndMatProp,matIndex,matValpc,
     & matVal, boundaryCondition, addBoundaryForcing, interfaceType, 
     & dim, bcf00,bcf10,bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,ipar, 
     & rpar, ierr )
!     ===================================================================================
!     Boundary conditions for solid mechanics
!     
!     gridType : 0=rectangular, 1=curvilinear
!     
!     c2= mu/rho, c1=(mu+lambda)/rho;
!     
!     The forcing for the boundary conditions can be accessed in two ways. One can either
!     use the arrays:
!     bcf00(i1,i2,i3,m), bcf10(i1,i2,i3,m), bcf01(i1,i2,i3,m), bcf11(i1,i2,i3,m),
!     bcf02(i1,i2,i3,m), bcf12(i1,i2,i3,m)
!     which provide values for the 6 different faces in 6 different arrays. One can also
!     access the same values using the single statement function
!     bcf(side,axis,i1,i2,i3,m)
!     which is defined below.

!     ===================================================================================

      implicit none

      integer nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b, ierr

      real u(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:*)
      integer mask(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      real rsxy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1,0:nd-1)
      real xy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
      integer gridIndexRange(0:1,0:2),boundaryCondition(0:1,0:2)

      integer addBoundaryForcing(0:1,0:2)
      integer interfaceType(0:1,0:2,0:*)
      integer dim(0:1,0:2,0:1,0:2)

      real bcf00(dim(0,0,0,0):dim(1,0,0,0), dim(0,1,0,0):dim(1,1,0,0), 
     & dim(0,2,0,0):dim(1,2,0,0),0:*)
      real bcf10(dim(0,0,1,0):dim(1,0,1,0), dim(0,1,1,0):dim(1,1,1,0), 
     & dim(0,2,1,0):dim(1,2,1,0),0:*)
      real bcf01(dim(0,0,0,1):dim(1,0,0,1), dim(0,1,0,1):dim(1,1,0,1), 
     & dim(0,2,0,1):dim(1,2,0,1),0:*)
      real bcf11(dim(0,0,1,1):dim(1,0,1,1), dim(0,1,1,1):dim(1,1,1,1), 
     & dim(0,2,1,1):dim(1,2,1,1),0:*)
      real bcf02(dim(0,0,0,2):dim(1,0,0,2), dim(0,1,0,2):dim(1,1,0,2), 
     & dim(0,2,0,2):dim(1,2,0,2),0:*)
      real bcf12(dim(0,0,1,2):dim(1,0,1,2), dim(0,1,1,2):dim(1,1,1,2), 
     & dim(0,2,1,2):dim(1,2,1,2),0:*)

      real bcf0(0:*)
      integer*8 bcOffset(0:1,0:2)

      integer ipar(0:*)
      real rpar(0:*)

      ! -- Declare arrays for variable material properties --
      include 'declareVarMatProp.h'

      !     --- local variables ----

      integer side,axis,grid,gridType,orderOfAccuracy,
     & orderOfExtrapolation,twilightZone,uc,vc,wc,useWhereMask,debug,
     & nn,n1,n2
      real dx(0:2),dr(0:2),dri(0:3),dxi(0:3)
      real t,ep,dt,c1,c2,rho,mu,lambda,alpha
      integer axisp1,axisp2,i1,i2,i3,is1,is2,is3,j1,j2,j3,js1,js2,js3,
     & ks1,ks2,ks3,is,js,it,nit
      integer iep1,iep2,iep11,iep12,iep21,iep22
      integer option,initialized,itc

      integer numGhost,numberOfGhostPoints
      integer side1,side2,idxs,i
      integer n1a,n1b,n2a,n2b,n3a,n3b
      integer n1ae,n1be,n2ae,n2be,n3ae,n3be
      integer nn1a,nn1b,nn2a,nn2b,nn3a,nn3b
      integer extra1a,extra1b,extra2a,extra2b,extra3a,extra3b

      real a11,a12,a21,a22,det,b0,b1,b2,FSBCtmp

      real a0,a1,cc0,cc1,d0,d1,dr0,ds0
      real aNormSq,divu,uAve,Forceu,Forcev,jac,qx,qy,rx,ry

      real epsRatio,an1,an2,an3,aNorm,ua,ub,nDotU
      real epsx

      real tau11,tau12,tau13,tau21,tau22,tau23,tau31,tau32,tau33
      real ux,uy,uz,vx,vy,vz,wx,wy,wz
      real ux0,uy0,uz0,vx0,vy0,vz0,wx0,wy0,wz0
      real uxx0,uxy0,uxz0,uyy0,uyz0,uzz0
      real vxx0,vxy0,vxz0,vyy0,vyz0,vzz0
      real wxx0,wxy0,wxz0,wyy0,wyz0,wzz0
      real u0,v0,w0
      real um,up,vm,vp,wm,wp
      real lam2muM,lamM,muM,lam3M,lam2mu3M,mu3M,jac3,lambdaPlus2mu
      real tau1,tau2,tau3,clap1,clap2,ulap1,vlap1,wlap1,ulap2,vlap2,
     & wlap2,an1Cartesian,an2Cartesian

      integer numberOfEquations,job
      real a2(0:1,0:1),a3(0:2,0:2),a4(0:3,0:3),a8(0:7,0:7),q(0:11),f(
     & 0:11),ipvt(0:11),rcond,work(0:11)

      ! *wdh* 091205 
      real u1,v1,beta
      integer assignTwilightZone

      real err

!     define boundary conditions:
! define BC parameters for fortran routines
! boundary conditions
c123456789012345678901234567890123456789012345678901234567890123456789
      integer interpolation,displacementBC,tractionBC
      integer slipWall,symmetry,interfaceBC
      integer abcEM2,abcPML,abc3,abc4,abc5,rbcNonLocal,rbcLocal,lastBC
      integer dirichletBoundaryCondition
      parameter( interpolation=0,displacementBC=1,tractionBC=2)
      parameter( slipWall=3,symmetry=4 )
      parameter( interfaceBC=5,abcEM2=6,abcPML=7,abc3=8,abc4=9 )
      parameter( abc5=10,rbcNonLocal=11,rbcLocal=12 )
      parameter( dirichletBoundaryCondition=13 )
      parameter( lastBC=14 )
! define interfaceType values for fortran routines
      integer noInterface                     ! no interface conditions are imposed
      integer heatFluxInterface               ! [ T.n ] = g
      integer tractionInterface               ! [ n.tau ] = g
      integer tractionAndHeatFluxInterface
      parameter( noInterface=0, heatFluxInterface=1 )
      parameter( tractionInterface=2,tractionAndHeatFluxInterface=3 )

      integer rectangular,curvilinear
      parameter(rectangular=0,curvilinear=1)


      !     --- start statement function ----
      real rhopc,mupc,lambdapc,lam2mupc, rhov,muv,lambdav,lam2muv

      real bcf
      integer kd,m,n
      real uxOneSided
      real dr12
      real dr22
      real ur2
      real us2
      real ut2
      real urr2
      real uss2
      real urs2
      real utt2
      real urt2
      real ust2
      real urrr2
      real usss2
      real uttt2
      real urrs2
      real urss2
      real urrt2
      real usst2
      real urtt2
      real ustt2
      real urrrr2
      real ussss2
      real utttt2
      real urrss2
      real urrtt2
      real usstt2
      real urrrs2
      real ursss2
      real urrrt2
      real ussst2
      real urttt2
      real usttt2
      real rsxyr2
      real rsxys2
      real rsxyt2
      real rsxyrr2
      real rsxyss2
      real rsxyrs2
      real rsxytt2
      real rsxyrt2
      real rsxyst2
      real rsxyrrr2
      real rsxysss2
      real rsxyttt2
      real rsxyrrs2
      real rsxyrss2
      real rsxyrrt2
      real rsxysst2
      real rsxyrtt2
      real rsxystt2
      real rsxyrrrr2
      real rsxyssss2
      real rsxytttt2
      real rsxyrrss2
      real rsxyrrtt2
      real rsxysstt2
      real ux21
      real uy21
      real uz21
      real ux22
      real uy22
      real uz22
      real ux23
      real uy23
      real uz23
      real rsxyx21
      real rsxyx22
      real rsxyy22
      real rsxyx23
      real rsxyy23
      real rsxyz23
      real uxx21
      real uyy21
      real uxy21
      real uxz21
      real uyz21
      real uzz21
      real ulaplacian21
      real uxx22
      real uyy22
      real uxy22
      real uxz22
      real uyz22
      real uzz22
      real ulaplacian22
      real rsxyxx22
      real rsxyyy22
      real rsxyxy22
      real rsxyxxx22
      real rsxyxxy22
      real rsxyxyy22
      real rsxyyyy22
      real uxxx22
      real uxxy22
      real uxyy22
      real uyyy22
      real uxxxx22
      real uxxxy22
      real uxxyy22
      real uxyyy22
      real uyyyy22
      real uLapSq22
      real uxx23
      real uyy23
      real uzz23
      real uxy23
      real uxz23
      real uyz23
      real ulaplacian23
      real dx12
      real dx22
      real ux23r
      real uy23r
      real uz23r
      real uxx23r
      real uyy23r
      real uxy23r
      real uzz23r
      real uxz23r
      real uyz23r
      real ux21r
      real uy21r
      real uz21r
      real uxx21r
      real uyy21r
      real uzz21r
      real uxy21r
      real uxz21r
      real uyz21r
      real ulaplacian21r
      real ux22r
      real uy22r
      real uz22r
      real uxx22r
      real uyy22r
      real uzz22r
      real uxy22r
      real uxz22r
      real uyz22r
      real ulaplacian22r
      real ulaplacian23r
      real uxxx22r
      real uyyy22r
      real uxxy22r
      real uxyy22r
      real uxxxx22r
      real uyyyy22r
      real uxxyy22r
      real uLapSq22r
      real uxxx23r
      real uyyy23r
      real uzzz23r
      real uxxy23r
      real uxyy23r
      real uxxz23r
      real uyyz23r
      real uxzz23r
      real uyzz23r
      real uxxxx23r
      real uyyyy23r
      real uzzzz23r
      real uxxyy23r
      real uxxzz23r
      real uyyzz23r
      real dr14
      real dr24
      real ur4
      real us4
      real ut4
      real urr4
      real uss4
      real utt4
      real urs4
      real urt4
      real ust4
      real rsxyr4
      real rsxys4
      real rsxyt4
      real ux41
      real uy41
      real uz41
      real ux42
      real uy42
      real uz42
      real ux43
      real uy43
      real uz43
      real rsxyx41
      real rsxyx42
      real rsxyy42
      real rsxyx43
      real rsxyy43
      real rsxyz43
      real uxx41
      real uyy41
      real uxy41
      real uxz41
      real uyz41
      real uzz41
      real ulaplacian41
      real uxx42
      real uyy42
      real uxy42
      real uxz42
      real uyz42
      real uzz42
      real ulaplacian42
      real uxx43
      real uyy43
      real uzz43
      real uxy43
      real uxz43
      real uyz43
      real ulaplacian43
      real dx41
      real dx42
      real ux43r
      real uy43r
      real uz43r
      real uxx43r
      real uyy43r
      real uzz43r
      real uxy43r
      real uxz43r
      real uyz43r
      real ux41r
      real uy41r
      real uz41r
      real uxx41r
      real uyy41r
      real uzz41r
      real uxy41r
      real uxz41r
      real uyz41r
      real ulaplacian41r
      real ux42r
      real uy42r
      real uz42r
      real uxx42r
      real uyy42r
      real uzz42r
      real uxy42r
      real uxz42r
      real uyz42r
      real ulaplacian42r
      real ulaplacian43r

      !     The next macro call will define the difference approximation statement functions
      dr12(kd) = 1./(2.*dr(kd))
      dr22(kd) = 1./(dr(kd)**2)
      ur2(i1,i2,i3,kd)=(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))*dr12(0)
      us2(i1,i2,i3,kd)=(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))*dr12(1)
      ut2(i1,i2,i3,kd)=(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))*dr12(2)
      urr2(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1+1,i2,i3,kd)+u(i1-1,
     & i2,i3,kd)) )*dr22(0)
      uss2(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1,i2+1,i3,kd)+u(i1,i2-
     & 1,i3,kd)) )*dr22(1)
      urs2(i1,i2,i3,kd)=(ur2(i1,i2+1,i3,kd)-ur2(i1,i2-1,i3,kd))*dr12(1)
      utt2(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1,i2,i3+1,kd)+u(i1,i2,
     & i3-1,kd)) )*dr22(2)
      urt2(i1,i2,i3,kd)=(ur2(i1,i2,i3+1,kd)-ur2(i1,i2,i3-1,kd))*dr12(2)
      ust2(i1,i2,i3,kd)=(us2(i1,i2,i3+1,kd)-us2(i1,i2,i3-1,kd))*dr12(2)
      urrr2(i1,i2,i3,kd)=(-2.*(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))+(u(
     & i1+2,i2,i3,kd)-u(i1-2,i2,i3,kd)) )*dr22(0)*dr12(0)
      usss2(i1,i2,i3,kd)=(-2.*(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))+(u(
     & i1,i2+2,i3,kd)-u(i1,i2-2,i3,kd)) )*dr22(1)*dr12(1)
      uttt2(i1,i2,i3,kd)=(-2.*(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))+(u(
     & i1,i2,i3+2,kd)-u(i1,i2,i3-2,kd)) )*dr22(1)*dr12(2)
      urrs2(i1,i2,i3,kd)=( urr2(i1,i2+1,i3,kd)-urr2(i1,i2-1,i3,kd))/(
     & 2.*dr(1))
      urss2(i1,i2,i3,kd)=( uss2(i1+1,i2,i3,kd)-uss2(i1-1,i2,i3,kd))/(
     & 2.*dr(0))
      urrt2(i1,i2,i3,kd)=( urr2(i1,i2,i3+1,kd)-urr2(i1,i2,i3-1,kd))/(
     & 2.*dr(2))
      usst2(i1,i2,i3,kd)=( uss2(i1,i2,i3+1,kd)-uss2(i1,i2,i3-1,kd))/(
     & 2.*dr(2))
      urtt2(i1,i2,i3,kd)=( utt2(i1+1,i2,i3,kd)-utt2(i1-1,i2,i3,kd))/(
     & 2.*dr(0))
      ustt2(i1,i2,i3,kd)=( utt2(i1,i2+1,i3,kd)-utt2(i1,i2-1,i3,kd))/(
     & 2.*dr(1))
      urrrr2(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1+1,i2,i3,kd)+u(i1-
     & 1,i2,i3,kd))+(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )/(dr(0)**4)
      ussss2(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1,i2+1,i3,kd)+u(i1,
     & i2-1,i3,kd))+(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )/(dr(1)**4)
      utttt2(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1,i2,i3+1,kd)+u(i1,
     & i2,i3-1,kd))+(u(i1,i2,i3+2,kd)+u(i1,i2,i3-2,kd)) )/(dr(2)**4)
      urrss2(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)+u(i1,i2+1,i3,kd)+u(i1,i2-1,i3,kd))+   (u(i1+1,
     & i2+1,i3,kd)+u(i1-1,i2+1,i3,kd)+u(i1+1,i2-1,i3,kd)+u(i1-1,i2-1,
     & i3,kd)) )/(dr(0)**2*dr(1)**2)
      urrtt2(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)+u(i1,i2,i3+1,kd)+u(i1,i2,i3-1,kd))+   (u(i1+1,
     & i2,i3+1,kd)+u(i1-1,i2,i3+1,kd)+u(i1+1,i2,i3-1,kd)+u(i1-1,i2,i3-
     & 1,kd)) )/(dr(0)**2*dr(2)**2)
      usstt2(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1,i2+1,i3,kd)  +u(
     & i1,i2-1,i3,kd)+  u(i1,i2  ,i3+1,kd)+u(i1,i2  ,i3-1,kd))+   (u(
     & i1,i2+1,i3+1,kd)+u(i1,i2-1,i3+1,kd)+u(i1,i2+1,i3-1,kd)+u(i1,i2-
     & 1,i3-1,kd)) )/(dr(1)**2*dr(2)**2)
      urrrs2(i1,i2,i3,kd)=( urrr2(i1,i2+1,i3,kd)-urrr2(i1,i2-1,i3,kd))
     & /(2.*dr(1))
      ursss2(i1,i2,i3,kd)=( usss2(i1+1,i2,i3,kd)-usss2(i1-1,i2,i3,kd))
     & /(2.*dr(0))
      urrrt2(i1,i2,i3,kd)=( urrr2(i1,i2,i3+1,kd)-urrr2(i1,i2,i3-1,kd))
     & /(2.*dr(2))
      ussst2(i1,i2,i3,kd)=( usss2(i1,i2,i3+1,kd)-usss2(i1,i2,i3-1,kd))
     & /(2.*dr(2))
      urttt2(i1,i2,i3,kd)=( uttt2(i1+1,i2,i3,kd)-uttt2(i1-1,i2,i3,kd))
     & /(2.*dr(0))
      usttt2(i1,i2,i3,kd)=( uttt2(i1,i2+1,i3,kd)-uttt2(i1,i2-1,i3,kd))
     & /(2.*dr(1))
      rsxyr2(i1,i2,i3,m,n)=(rsxy(i1+1,i2,i3,m,n)-rsxy(i1-1,i2,i3,m,n))*
     & dr12(0)
      rsxys2(i1,i2,i3,m,n)=(rsxy(i1,i2+1,i3,m,n)-rsxy(i1,i2-1,i3,m,n))*
     & dr12(1)
      rsxyt2(i1,i2,i3,m,n)=(rsxy(i1,i2,i3+1,m,n)-rsxy(i1,i2,i3-1,m,n))*
     & dr12(2)
      rsxyrr2(i1,i2,i3,m,n)=(-2.*rsxy(i1,i2,i3,m,n)+(rsxy(i1+1,i2,i3,m,
     & n)+rsxy(i1-1,i2,i3,m,n)) )*dr22(0)
      rsxyss2(i1,i2,i3,m,n)=(-2.*rsxy(i1,i2,i3,m,n)+(rsxy(i1,i2+1,i3,m,
     & n)+rsxy(i1,i2-1,i3,m,n)) )*dr22(1)
      rsxyrs2(i1,i2,i3,m,n)=(rsxyr2(i1,i2+1,i3,m,n)-rsxyr2(i1,i2-1,i3,
     & m,n))*dr12(1)
      rsxytt2(i1,i2,i3,m,n)=(-2.*rsxy(i1,i2,i3,m,n)+(rsxy(i1,i2,i3+1,m,
     & n)+rsxy(i1,i2,i3-1,m,n)) )*dr22(2)
      rsxyrt2(i1,i2,i3,m,n)=(rsxyr2(i1,i2,i3+1,m,n)-rsxyr2(i1,i2,i3-1,
     & m,n))*dr12(2)
      rsxyst2(i1,i2,i3,m,n)=(rsxys2(i1,i2,i3+1,m,n)-rsxys2(i1,i2,i3-1,
     & m,n))*dr12(2)
      rsxyrrr2(i1,i2,i3,m,n)=(-2.*(rsxy(i1+1,i2,i3,m,n)-rsxy(i1-1,i2,
     & i3,m,n))+(rsxy(i1+2,i2,i3,m,n)-rsxy(i1-2,i2,i3,m,n)) )*dr22(0)*
     & dr12(0)
      rsxysss2(i1,i2,i3,m,n)=(-2.*(rsxy(i1,i2+1,i3,m,n)-rsxy(i1,i2-1,
     & i3,m,n))+(rsxy(i1,i2+2,i3,m,n)-rsxy(i1,i2-2,i3,m,n)) )*dr22(1)*
     & dr12(1)
      rsxyttt2(i1,i2,i3,m,n)=(-2.*(rsxy(i1,i2,i3+1,m,n)-rsxy(i1,i2,i3-
     & 1,m,n))+(rsxy(i1,i2,i3+2,m,n)-rsxy(i1,i2,i3-2,m,n)) )*dr22(1)*
     & dr12(2)
      rsxyrrs2(i1,i2,i3,m,n)=( rsxyrr2(i1,i2+1,i3,m,n)-rsxyrr2(i1,i2-1,
     & i3,m,n))/(2.*dr(1))
      rsxyrss2(i1,i2,i3,m,n)=( rsxyss2(i1+1,i2,i3,m,n)-rsxyss2(i1-1,i2,
     & i3,m,n))/(2.*dr(0))
      rsxyrrt2(i1,i2,i3,m,n)=( rsxyrr2(i1,i2,i3+1,m,n)-rsxyrr2(i1,i2,
     & i3-1,m,n))/(2.*dr(2))
      rsxysst2(i1,i2,i3,m,n)=( rsxyss2(i1,i2,i3+1,m,n)-rsxyss2(i1,i2,
     & i3-1,m,n))/(2.*dr(2))
      rsxyrtt2(i1,i2,i3,m,n)=( rsxytt2(i1+1,i2,i3,m,n)-rsxytt2(i1-1,i2,
     & i3,m,n))/(2.*dr(0))
      rsxystt2(i1,i2,i3,m,n)=( rsxytt2(i1,i2+1,i3,m,n)-rsxytt2(i1,i2-1,
     & i3,m,n))/(2.*dr(1))
      rsxyrrrr2(i1,i2,i3,m,n)=(6.*rsxy(i1,i2,i3,m,n)-4.*(rsxy(i1+1,i2,
     & i3,m,n)+rsxy(i1-1,i2,i3,m,n))+(rsxy(i1+2,i2,i3,m,n)+rsxy(i1-2,
     & i2,i3,m,n)) )/(dr(0)**4)
      rsxyssss2(i1,i2,i3,m,n)=(6.*rsxy(i1,i2,i3,m,n)-4.*(rsxy(i1,i2+1,
     & i3,m,n)+rsxy(i1,i2-1,i3,m,n))+(rsxy(i1,i2+2,i3,m,n)+rsxy(i1,i2-
     & 2,i3,m,n)) )/(dr(1)**4)
      rsxytttt2(i1,i2,i3,m,n)=(6.*rsxy(i1,i2,i3,m,n)-4.*(rsxy(i1,i2,i3+
     & 1,m,n)+rsxy(i1,i2,i3-1,m,n))+(rsxy(i1,i2,i3+2,m,n)+rsxy(i1,i2,
     & i3-2,m,n)) )/(dr(2)**4)
      rsxyrrss2(i1,i2,i3,m,n)=( 4.*rsxy(i1,i2,i3,m,n)-2.*(rsxy(i1+1,i2,
     & i3,m,n)+rsxy(i1-1,i2,i3,m,n)+rsxy(i1,i2+1,i3,m,n)+rsxy(i1,i2-1,
     & i3,m,n))+   (rsxy(i1+1,i2+1,i3,m,n)+rsxy(i1-1,i2+1,i3,m,n)+
     & rsxy(i1+1,i2-1,i3,m,n)+rsxy(i1-1,i2-1,i3,m,n)) )/(dr(0)**2*dr(
     & 1)**2)
      rsxyrrtt2(i1,i2,i3,m,n)=( 4.*rsxy(i1,i2,i3,m,n)-2.*(rsxy(i1+1,i2,
     & i3,m,n)+rsxy(i1-1,i2,i3,m,n)+rsxy(i1,i2,i3+1,m,n)+rsxy(i1,i2,
     & i3-1,m,n))+   (rsxy(i1+1,i2,i3+1,m,n)+rsxy(i1-1,i2,i3+1,m,n)+
     & rsxy(i1+1,i2,i3-1,m,n)+rsxy(i1-1,i2,i3-1,m,n)) )/(dr(0)**2*dr(
     & 2)**2)
      rsxysstt2(i1,i2,i3,m,n)=( 4.*rsxy(i1,i2,i3,m,n)-2.*(rsxy(i1,i2+1,
     & i3,m,n)  +rsxy(i1,i2-1,i3,m,n)+  rsxy(i1,i2  ,i3+1,m,n)+rsxy(
     & i1,i2  ,i3-1,m,n))+   (rsxy(i1,i2+1,i3+1,m,n)+rsxy(i1,i2-1,i3+
     & 1,m,n)+rsxy(i1,i2+1,i3-1,m,n)+rsxy(i1,i2-1,i3-1,m,n)) )/(dr(1)*
     & *2*dr(2)**2)
      ux21(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)
      uy21(i1,i2,i3,kd)=0
      uz21(i1,i2,i3,kd)=0
      ux22(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,0)*us2(i1,i2,i3,kd)
      uy22(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,1)*ur2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,1)*us2(i1,i2,i3,kd)
      uz22(i1,i2,i3,kd)=0
      ux23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,0)*us2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,0)*ut2(i1,i2,i3,kd)
      uy23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)*ur2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,1)*us2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,1)*ut2(i1,i2,i3,kd)
      uz23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,2)*ur2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,2)*us2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,2)*ut2(i1,i2,i3,kd)
      rsxyx21(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,n)
      rsxyx22(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,0)*rsxys2(i1,i2,i3,m,n)
      rsxyy22(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,1)*rsxyr2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,1)*rsxys2(i1,i2,i3,m,n)
      rsxyx23(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,0)*rsxys2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,0)*
     & rsxyt2(i1,i2,i3,m,n)
      rsxyy23(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,1)*rsxyr2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,1)*rsxys2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,1)*
     & rsxyt2(i1,i2,i3,m,n)
      rsxyz23(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,2)*rsxyr2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,2)*rsxys2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,2)*
     & rsxyt2(i1,i2,i3,m,n)
      uxx21(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2)*urr2(i1,i2,i3,kd)+(
     & rsxyx22(i1,i2,i3,0,0))*ur2(i1,i2,i3,kd)
      uyy21(i1,i2,i3,kd)=0
      uxy21(i1,i2,i3,kd)=0
      uxz21(i1,i2,i3,kd)=0
      uyz21(i1,i2,i3,kd)=0
      uzz21(i1,i2,i3,kd)=0
      ulaplacian21(i1,i2,i3,kd)=uxx21(i1,i2,i3,kd)
      uxx22(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2)*urr2(i1,i2,i3,kd)+2.*(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,0))*urs2(i1,i2,i3,kd)+(rsxy(
     & i1,i2,i3,1,0)**2)*uss2(i1,i2,i3,kd)+(rsxyx22(i1,i2,i3,0,0))*
     & ur2(i1,i2,i3,kd)+(rsxyx22(i1,i2,i3,1,0))*us2(i1,i2,i3,kd)
      uyy22(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,1)**2)*urr2(i1,i2,i3,kd)+2.*(
     & rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1))*urs2(i1,i2,i3,kd)+(rsxy(
     & i1,i2,i3,1,1)**2)*uss2(i1,i2,i3,kd)+(rsxyy22(i1,i2,i3,0,1))*
     & ur2(i1,i2,i3,kd)+(rsxyy22(i1,i2,i3,1,1))*us2(i1,i2,i3,kd)
      uxy22(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,1)*urr2(i1,
     & i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)+rsxy(i1,i2,i3,
     & 0,1)*rsxy(i1,i2,i3,1,0))*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & rsxy(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*ur2(
     & i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*us2(i1,i2,i3,kd)
      uxz22(i1,i2,i3,kd)=0
      uyz22(i1,i2,i3,kd)=0
      uzz22(i1,i2,i3,kd)=0
      ulaplacian22(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2+rsxy(i1,i2,i3,0,
     & 1)**2)*urr2(i1,i2,i3,kd)+2.*(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,
     & 1,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1))*urs2(i1,i2,i3,kd)+
     & (rsxy(i1,i2,i3,1,0)**2+rsxy(i1,i2,i3,1,1)**2)*uss2(i1,i2,i3,kd)
     & +(rsxyx22(i1,i2,i3,0,0)+rsxyy22(i1,i2,i3,0,1))*ur2(i1,i2,i3,kd)
     & +(rsxyx22(i1,i2,i3,1,0)+rsxyy22(i1,i2,i3,1,1))*us2(i1,i2,i3,kd)
c ..... start: 3rd and 4th derivatives, 2D ....
      rsxyxx22(i1,i2,i3,m,n)=(rsxy(i1,i2,i3,0,0)**2)*rsxyrr2(i1,i2,i3,
     & m,n)+2.*(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,0))*rsxyrs2(i1,i2,
     & i3,m,n)+(rsxy(i1,i2,i3,1,0)**2)*rsxyss2(i1,i2,i3,m,n)+(rsxyx22(
     & i1,i2,i3,0,0))*rsxyr2(i1,i2,i3,m,n)+(rsxyx22(i1,i2,i3,1,0))*
     & rsxys2(i1,i2,i3,m,n)
      rsxyyy22(i1,i2,i3,m,n)=(rsxy(i1,i2,i3,0,1)**2)*rsxyrr2(i1,i2,i3,
     & m,n)+2.*(rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1))*rsxyrs2(i1,i2,
     & i3,m,n)+(rsxy(i1,i2,i3,1,1)**2)*rsxyss2(i1,i2,i3,m,n)+(rsxyy22(
     & i1,i2,i3,0,1))*rsxyr2(i1,i2,i3,m,n)+(rsxyy22(i1,i2,i3,1,1))*
     & rsxys2(i1,i2,i3,m,n)
      rsxyxy22(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,1)*
     & rsxyrr2(i1,i2,i3,m,n)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)+
     & rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,0))*rsxyrs2(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n)+
     & rsxyx22(i1,i2,i3,0,1)*rsxyr2(i1,i2,i3,m,n)+rsxyx22(i1,i2,i3,1,
     & 1)*rsxys2(i1,i2,i3,m,n)
      rsxyxxx22(i1,i2,i3,m,n)=rsxyxx22(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,
     & n)+rsxyxx22(i1,i2,i3,1,0)*rsxys2(i1,i2,i3,m,n)+rsxyx22(i1,i2,
     & i3,0,0)*(rsxy(i1,i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxy(i1,i2,
     & i3,1,0)*rsxyrs2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,
     & i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,i2,i3,1,0)*rsxyrs2(
     & i1,i2,i3,m,n))+rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n))
     & +rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*rsxyrs2(i1,i2,i3,m,
     & n)+rsxyx22(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,
     & 0,0)*(rsxyx22(i1,i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,
     & i2,i3,1,0)*rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,
     & i2,i3,0,0)*rsxyrrr2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrrs2(
     & i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*rsxyrrs2(
     & i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrss2(i1,i2,i3,m,n)))+rsxy(
     & i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*rsxyrs2(i1,i2,i3,m,n)+
     & rsxyx22(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*rsxyrrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*
     & rsxyrss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxysss2(i1,i2,i3,m,
     & n)))
      rsxyxxy22(i1,i2,i3,m,n)=rsxyxy22(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,
     & n)+rsxyxy22(i1,i2,i3,1,0)*rsxys2(i1,i2,i3,m,n)+rsxyx22(i1,i2,
     & i3,0,1)*(rsxy(i1,i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxy(i1,i2,
     & i3,1,0)*rsxyrs2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,
     & i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,i2,i3,1,1)*rsxyrs2(
     & i1,i2,i3,m,n))+rsxyx22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n))
     & +rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*rsxyrs2(i1,i2,i3,m,
     & n)+rsxyx22(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,
     & 0,1)*(rsxyx22(i1,i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,
     & i2,i3,1,0)*rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,
     & i2,i3,0,0)*rsxyrrr2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrrs2(
     & i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*rsxyrrs2(
     & i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrss2(i1,i2,i3,m,n)))+rsxy(
     & i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,0)*rsxyrs2(i1,i2,i3,m,n)+
     & rsxyx22(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*rsxyrrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*
     & rsxyrss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxysss2(i1,i2,i3,m,
     & n)))
      rsxyxyy22(i1,i2,i3,m,n)=rsxyyy22(i1,i2,i3,0,0)*rsxyr2(i1,i2,i3,m,
     & n)+rsxyyy22(i1,i2,i3,1,0)*rsxys2(i1,i2,i3,m,n)+rsxyy22(i1,i2,
     & i3,0,1)*(rsxy(i1,i2,i3,0,0)*rsxyrr2(i1,i2,i3,m,n)+rsxy(i1,i2,
     & i3,1,0)*rsxyrs2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,
     & i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,i2,i3,1,1)*rsxyrs2(
     & i1,i2,i3,m,n))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyss2(i1,i2,i3,m,n))
     & +rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*rsxyrs2(i1,i2,i3,m,
     & n)+rsxyx22(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,
     & 0,1)*(rsxyx22(i1,i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxyx22(i1,
     & i2,i3,1,1)*rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,
     & i2,i3,0,0)*rsxyrrr2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrrs2(
     & i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*rsxyrrs2(
     & i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxyrss2(i1,i2,i3,m,n)))+rsxy(
     & i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*rsxyrs2(i1,i2,i3,m,n)+
     & rsxyx22(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,0)*rsxyrrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*
     & rsxyrss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & rsxyrss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,0)*rsxysss2(i1,i2,i3,m,
     & n)))
      rsxyyyy22(i1,i2,i3,m,n)=rsxyyy22(i1,i2,i3,0,1)*rsxyr2(i1,i2,i3,m,
     & n)+rsxyyy22(i1,i2,i3,1,1)*rsxys2(i1,i2,i3,m,n)+rsxyy22(i1,i2,
     & i3,0,1)*(rsxy(i1,i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxy(i1,i2,
     & i3,1,1)*rsxyrs2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,0,1)*(rsxyy22(i1,
     & i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxyy22(i1,i2,i3,1,1)*rsxyrs2(
     & i1,i2,i3,m,n))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*
     & rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n))
     & +rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*rsxyrs2(i1,i2,i3,m,
     & n)+rsxyy22(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,
     & 0,1)*(rsxyy22(i1,i2,i3,0,1)*rsxyrr2(i1,i2,i3,m,n)+rsxyy22(i1,
     & i2,i3,1,1)*rsxyrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,
     & i2,i3,0,1)*rsxyrrr2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,1)*rsxyrrs2(
     & i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*rsxyrrs2(
     & i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,1)*rsxyrss2(i1,i2,i3,m,n)))+rsxy(
     & i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*rsxyrs2(i1,i2,i3,m,n)+
     & rsxyy22(i1,i2,i3,1,1)*rsxyss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,1)*rsxyrrs2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,1)*
     & rsxyrss2(i1,i2,i3,m,n))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*
     & rsxyrss2(i1,i2,i3,m,n)+rsxy(i1,i2,i3,1,1)*rsxysss2(i1,i2,i3,m,
     & n)))
      uxxx22(i1,i2,i3,kd)=rsxyxx22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyxx22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,0)*(
     & rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*urr2(
     & i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+rsxyx22(
     & i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,0)*uss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,
     & i3,0,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(
     & rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urss2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))
      uxxy22(i1,i2,i3,kd)=rsxyxy22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyxy22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*(
     & rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*urr2(
     & i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+rsxyx22(
     & i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,0)*uss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,
     & i3,0,1)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(
     & rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urss2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))
      uxyy22(i1,i2,i3,kd)=rsxyyy22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(
     & rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*urr2(
     & i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+rsxyy22(
     & i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,0)*uss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,
     & i3,0,1)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*urr2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(
     & rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urss2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))
      uyyy22(i1,i2,i3,kd)=rsxyyy22(i1,i2,i3,0,1)*ur2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,1)*us2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(
     & rsxy(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urs2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*urr2(
     & i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+rsxyy22(
     & i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,1)*uss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,
     & i3,0,1)*urs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*uss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*urr2(i1,i2,i3,
     & kd)+rsxyy22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,1)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+
     & rsxyy22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(
     & rsxy(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urss2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urss2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))
      uxxxx22(i1,i2,i3,kd)=rsxyxxx22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyxxx22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyxx22(i1,i2,i3,0,0)
     & *(rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+2*rsxyx22(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,0,0)*(rsxyxx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyxx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+rsxyxx22(i1,i2,i3,1,
     & 0)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & uss2(i1,i2,i3,kd))+2*rsxyx22(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,
     & 0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxyxx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyxx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,0,0)
     & *(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)
     & *urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,0)*urss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,0,0)*(rsxyxx22(
     & i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyxx22(i1,i2,i3,1,0)*urs2(i1,
     & i2,i3,kd)+rsxyx22(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,
     & 0,0)*(rsxyx22(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,0)*urrs2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,
     & i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)))+rsxyx22(i1,i2,
     & i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,0)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,
     & 0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,0)*(
     & rsxyxx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyxx22(i1,i2,i3,1,0)
     & *uss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,0)
     & *(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,0,0)*(rsxyxx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyxx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrr2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)
     & *urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & ursss2(i1,i2,i3,kd))))+rsxy(i1,i2,i3,1,0)*(rsxyxx22(i1,i2,i3,0,
     & 0)*urs2(i1,i2,i3,kd)+rsxyxx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*ursss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ussss2(i1,i2,i3,kd))))
      uxxxy22(i1,i2,i3,kd)=rsxyxxy22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyxxy22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,0,0)
     & *(rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+rsxyx22(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*
     & urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyxy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,1,0)
     & *urs2(i1,i2,i3,kd))+rsxyxy22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,1)*
     & (rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & uss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyxy22(i1,i2,i3,0,0)*
     & urs2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(
     & rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)))+rsxy(i1,i2,
     & i3,0,0)*(rsxyxy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyxy22(i1,
     & i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*(rsxy(i1,i2,
     & i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*urrr2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,
     & 1,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*
     & urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)))+
     & rsxyx22(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(
     & rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(
     & i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urss2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))+rsxy(i1,i2,
     & i3,1,0)*(rsxyxy22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyxy22(i1,
     & i2,i3,1,0)*uss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*(rsxy(i1,i2,
     & i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,
     & 1,1)*(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*
     & urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,0,1)*(rsxyxx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyxx22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,0)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrr2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)
     & *urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & ursss2(i1,i2,i3,kd))))+rsxy(i1,i2,i3,1,1)*(rsxyxx22(i1,i2,i3,0,
     & 0)*urs2(i1,i2,i3,kd)+rsxyxx22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,0)*(
     & rsxyx22(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*ursss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ussss2(i1,i2,i3,kd))))
      uxxyy22(i1,i2,i3,kd)=rsxyxyy22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyxyy22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,0,0)
     & *(rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+2*rsxyx22(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*
     & urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,0,0)*(rsxyyy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+rsxyyy22(i1,i2,i3,1,
     & 0)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & uss2(i1,i2,i3,kd))+2*rsxyx22(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,
     & 1)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxyyy22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,0,1)
     & *(rsxyx22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)
     & *urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,0)*urss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,0,1)*(rsxyxy22(
     & i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,1,0)*urs2(i1,
     & i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,
     & 0,0)*(rsxyx22(i1,i2,i3,0,1)*urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,1)*urrs2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,1)*(rsxy(i1,i2,
     & i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)))+rsxyy22(i1,i2,
     & i3,1,1)*(rsxyx22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,0)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,
     & 0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyxy22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,1,0)
     & *uss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,1)
     & *(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*
     & urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,0,1)*(rsxyxy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyxy22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(rsxyx22(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+
     & rsxyx22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrr2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,0)
     & *urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,0)*(
     & rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & ursss2(i1,i2,i3,kd))))+rsxy(i1,i2,i3,1,1)*(rsxyxy22(i1,i2,i3,0,
     & 0)*urs2(i1,i2,i3,kd)+rsxyxy22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,0)*(
     & rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxyx22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,0)*(rsxyx22(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(
     & rsxyx22(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyx22(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,0)*(rsxy(i1,i2,i3,0,0)*
     & urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,0)*(rsxy(i1,i2,i3,0,0)*ursss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ussss2(i1,i2,i3,kd))))
      uxyyy22(i1,i2,i3,kd)=rsxyyyy22(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+
     & rsxyyyy22(i1,i2,i3,1,0)*us2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,0,1)
     & *(rsxy(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urs2(
     & i1,i2,i3,kd))+2*rsxyy22(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*
     & urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,0,1)*(rsxyyy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd))+rsxyyy22(i1,i2,i3,1,
     & 1)*(rsxy(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & uss2(i1,i2,i3,kd))+2*rsxyy22(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,
     & 1)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxyyy22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,0,1)
     & *(rsxyx22(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)
     & *urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*
     & urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,0)*urss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,0,1)*(rsxyyy22(
     & i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,0)*urs2(i1,
     & i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,
     & 0,1)*(rsxyx22(i1,i2,i3,0,1)*urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,1)*urrs2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,
     & i3,0,0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,
     & kd)+rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)))+rsxyy22(i1,i2,
     & i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+rsxyx22(i1,i2,
     & i3,1,1)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,
     & 0)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,0)*usss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyyy22(i1,i2,i3,0,0)*urs2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,0)
     & *uss2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)
     & *(rsxy(i1,i2,i3,0,0)*urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*
     & urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,0,1)*(rsxyyy22(i1,i2,i3,0,0)*urr2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,0)*urs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,0)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+
     & rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyx22(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrrr2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & urrss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)
     & *urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & ursss2(i1,i2,i3,kd))))+rsxy(i1,i2,i3,1,1)*(rsxyyy22(i1,i2,i3,0,
     & 0)*urs2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,0)*uss2(i1,i2,i3,kd)+
     & rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(
     & rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*usss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,1)*(rsxyx22(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+
     & rsxyx22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(
     & rsxyx22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*
     & urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*urrss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*urrss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyx22(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+rsxyx22(i1,i2,i3,1,1)*
     & usss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,0)*
     & urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*ursss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,0)*ursss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,0)*ussss2(i1,i2,i3,kd))))
      uyyyy22(i1,i2,i3,kd)=rsxyyyy22(i1,i2,i3,0,1)*ur2(i1,i2,i3,kd)+
     & rsxyyyy22(i1,i2,i3,1,1)*us2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,0,1)
     & *(rsxy(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urs2(
     & i1,i2,i3,kd))+2*rsxyy22(i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*
     & urr2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,0,1)*(rsxyyy22(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd))+rsxyyy22(i1,i2,i3,1,
     & 1)*(rsxy(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & uss2(i1,i2,i3,kd))+2*rsxyy22(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,
     & 1)*urs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxyyy22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,0,1)
     & *(rsxyy22(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)
     & *urs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,1)*urss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,0,1)*(rsxyyy22(
     & i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,1)*urs2(i1,
     & i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*urrr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,
     & 0,1)*(rsxyy22(i1,i2,i3,0,1)*urrr2(i1,i2,i3,kd)+rsxyy22(i1,i2,
     & i3,1,1)*urrs2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,
     & i3,0,1)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,
     & kd))+rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,
     & kd)+rsxyy22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)))+rsxyy22(i1,i2,
     & i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+rsxyy22(i1,i2,
     & i3,1,1)*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,
     & 1)*urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyyy22(i1,i2,i3,0,1)*urs2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,1)
     & *uss2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*
     & urrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+
     & rsxyy22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)
     & *(rsxy(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*
     & urss2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd)))+
     & rsxy(i1,i2,i3,0,1)*(rsxyyy22(i1,i2,i3,0,1)*urr2(i1,i2,i3,kd)+
     & rsxyyy22(i1,i2,i3,1,1)*urs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,0,1)*
     & (rsxy(i1,i2,i3,0,1)*urrr2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & urrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd))+
     & rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxyy22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(rsxyy22(i1,i2,i3,0,1)*
     & urrr2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*urrrr2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*urrrs2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxy(i1,i2,i3,0,1)*urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & urrss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)
     & *urrs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*urrrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*urrss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,1,1)*(
     & rsxy(i1,i2,i3,0,1)*urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*
     & ursss2(i1,i2,i3,kd))))+rsxy(i1,i2,i3,1,1)*(rsxyyy22(i1,i2,i3,0,
     & 1)*urs2(i1,i2,i3,kd)+rsxyyy22(i1,i2,i3,1,1)*uss2(i1,i2,i3,kd)+
     & rsxyy22(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*urss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(
     & rsxyy22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd))+rsxyy22(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd))+rsxy(
     & i1,i2,i3,1,1)*(rsxyy22(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+
     & rsxyy22(i1,i2,i3,1,1)*usss2(i1,i2,i3,kd))+rsxy(i1,i2,i3,0,1)*(
     & rsxyy22(i1,i2,i3,0,1)*urrs2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*
     & urss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*
     & urrrs2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*urrss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*urrss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*ursss2(i1,i2,i3,kd)))+rsxy(i1,i2,i3,1,1)*(
     & rsxyy22(i1,i2,i3,0,1)*urss2(i1,i2,i3,kd)+rsxyy22(i1,i2,i3,1,1)*
     & usss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,0,1)*(rsxy(i1,i2,i3,0,1)*
     & urrss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,1)*ursss2(i1,i2,i3,kd))+
     & rsxy(i1,i2,i3,1,1)*(rsxy(i1,i2,i3,0,1)*ursss2(i1,i2,i3,kd)+
     & rsxy(i1,i2,i3,1,1)*ussss2(i1,i2,i3,kd))))
      uLapSq22(i1,i2,i3,kd)=uxxxx22(i1,i2,i3,kd)+uyyyy22(i1,i2,i3,kd)+
     & 2.*uxxyy22(i1,i2,i3,kd)
c ..... end: 3rd and 4th derivatives, 2D ....
      uxx23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)**2*urr2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,0)**2*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,0)**2*utt2(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,0)*urs2(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,2,0)*urt2(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,0)*ust2(i1,i2,i3,
     & kd)+rsxyx23(i1,i2,i3,0,0)*ur2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,1,
     & 0)*us2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,2,0)*ut2(i1,i2,i3,kd)
      uyy23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)**2*urr2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,1)**2*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,1)**2*utt2(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1)*urs2(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,2,1)*urt2(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,2,1)*ust2(i1,i2,i3,
     & kd)+rsxyy23(i1,i2,i3,0,1)*ur2(i1,i2,i3,kd)+rsxyy23(i1,i2,i3,1,
     & 1)*us2(i1,i2,i3,kd)+rsxyy23(i1,i2,i3,2,1)*ut2(i1,i2,i3,kd)
      uzz23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,2)**2*urr2(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,2)**2*uss2(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,2)**2*utt2(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,1,2)*urs2(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,2)*urt2(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,2,2)*ust2(i1,i2,i3,
     & kd)+rsxyz23(i1,i2,i3,0,2)*ur2(i1,i2,i3,kd)+rsxyz23(i1,i2,i3,1,
     & 2)*us2(i1,i2,i3,kd)+rsxyz23(i1,i2,i3,2,2)*ut2(i1,i2,i3,kd)
      uxy23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,1)*urr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,1,1)*uss2(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,2,1)*utt2(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)+rsxy(i1,i2,i3,0,1)*rsxy(
     & i1,i2,i3,1,0))*urs2(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,
     & i2,i3,2,1)+rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,2,0))*urt2(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,1)+rsxy(i1,i2,i3,1,
     & 1)*rsxy(i1,i2,i3,2,0))*ust2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,0,1)*
     & ur2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,1,1)*us2(i1,i2,i3,kd)+
     & rsxyx23(i1,i2,i3,2,1)*ut2(i1,i2,i3,kd)
      uxz23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,2)*urr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,1,2)*uss2(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,2,2)*utt2(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,2)+rsxy(i1,i2,i3,0,2)*rsxy(
     & i1,i2,i3,1,0))*urs2(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,
     & i2,i3,2,2)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,0))*urt2(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,2)+rsxy(i1,i2,i3,1,
     & 2)*rsxy(i1,i2,i3,2,0))*ust2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,0,2)*
     & ur2(i1,i2,i3,kd)+rsxyx23(i1,i2,i3,1,2)*us2(i1,i2,i3,kd)+
     & rsxyx23(i1,i2,i3,2,2)*ut2(i1,i2,i3,kd)
      uyz23(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,0,2)*urr2(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,1,2)*uss2(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,1)*rsxy(i1,i2,i3,2,2)*utt2(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,2)+rsxy(i1,i2,i3,0,2)*rsxy(
     & i1,i2,i3,1,1))*urs2(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,1)*rsxy(i1,
     & i2,i3,2,2)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,1))*urt2(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,2,2)+rsxy(i1,i2,i3,1,
     & 2)*rsxy(i1,i2,i3,2,1))*ust2(i1,i2,i3,kd)+rsxyy23(i1,i2,i3,0,2)*
     & ur2(i1,i2,i3,kd)+rsxyy23(i1,i2,i3,1,2)*us2(i1,i2,i3,kd)+
     & rsxyy23(i1,i2,i3,2,2)*ut2(i1,i2,i3,kd)
      ulaplacian23(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2+rsxy(i1,i2,i3,0,
     & 1)**2+rsxy(i1,i2,i3,0,2)**2)*urr2(i1,i2,i3,kd)+(rsxy(i1,i2,i3,
     & 1,0)**2+rsxy(i1,i2,i3,1,1)**2+rsxy(i1,i2,i3,1,2)**2)*uss2(i1,
     & i2,i3,kd)+(rsxy(i1,i2,i3,2,0)**2+rsxy(i1,i2,i3,2,1)**2+rsxy(i1,
     & i2,i3,2,2)**2)*utt2(i1,i2,i3,kd)+2.*(rsxy(i1,i2,i3,0,0)*rsxy(
     & i1,i2,i3,1,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1)+rsxy(i1,
     & i2,i3,0,2)*rsxy(i1,i2,i3,1,2))*urs2(i1,i2,i3,kd)+2.*(rsxy(i1,
     & i2,i3,0,0)*rsxy(i1,i2,i3,2,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,
     & i3,2,1)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,2))*urt2(i1,i2,i3,
     & kd)+2.*(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,0)+ rsxy(i1,i2,i3,1,
     & 1)*rsxy(i1,i2,i3,2,1)+rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,2,2))*
     & ust2(i1,i2,i3,kd)+(rsxyx23(i1,i2,i3,0,0)+rsxyy23(i1,i2,i3,0,1)+
     & rsxyz23(i1,i2,i3,0,2))*ur2(i1,i2,i3,kd)+(rsxyx23(i1,i2,i3,1,0)+
     & rsxyy23(i1,i2,i3,1,1)+rsxyz23(i1,i2,i3,1,2))*us2(i1,i2,i3,kd)+(
     & rsxyx23(i1,i2,i3,2,0)+rsxyy23(i1,i2,i3,2,1)+rsxyz23(i1,i2,i3,2,
     & 2))*ut2(i1,i2,i3,kd)
c============================================================================================
c Define derivatives for a rectangular grid
c
c============================================================================================
      dx12(kd) = 1./(2.*dx(kd))
      dx22(kd) = 1./(dx(kd)**2)
      ux23r(i1,i2,i3,kd)=(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))*dx12(0)
      uy23r(i1,i2,i3,kd)=(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))*dx12(1)
      uz23r(i1,i2,i3,kd)=(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))*dx12(2)
      uxx23r(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1+1,i2,i3,kd)+u(i1-1,
     & i2,i3,kd)) )*dx22(0)
      uyy23r(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1,i2+1,i3,kd)+u(i1,
     & i2-1,i3,kd)) )*dx22(1)
      uxy23r(i1,i2,i3,kd)=(ux23r(i1,i2+1,i3,kd)-ux23r(i1,i2-1,i3,kd))*
     & dx12(1)
      uzz23r(i1,i2,i3,kd)=(-2.*u(i1,i2,i3,kd)+(u(i1,i2,i3+1,kd)+u(i1,
     & i2,i3-1,kd)) )*dx22(2)
      uxz23r(i1,i2,i3,kd)=(ux23r(i1,i2,i3+1,kd)-ux23r(i1,i2,i3-1,kd))*
     & dx12(2)
      uyz23r(i1,i2,i3,kd)=(uy23r(i1,i2,i3+1,kd)-uy23r(i1,i2,i3-1,kd))*
     & dx12(2)
      ux21r(i1,i2,i3,kd)= ux23r(i1,i2,i3,kd)
      uy21r(i1,i2,i3,kd)= uy23r(i1,i2,i3,kd)
      uz21r(i1,i2,i3,kd)= uz23r(i1,i2,i3,kd)
      uxx21r(i1,i2,i3,kd)= uxx23r(i1,i2,i3,kd)
      uyy21r(i1,i2,i3,kd)= uyy23r(i1,i2,i3,kd)
      uzz21r(i1,i2,i3,kd)= uzz23r(i1,i2,i3,kd)
      uxy21r(i1,i2,i3,kd)= uxy23r(i1,i2,i3,kd)
      uxz21r(i1,i2,i3,kd)= uxz23r(i1,i2,i3,kd)
      uyz21r(i1,i2,i3,kd)= uyz23r(i1,i2,i3,kd)
      ulaplacian21r(i1,i2,i3,kd)=uxx23r(i1,i2,i3,kd)
      ux22r(i1,i2,i3,kd)= ux23r(i1,i2,i3,kd)
      uy22r(i1,i2,i3,kd)= uy23r(i1,i2,i3,kd)
      uz22r(i1,i2,i3,kd)= uz23r(i1,i2,i3,kd)
      uxx22r(i1,i2,i3,kd)= uxx23r(i1,i2,i3,kd)
      uyy22r(i1,i2,i3,kd)= uyy23r(i1,i2,i3,kd)
      uzz22r(i1,i2,i3,kd)= uzz23r(i1,i2,i3,kd)
      uxy22r(i1,i2,i3,kd)= uxy23r(i1,i2,i3,kd)
      uxz22r(i1,i2,i3,kd)= uxz23r(i1,i2,i3,kd)
      uyz22r(i1,i2,i3,kd)= uyz23r(i1,i2,i3,kd)
      ulaplacian22r(i1,i2,i3,kd)=uxx23r(i1,i2,i3,kd)+uyy23r(i1,i2,i3,
     & kd)
      ulaplacian23r(i1,i2,i3,kd)=uxx23r(i1,i2,i3,kd)+uyy23r(i1,i2,i3,
     & kd)+uzz23r(i1,i2,i3,kd)
      uxxx22r(i1,i2,i3,kd)=(-2.*(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))+(u(
     & i1+2,i2,i3,kd)-u(i1-2,i2,i3,kd)) )*dx22(0)*dx12(0)
      uyyy22r(i1,i2,i3,kd)=(-2.*(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))+(u(
     & i1,i2+2,i3,kd)-u(i1,i2-2,i3,kd)) )*dx22(1)*dx12(1)
      uxxy22r(i1,i2,i3,kd)=( uxx22r(i1,i2+1,i3,kd)-uxx22r(i1,i2-1,i3,
     & kd))/(2.*dx(1))
      uxyy22r(i1,i2,i3,kd)=( uyy22r(i1+1,i2,i3,kd)-uyy22r(i1-1,i2,i3,
     & kd))/(2.*dx(0))
      uxxxx22r(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)) +(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )/(dx(0)**
     & 4)
      uyyyy22r(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1,i2+1,i3,kd)+u(
     & i1,i2-1,i3,kd)) +(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )/(dx(1)**
     & 4)
      uxxyy22r(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)+u(i1,i2+1,i3,kd)+u(i1,i2-1,i3,kd))+   (u(i1+1,
     & i2+1,i3,kd)+u(i1-1,i2+1,i3,kd)+u(i1+1,i2-1,i3,kd)+u(i1-1,i2-1,
     & i3,kd)) )/(dx(0)**2*dx(1)**2)
      uLapSq22r(i1,i2,i3,kd)= ( 6.*u(i1,i2,i3,kd)- 4.*(u(i1+1,i2,i3,kd)
     & +u(i1-1,i2,i3,kd))+(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )/(dx(0)
     & **4)+( 6.*u(i1,i2,i3,kd)-4.*(u(i1,i2+1,i3,kd)+u(i1,i2-1,i3,kd))
     &  +(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )/(dx(1)**4)+( 8.*u(i1,
     & i2,i3,kd)-4.*(u(i1+1,i2,i3,kd)+u(i1-1,i2,i3,kd)+u(i1,i2+1,i3,
     & kd)+u(i1,i2-1,i3,kd))+2.*(u(i1+1,i2+1,i3,kd)+u(i1-1,i2+1,i3,kd)
     & +u(i1+1,i2-1,i3,kd)+u(i1-1,i2-1,i3,kd)) )/(dx(0)**2*dx(1)**2)
      uxxx23r(i1,i2,i3,kd)=(-2.*(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))+(u(
     & i1+2,i2,i3,kd)-u(i1-2,i2,i3,kd)) )*dx22(0)*dx12(0)
      uyyy23r(i1,i2,i3,kd)=(-2.*(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))+(u(
     & i1,i2+2,i3,kd)-u(i1,i2-2,i3,kd)) )*dx22(1)*dx12(1)
      uzzz23r(i1,i2,i3,kd)=(-2.*(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))+(u(
     & i1,i2,i3+2,kd)-u(i1,i2,i3-2,kd)) )*dx22(1)*dx12(2)
      uxxy23r(i1,i2,i3,kd)=( uxx22r(i1,i2+1,i3,kd)-uxx22r(i1,i2-1,i3,
     & kd))/(2.*dx(1))
      uxyy23r(i1,i2,i3,kd)=( uyy22r(i1+1,i2,i3,kd)-uyy22r(i1-1,i2,i3,
     & kd))/(2.*dx(0))
      uxxz23r(i1,i2,i3,kd)=( uxx22r(i1,i2,i3+1,kd)-uxx22r(i1,i2,i3-1,
     & kd))/(2.*dx(2))
      uyyz23r(i1,i2,i3,kd)=( uyy22r(i1,i2,i3+1,kd)-uyy22r(i1,i2,i3-1,
     & kd))/(2.*dx(2))
      uxzz23r(i1,i2,i3,kd)=( uzz22r(i1+1,i2,i3,kd)-uzz22r(i1-1,i2,i3,
     & kd))/(2.*dx(0))
      uyzz23r(i1,i2,i3,kd)=( uzz22r(i1,i2+1,i3,kd)-uzz22r(i1,i2-1,i3,
     & kd))/(2.*dx(1))
      uxxxx23r(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd))+(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )/(dx(0)**
     & 4)
      uyyyy23r(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1,i2+1,i3,kd)+u(
     & i1,i2-1,i3,kd))+(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )/(dx(1)**
     & 4)
      uzzzz23r(i1,i2,i3,kd)=(6.*u(i1,i2,i3,kd)-4.*(u(i1,i2,i3+1,kd)+u(
     & i1,i2,i3-1,kd))+(u(i1,i2,i3+2,kd)+u(i1,i2,i3-2,kd)) )/(dx(2)**
     & 4)
      uxxyy23r(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)+u(i1,i2+1,i3,kd)+u(i1,i2-1,i3,kd))+   (u(i1+1,
     & i2+1,i3,kd)+u(i1-1,i2+1,i3,kd)+u(i1+1,i2-1,i3,kd)+u(i1-1,i2-1,
     & i3,kd)) )/(dx(0)**2*dx(1)**2)
      uxxzz23r(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd)+u(i1,i2,i3+1,kd)+u(i1,i2,i3-1,kd))+   (u(i1+1,
     & i2,i3+1,kd)+u(i1-1,i2,i3+1,kd)+u(i1+1,i2,i3-1,kd)+u(i1-1,i2,i3-
     & 1,kd)) )/(dx(0)**2*dx(2)**2)
      uyyzz23r(i1,i2,i3,kd)=( 4.*u(i1,i2,i3,kd)-2.*(u(i1,i2+1,i3,kd)  +
     & u(i1,i2-1,i3,kd)+  u(i1,i2  ,i3+1,kd)+u(i1,i2  ,i3-1,kd))+   (
     & u(i1,i2+1,i3+1,kd)+u(i1,i2-1,i3+1,kd)+u(i1,i2+1,i3-1,kd)+u(i1,
     & i2-1,i3-1,kd)) )/(dx(1)**2*dx(2)**2)
      dr14(kd) = 1./(12.*dr(kd))
      dr24(kd) = 1./(12.*dr(kd)**2)
      ur4(i1,i2,i3,kd)=(8.*(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))-(u(i1+2,
     & i2,i3,kd)-u(i1-2,i2,i3,kd)))*dr14(0)
      us4(i1,i2,i3,kd)=(8.*(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))-(u(i1,
     & i2+2,i3,kd)-u(i1,i2-2,i3,kd)))*dr14(1)
      ut4(i1,i2,i3,kd)=(8.*(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))-(u(i1,
     & i2,i3+2,kd)-u(i1,i2,i3-2,kd)))*dr14(2)
      urr4(i1,i2,i3,kd)=(-30.*u(i1,i2,i3,kd)+16.*(u(i1+1,i2,i3,kd)+u(
     & i1-1,i2,i3,kd))-(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )*dr24(0)
      uss4(i1,i2,i3,kd)=(-30.*u(i1,i2,i3,kd)+16.*(u(i1,i2+1,i3,kd)+u(
     & i1,i2-1,i3,kd))-(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )*dr24(1)
      utt4(i1,i2,i3,kd)=(-30.*u(i1,i2,i3,kd)+16.*(u(i1,i2,i3+1,kd)+u(
     & i1,i2,i3-1,kd))-(u(i1,i2,i3+2,kd)+u(i1,i2,i3-2,kd)) )*dr24(2)
      urs4(i1,i2,i3,kd)=(8.*(ur4(i1,i2+1,i3,kd)-ur4(i1,i2-1,i3,kd))-(
     & ur4(i1,i2+2,i3,kd)-ur4(i1,i2-2,i3,kd)))*dr14(1)
      urt4(i1,i2,i3,kd)=(8.*(ur4(i1,i2,i3+1,kd)-ur4(i1,i2,i3-1,kd))-(
     & ur4(i1,i2,i3+2,kd)-ur4(i1,i2,i3-2,kd)))*dr14(2)
      ust4(i1,i2,i3,kd)=(8.*(us4(i1,i2,i3+1,kd)-us4(i1,i2,i3-1,kd))-(
     & us4(i1,i2,i3+2,kd)-us4(i1,i2,i3-2,kd)))*dr14(2)
      rsxyr4(i1,i2,i3,m,n)=(8.*(rsxy(i1+1,i2,i3,m,n)-rsxy(i1-1,i2,i3,m,
     & n))-(rsxy(i1+2,i2,i3,m,n)-rsxy(i1-2,i2,i3,m,n)))*dr14(0)
      rsxys4(i1,i2,i3,m,n)=(8.*(rsxy(i1,i2+1,i3,m,n)-rsxy(i1,i2-1,i3,m,
     & n))-(rsxy(i1,i2+2,i3,m,n)-rsxy(i1,i2-2,i3,m,n)))*dr14(1)
      rsxyt4(i1,i2,i3,m,n)=(8.*(rsxy(i1,i2,i3+1,m,n)-rsxy(i1,i2,i3-1,m,
     & n))-(rsxy(i1,i2,i3+2,m,n)-rsxy(i1,i2,i3-2,m,n)))*dr14(2)
      ux41(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,0)*ur4(i1,i2,i3,kd)
      uy41(i1,i2,i3,kd)=0
      uz41(i1,i2,i3,kd)=0
      ux42(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,0)*ur4(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,0)*us4(i1,i2,i3,kd)
      uy42(i1,i2,i3,kd)= rsxy(i1,i2,i3,0,1)*ur4(i1,i2,i3,kd)+rsxy(i1,
     & i2,i3,1,1)*us4(i1,i2,i3,kd)
      uz42(i1,i2,i3,kd)=0
      ux43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*ur4(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,0)*us4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,0)*ut4(i1,i2,i3,kd)
      uy43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)*ur4(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,1)*us4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,1)*ut4(i1,i2,i3,kd)
      uz43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,2)*ur4(i1,i2,i3,kd)+rsxy(i1,i2,
     & i3,1,2)*us4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,2)*ut4(i1,i2,i3,kd)
      rsxyx41(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,0)*rsxyr4(i1,i2,i3,m,n)
      rsxyx42(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,0)*rsxyr4(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,0)*rsxys4(i1,i2,i3,m,n)
      rsxyy42(i1,i2,i3,m,n)= rsxy(i1,i2,i3,0,1)*rsxyr4(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,1)*rsxys4(i1,i2,i3,m,n)
      rsxyx43(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,0)*rsxyr4(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,0)*rsxys4(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,0)*
     & rsxyt4(i1,i2,i3,m,n)
      rsxyy43(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,1)*rsxyr4(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,1)*rsxys4(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,1)*
     & rsxyt4(i1,i2,i3,m,n)
      rsxyz43(i1,i2,i3,m,n)=rsxy(i1,i2,i3,0,2)*rsxyr4(i1,i2,i3,m,n)+
     & rsxy(i1,i2,i3,1,2)*rsxys4(i1,i2,i3,m,n)+rsxy(i1,i2,i3,2,2)*
     & rsxyt4(i1,i2,i3,m,n)
      uxx41(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2)*urr4(i1,i2,i3,kd)+(
     & rsxyx42(i1,i2,i3,0,0))*ur4(i1,i2,i3,kd)
      uyy41(i1,i2,i3,kd)=0
      uxy41(i1,i2,i3,kd)=0
      uxz41(i1,i2,i3,kd)=0
      uyz41(i1,i2,i3,kd)=0
      uzz41(i1,i2,i3,kd)=0
      ulaplacian41(i1,i2,i3,kd)=uxx41(i1,i2,i3,kd)
      uxx42(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2)*urr4(i1,i2,i3,kd)+2.*(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,0))*urs4(i1,i2,i3,kd)+(rsxy(
     & i1,i2,i3,1,0)**2)*uss4(i1,i2,i3,kd)+(rsxyx42(i1,i2,i3,0,0))*
     & ur4(i1,i2,i3,kd)+(rsxyx42(i1,i2,i3,1,0))*us4(i1,i2,i3,kd)
      uyy42(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,1)**2)*urr4(i1,i2,i3,kd)+2.*(
     & rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1))*urs4(i1,i2,i3,kd)+(rsxy(
     & i1,i2,i3,1,1)**2)*uss4(i1,i2,i3,kd)+(rsxyy42(i1,i2,i3,0,1))*
     & ur4(i1,i2,i3,kd)+(rsxyy42(i1,i2,i3,1,1))*us4(i1,i2,i3,kd)
      uxy42(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,1)*urr4(i1,
     & i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)+rsxy(i1,i2,i3,
     & 0,1)*rsxy(i1,i2,i3,1,0))*urs4(i1,i2,i3,kd)+rsxy(i1,i2,i3,1,0)*
     & rsxy(i1,i2,i3,1,1)*uss4(i1,i2,i3,kd)+rsxyx42(i1,i2,i3,0,1)*ur4(
     & i1,i2,i3,kd)+rsxyx42(i1,i2,i3,1,1)*us4(i1,i2,i3,kd)
      uxz42(i1,i2,i3,kd)=0
      uyz42(i1,i2,i3,kd)=0
      uzz42(i1,i2,i3,kd)=0
      ulaplacian42(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2+rsxy(i1,i2,i3,0,
     & 1)**2)*urr4(i1,i2,i3,kd)+2.*(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,
     & 1,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1))*urs4(i1,i2,i3,kd)+
     & (rsxy(i1,i2,i3,1,0)**2+rsxy(i1,i2,i3,1,1)**2)*uss4(i1,i2,i3,kd)
     & +(rsxyx42(i1,i2,i3,0,0)+rsxyy42(i1,i2,i3,0,1))*ur4(i1,i2,i3,kd)
     & +(rsxyx42(i1,i2,i3,1,0)+rsxyy42(i1,i2,i3,1,1))*us4(i1,i2,i3,kd)
      uxx43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)**2*urr4(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,0)**2*uss4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,0)**2*utt4(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,0)*urs4(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,2,0)*urt4(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,0)*ust4(i1,i2,i3,
     & kd)+rsxyx43(i1,i2,i3,0,0)*ur4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,1,
     & 0)*us4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,2,0)*ut4(i1,i2,i3,kd)
      uyy43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)**2*urr4(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,1)**2*uss4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,1)**2*utt4(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1)*urs4(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,2,1)*urt4(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,2,1)*ust4(i1,i2,i3,
     & kd)+rsxyy43(i1,i2,i3,0,1)*ur4(i1,i2,i3,kd)+rsxyy43(i1,i2,i3,1,
     & 1)*us4(i1,i2,i3,kd)+rsxyy43(i1,i2,i3,2,1)*ut4(i1,i2,i3,kd)
      uzz43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,2)**2*urr4(i1,i2,i3,kd)+rsxy(
     & i1,i2,i3,1,2)**2*uss4(i1,i2,i3,kd)+rsxy(i1,i2,i3,2,2)**2*utt4(
     & i1,i2,i3,kd)+2.*rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,1,2)*urs4(i1,
     & i2,i3,kd)+2.*rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,2)*urt4(i1,i2,
     & i3,kd)+2.*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,2,2)*ust4(i1,i2,i3,
     & kd)+rsxyz43(i1,i2,i3,0,2)*ur4(i1,i2,i3,kd)+rsxyz43(i1,i2,i3,1,
     & 2)*us4(i1,i2,i3,kd)+rsxyz43(i1,i2,i3,2,2)*ut4(i1,i2,i3,kd)
      uxy43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,1)*urr4(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,1,1)*uss4(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,2,1)*utt4(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)+rsxy(i1,i2,i3,0,1)*rsxy(
     & i1,i2,i3,1,0))*urs4(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,
     & i2,i3,2,1)+rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,2,0))*urt4(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,1)+rsxy(i1,i2,i3,1,
     & 1)*rsxy(i1,i2,i3,2,0))*ust4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,0,1)*
     & ur4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,1,1)*us4(i1,i2,i3,kd)+
     & rsxyx43(i1,i2,i3,2,1)*ut4(i1,i2,i3,kd)
      uxz43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,0,2)*urr4(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,1,2)*uss4(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,2,2)*utt4(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,2)+rsxy(i1,i2,i3,0,2)*rsxy(
     & i1,i2,i3,1,0))*urs4(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,0)*rsxy(i1,
     & i2,i3,2,2)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,0))*urt4(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,2)+rsxy(i1,i2,i3,1,
     & 2)*rsxy(i1,i2,i3,2,0))*ust4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,0,2)*
     & ur4(i1,i2,i3,kd)+rsxyx43(i1,i2,i3,1,2)*us4(i1,i2,i3,kd)+
     & rsxyx43(i1,i2,i3,2,2)*ut4(i1,i2,i3,kd)
      uyz43(i1,i2,i3,kd)=rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,0,2)*urr4(i1,
     & i2,i3,kd)+rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,1,2)*uss4(i1,i2,i3,
     & kd)+rsxy(i1,i2,i3,2,1)*rsxy(i1,i2,i3,2,2)*utt4(i1,i2,i3,kd)+(
     & rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,2)+rsxy(i1,i2,i3,0,2)*rsxy(
     & i1,i2,i3,1,1))*urs4(i1,i2,i3,kd)+(rsxy(i1,i2,i3,0,1)*rsxy(i1,
     & i2,i3,2,2)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,1))*urt4(i1,i2,
     & i3,kd)+(rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,2,2)+rsxy(i1,i2,i3,1,
     & 2)*rsxy(i1,i2,i3,2,1))*ust4(i1,i2,i3,kd)+rsxyy43(i1,i2,i3,0,2)*
     & ur4(i1,i2,i3,kd)+rsxyy43(i1,i2,i3,1,2)*us4(i1,i2,i3,kd)+
     & rsxyy43(i1,i2,i3,2,2)*ut4(i1,i2,i3,kd)
      ulaplacian43(i1,i2,i3,kd)=(rsxy(i1,i2,i3,0,0)**2+rsxy(i1,i2,i3,0,
     & 1)**2+rsxy(i1,i2,i3,0,2)**2)*urr4(i1,i2,i3,kd)+(rsxy(i1,i2,i3,
     & 1,0)**2+rsxy(i1,i2,i3,1,1)**2+rsxy(i1,i2,i3,1,2)**2)*uss4(i1,
     & i2,i3,kd)+(rsxy(i1,i2,i3,2,0)**2+rsxy(i1,i2,i3,2,1)**2+rsxy(i1,
     & i2,i3,2,2)**2)*utt4(i1,i2,i3,kd)+2.*(rsxy(i1,i2,i3,0,0)*rsxy(
     & i1,i2,i3,1,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,1)+rsxy(i1,
     & i2,i3,0,2)*rsxy(i1,i2,i3,1,2))*urs4(i1,i2,i3,kd)+2.*(rsxy(i1,
     & i2,i3,0,0)*rsxy(i1,i2,i3,2,0)+ rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,
     & i3,2,1)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,2,2))*urt4(i1,i2,i3,
     & kd)+2.*(rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,0)+ rsxy(i1,i2,i3,1,
     & 1)*rsxy(i1,i2,i3,2,1)+rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,2,2))*
     & ust4(i1,i2,i3,kd)+(rsxyx43(i1,i2,i3,0,0)+rsxyy43(i1,i2,i3,0,1)+
     & rsxyz43(i1,i2,i3,0,2))*ur4(i1,i2,i3,kd)+(rsxyx43(i1,i2,i3,1,0)+
     & rsxyy43(i1,i2,i3,1,1)+rsxyz43(i1,i2,i3,1,2))*us4(i1,i2,i3,kd)+(
     & rsxyx43(i1,i2,i3,2,0)+rsxyy43(i1,i2,i3,2,1)+rsxyz43(i1,i2,i3,2,
     & 2))*ut4(i1,i2,i3,kd)
c============================================================================================
c Define derivatives for a rectangular grid
c
c============================================================================================
      dx41(kd) = 1./(12.*dx(kd))
      dx42(kd) = 1./(12.*dx(kd)**2)
      ux43r(i1,i2,i3,kd)=(8.*(u(i1+1,i2,i3,kd)-u(i1-1,i2,i3,kd))-(u(i1+
     & 2,i2,i3,kd)-u(i1-2,i2,i3,kd)))*dx41(0)
      uy43r(i1,i2,i3,kd)=(8.*(u(i1,i2+1,i3,kd)-u(i1,i2-1,i3,kd))-(u(i1,
     & i2+2,i3,kd)-u(i1,i2-2,i3,kd)))*dx41(1)
      uz43r(i1,i2,i3,kd)=(8.*(u(i1,i2,i3+1,kd)-u(i1,i2,i3-1,kd))-(u(i1,
     & i2,i3+2,kd)-u(i1,i2,i3-2,kd)))*dx41(2)
      uxx43r(i1,i2,i3,kd)=( -30.*u(i1,i2,i3,kd)+16.*(u(i1+1,i2,i3,kd)+
     & u(i1-1,i2,i3,kd))-(u(i1+2,i2,i3,kd)+u(i1-2,i2,i3,kd)) )*dx42(0)
      uyy43r(i1,i2,i3,kd)=( -30.*u(i1,i2,i3,kd)+16.*(u(i1,i2+1,i3,kd)+
     & u(i1,i2-1,i3,kd))-(u(i1,i2+2,i3,kd)+u(i1,i2-2,i3,kd)) )*dx42(1)
      uzz43r(i1,i2,i3,kd)=( -30.*u(i1,i2,i3,kd)+16.*(u(i1,i2,i3+1,kd)+
     & u(i1,i2,i3-1,kd))-(u(i1,i2,i3+2,kd)+u(i1,i2,i3-2,kd)) )*dx42(2)
      uxy43r(i1,i2,i3,kd)=( (u(i1+2,i2+2,i3,kd)-u(i1-2,i2+2,i3,kd)- u(
     & i1+2,i2-2,i3,kd)+u(i1-2,i2-2,i3,kd)) +8.*(u(i1-1,i2+2,i3,kd)-u(
     & i1-1,i2-2,i3,kd)-u(i1+1,i2+2,i3,kd)+u(i1+1,i2-2,i3,kd) +u(i1+2,
     & i2-1,i3,kd)-u(i1-2,i2-1,i3,kd)-u(i1+2,i2+1,i3,kd)+u(i1-2,i2+1,
     & i3,kd))+64.*(u(i1+1,i2+1,i3,kd)-u(i1-1,i2+1,i3,kd)- u(i1+1,i2-
     & 1,i3,kd)+u(i1-1,i2-1,i3,kd)))*(dx41(0)*dx41(1))
      uxz43r(i1,i2,i3,kd)=( (u(i1+2,i2,i3+2,kd)-u(i1-2,i2,i3+2,kd)-u(
     & i1+2,i2,i3-2,kd)+u(i1-2,i2,i3-2,kd)) +8.*(u(i1-1,i2,i3+2,kd)-u(
     & i1-1,i2,i3-2,kd)-u(i1+1,i2,i3+2,kd)+u(i1+1,i2,i3-2,kd) +u(i1+2,
     & i2,i3-1,kd)-u(i1-2,i2,i3-1,kd)- u(i1+2,i2,i3+1,kd)+u(i1-2,i2,
     & i3+1,kd)) +64.*(u(i1+1,i2,i3+1,kd)-u(i1-1,i2,i3+1,kd)-u(i1+1,
     & i2,i3-1,kd)+u(i1-1,i2,i3-1,kd)) )*(dx41(0)*dx41(2))
      uyz43r(i1,i2,i3,kd)=( (u(i1,i2+2,i3+2,kd)-u(i1,i2-2,i3+2,kd)-u(
     & i1,i2+2,i3-2,kd)+u(i1,i2-2,i3-2,kd)) +8.*(u(i1,i2-1,i3+2,kd)-u(
     & i1,i2-1,i3-2,kd)-u(i1,i2+1,i3+2,kd)+u(i1,i2+1,i3-2,kd) +u(i1,
     & i2+2,i3-1,kd)-u(i1,i2-2,i3-1,kd)-u(i1,i2+2,i3+1,kd)+u(i1,i2-2,
     & i3+1,kd)) +64.*(u(i1,i2+1,i3+1,kd)-u(i1,i2-1,i3+1,kd)-u(i1,i2+
     & 1,i3-1,kd)+u(i1,i2-1,i3-1,kd)) )*(dx41(1)*dx41(2))
      ux41r(i1,i2,i3,kd)= ux43r(i1,i2,i3,kd)
      uy41r(i1,i2,i3,kd)= uy43r(i1,i2,i3,kd)
      uz41r(i1,i2,i3,kd)= uz43r(i1,i2,i3,kd)
      uxx41r(i1,i2,i3,kd)= uxx43r(i1,i2,i3,kd)
      uyy41r(i1,i2,i3,kd)= uyy43r(i1,i2,i3,kd)
      uzz41r(i1,i2,i3,kd)= uzz43r(i1,i2,i3,kd)
      uxy41r(i1,i2,i3,kd)= uxy43r(i1,i2,i3,kd)
      uxz41r(i1,i2,i3,kd)= uxz43r(i1,i2,i3,kd)
      uyz41r(i1,i2,i3,kd)= uyz43r(i1,i2,i3,kd)
      ulaplacian41r(i1,i2,i3,kd)=uxx43r(i1,i2,i3,kd)
      ux42r(i1,i2,i3,kd)= ux43r(i1,i2,i3,kd)
      uy42r(i1,i2,i3,kd)= uy43r(i1,i2,i3,kd)
      uz42r(i1,i2,i3,kd)= uz43r(i1,i2,i3,kd)
      uxx42r(i1,i2,i3,kd)= uxx43r(i1,i2,i3,kd)
      uyy42r(i1,i2,i3,kd)= uyy43r(i1,i2,i3,kd)
      uzz42r(i1,i2,i3,kd)= uzz43r(i1,i2,i3,kd)
      uxy42r(i1,i2,i3,kd)= uxy43r(i1,i2,i3,kd)
      uxz42r(i1,i2,i3,kd)= uxz43r(i1,i2,i3,kd)
      uyz42r(i1,i2,i3,kd)= uyz43r(i1,i2,i3,kd)
      ulaplacian42r(i1,i2,i3,kd)=uxx43r(i1,i2,i3,kd)+uyy43r(i1,i2,i3,
     & kd)
      ulaplacian43r(i1,i2,i3,kd)=uxx43r(i1,i2,i3,kd)+uyy43r(i1,i2,i3,
     & kd)+uzz43r(i1,i2,i3,kd)

      !     Here is the the generic boundary condition forcing array. It uses the bcOffset(side,axis) values as an
      !     an offset from the bcf0 array to access the bcf10, bcf01, bcf11, ... arrays
      bcf(side,axis,i1,i2,i3,m) = bcf0(bcOffset(side,axis) + (i1-dim(0,
     & 0,side,axis)+(dim(1,0,side,axis)-dim(0,0,side,axis)+1)* (i2-
     & dim(0,1,side,axis)+(dim(1,1,side,axis)-dim(0,1,side,axis)+1)* (
     & i3-dim(0,2,side,axis)+(dim(1,2,side,axis)-dim(0,2,side,axis)+1)
     & *(m)))))

      qx(i1,i2)=rsxy(i1,i2,nd3a,0,0)
      qy(i1,i2)=rsxy(i1,i2,nd3a,0,1)
      rx(i1,i2)=rsxy(i1,i2,nd3a,1,0)
      ry(i1,i2)=rsxy(i1,i2,nd3a,1,1)
      Jac(i1,i2)=1.d0/(qx(i1,i2)*ry(i1,i2)-rx(i1,i2)*qy(i1,i2))
      Jac3(i1,i2,i3)=(1.d0/(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)*rsxy(
     & i1,i2,i3,2,2)+rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,
     & i3,2,0)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,
     & 1)-rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,0,2)-
     & rsxy(i1,i2,i3,2,1)*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,0,0)-rsxy(
     & i1,i2,i3,2,2)*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,0,1)))

      ! (rho,mu,lambda) for materialFormat=piecewiseConstantMaterialProperties
      rhopc(i1,i2)    = matValpc( 0, matIndex(i1,i2))
      mupc(i1,i2)     = matValpc( 1, matIndex(i1,i2))
      lambdapc(i1,i2) = matValpc( 2, matIndex(i1,i2))
      lam2mupc(i1,i2) = (matValpc( 2, matIndex(i1,i2))+2.0*matValpc( 1,
     &  matIndex(i1,i2)))

      ! (rho,mu,lambda) for materialFormat=variableMaterialProperties
      rhov(i1,i2)    = matVal(i1,i2,0)
      muv(i1,i2)     = matVal(i1,i2,1)
      lambdav(i1,i2) = matVal(i1,i2,2)
      lam2muv(i1,i2) = (matVal(i1,i2,2)+2.0*matVal(i1,i2,1))

      ! *wdh* These next are not correct for rho different from 1
!!$      lamM(i1,i2)=(c1-c2)
!!$      muM(i1,i2)=c2
!!$      lam2muM(i1,i2)=(lamM(i1,i2)+2.0*muM(i1,12))
!!$      lam3M(i1,i2,i3)=(c1-c2)
!!$      mu3M(i1,i2,i3)=c2
!!$      lam2mu3M(i1,i2,i3)=(lam3M(i1,i2,i3)+2.0*mu3M(i1,12,i3))
!!$      lamM(i1,i2)=(c1-c2)

      lamM(i1,i2)=lambda
      muM(i1,i2)=mu
      lam2muM(i1,i2)=lambdaPlus2mu
      lam3M(i1,i2,i3)=lambda
      mu3M(i1,i2,i3)=mu
      lam2mu3M(i1,i2,i3)=lambdaPlus2mu
      !...............end statement functions

      ierr=0

      nd                   =ipar(0)
      grid                 =ipar(1)
      uc                   =ipar(2)
      vc                   =ipar(3)
      wc                   =ipar(4)
      gridType             =ipar(5)
      orderOfAccuracy      =ipar(6)
      orderOfExtrapolation =ipar(7)
      twilightZone         =ipar(8)
      useWhereMask         =ipar(9)
      debug                =ipar(10)

      materialFormat       =ipar(15)

      dx(0)                =rpar(0)
      dx(1)                =rpar(1)
      dx(2)                =rpar(2)
      dr(0)                =rpar(3)
      dr(1)                =rpar(4)
      dr(2)                =rpar(5)
      t                    =rpar(6)
      ep                   =rpar(7) ! pointer for exact solution
      dt                   =rpar(8)
      rho                  =rpar(9)
      mu                   =rpar(10)
      lambda               =rpar(11)
      c1                   =rpar(12)
      c2                   =rpar(13)

      job=0                ! *wdh* 090101

      lambdaPlus2mu=lambda+2.*mu

      ! *wdh* This needs to be fixed for intefaces: -- see bcOptSm.bf 
      assignTwilightZone=twilightZone

      !     write(*,'(" bcOptSmCons t=",e10.2)') t

      if( debug.gt.3 )then
         write(*,'(" bcOptSm: rho,mu,lambda=",3e12.2," gridType=",i2)')
     &  rho,mu,lambda,gridType
         !     '
      end if

      if( debug.gt.7 )then
         write(*,'(" bcOptSm: **START** grid=",i4," uc,vc,wc=",3i2)') 
     & grid,uc,vc,wc
         !     '
      end if
      if( debug.gt.7 )then
         write(*,*) 'u=',((((u(i1,i2,i3,m),m=0,2),i1=n1a,n1b),i2=n2a,
     & n2b),i3=n3a,n3b)
      end if


      ! --- Output rho, mu and lambda at t=0 for testing ---
      if( materialFormat.ne.0 .and. t.le.0 .and. (nd1b-nd1a)*(nd2b-
     & nd2a).lt. 1000 )then

       write(*,'("bcOptSmCons: rho:")')
       do i2=nd2b,nd2a,-1
         if( materialFormat.eq.piecewiseConstantMaterialProperties )
     & then
          write(*,'(100(f5.1))') (rhopc(i1,i2),i1=nd1a,nd1b)
         else
          write(*,'(100(f5.1))') (rhov(i1,i2),i1=nd1a,nd1b)
         end if
       end do
       write(*,'("bcOptSmCons: mu:")')
       do i2=nd2b,nd2a,-1
         if( materialFormat.eq.piecewiseConstantMaterialProperties )
     & then
          write(*,'(100(f5.1))') (mupc(i1,i2),i1=nd1a,nd1b)
         else
          write(*,'(100(f5.1))') (muv(i1,i2),i1=nd1a,nd1b)
         end if
       end do
       write(*,'("bcOptSmCons: lambda:")')
       do i2=nd2b,nd2a,-1
         if( materialFormat.eq.piecewiseConstantMaterialProperties )
     & then
          write(*,'(100(f5.1))') (lambdapc(i1,i2),i1=nd1a,nd1b)
         else
          write(*,'(100(f5.1))') (lambdav(i1,i2),i1=nd1a,nd1b)
         end if
       end do

      end if

      if( materialFormat.ne.constantMaterialProperties .and. (
     & boundaryCondition(0,0).eq.tractionBC .or. boundaryCondition(1,
     & 0).eq.tractionBC .or. boundaryCondition(0,1).eq.tractionBC 
     & .or. boundaryCondition(1,1).eq.tractionBC .or. 
     & boundaryCondition(0,2).eq.tractionBC .or. boundaryCondition(1,
     & 2).eq.tractionBC )     )then
        write(*,'(" ***bcOptSmCons:ERROR: Finish me for variable 
     & material and traction BCs")')
        write(*,'(" ***bcOptSmCons: t=",e10.2)') t
        stop 5529
      end if


      epsx=1.e-20          ! fix this
      numGhost=orderOfAccuracy/2
      do i=0,2
         dri(i)=1.0d0/dr(i)
         dxi(i)=1.0d0/dx(i)
      enddo

      if( nd.eq.2 )then
        ! ***********************************
        ! **************** 2D ***************
        ! ***********************************

        ! -----------------------------------
        ! -----------2nd Order---------------
        ! -----------------------------------
        ! *wdh* 091205 -- add slip wall from SOS-NC
        if( orderOfAccuracy.eq.2 .and. gridType.eq.rectangular )then

                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
           if( boundaryCondition(side,axis).eq.displacementBC )then
           else if( boundaryCondition(side,axis).eq.tractionBC )then
           else if( boundaryCondition(side,axis).eq.slipWall )then

             ! set n.u = given on the boundary 
             an1=0.  ! (an1,an2) = outward normal
             an2=0.
             if( axis.eq.0 )then
               an1=2*side-1
             else
               an2=2*side-1
             end if

             if( addBoundaryForcing(side,axis).eq.0 )then
               ! no forcing 
                i3=n3a
                do i2=n2a,n2b
                 do i1=n1a,n1b
                 u1 = u(i1,i2,i3,uc)
                 v1 = u(i1,i2,i3,vc)
                 nDotU = an1*u1 + an2*v1
                 u(i1,i2,i3,uc)=u1 - nDotU*an1
                 u(i1,i2,i3,vc)=v1 - nDotU*an2
                 end do
                end do

             else if( assignTwilightZone.eq.0 )then
              ! include forcing terms 
              ! n.u = n.g 
                i3=n3a
                do i2=n2a,n2b
                 do i1=n1a,n1b
                 u1 = u(i1,i2,i3,uc)
                 v1 = u(i1,i2,i3,vc)
                 nDotU = an1*(u1-bcf(side,axis,i1,i2,i3,uc)) + an2*(v1-
     & bcf(side,axis,i1,i2,i3,vc))
                 u(i1,i2,i3,uc)=u1 - nDotU*an1
                 u(i1,i2,i3,vc)=v1 - nDotU*an2
                 end do
                end do

             else
               ! Twilight-zone: 
               !   n.u = n.ue
                i3=n3a
                do i2=n2a,n2b
                 do i1=n1a,n1b
                       call ogf2d(ep,xy(i1,i2,i3,0),xy(i1,i2,i3,1),t,
     & u0,v0)
                 u1 = u(i1,i2,i3,uc)
                 v1 = u(i1,i2,i3,vc)
                 nDotU = an1*(u1-u0) + an2*(v1-v0)
                 u(i1,i2,i3,uc)=u1 - nDotU*an1
                 u(i1,i2,i3,vc)=v1 - nDotU*an2
                 end do
                end do
             end if

             ! extrap values to the ghost line 
                   i3=n3a
                   do i2=nn2a,nn2b
                    do i1=nn1a,nn1b
               u(i1-is1,i2-is2,i3,uc)=(3.*u(i1,i2,i3,uc)-3.*u(i1+is1,
     & i2+is2,i3+is3,uc)+u(i1+2*is1,i2+2*is2,i3+2*is3,uc))
               u(i1-is1,i2-is2,i3,vc)=(3.*u(i1,i2,i3,vc)-3.*u(i1+is1,
     & i2+is2,i3+is3,vc)+u(i1+2*is1,i2+2*is2,i3+2*is3,vc))
                end do
               end do

            else if( boundaryCondition(side,axis)
     & .eq.dirichletBoundaryCondition.or.boundaryCondition(side,axis)
     & .eq.symmetry  )then
              ! do nothing here
            else if( boundaryCondition(side,axis).gt.0 )then

             write(*,'("bcOptSmCons: un-implemented bc=",i2)') 
     & boundaryCondition(side,axis)
             stop 9393

            end if

                      end do ! end side
                     end do  ! end axis

        else
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if( boundaryCondition(side,axis).eq.slipWall )then

              ! finish me 
              write(*,'("bcOptSmCons: slipWall : finish me ")')
              stop 8282
            end if
                      end do ! end side
                     end do  ! end axis
        end if


        !     DEAA: changed into energy conserving bc
        !     

        !     ****** now apply BC's that assign the ghost values *********

        if( orderOfAccuracy.eq.2 .and. gridType.eq.rectangular )then
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if( boundaryCondition(side,axis).eq.tractionBC )then
              if( axis.eq.0 )then
                !     (2mu+lam) u.x + lam*v.y =fu
                !     mu(v.x +u.y) = fv
                if( twilightZone.eq.0 )then
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    if (addBoundaryForcing(side,axis).eq.0) then
                      !     No forcing
                      Forceu=0
                      Forcev=0
                    else
                      Forceu=(2.*side-1.)*bcf(side,axis,i1,i2,i3,uc)
                      Forcev=(2.*side-1.)*bcf(side,axis,i1,i2,i3,vc)
                    end if
                    vy=uy22r(i1,i2,i3,vc)
                    uy=uy22r(i1,i2,i3,uc)
                               u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is1*dx(0)*(-is1*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1./dx(0))*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-lamM(i1,i2)*
     & vy+Forceu)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                               u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is1*dx(0)*(-is1*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(0)
     & )*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-muM(i1,i2)*uy+Forcev)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                   end if
                   end do
                   end do
                  ! Correct the corners if adjacent sides have stress free bc
                  ! We use D+ or D- for the tangential derivative to get energy est.
                  do idxs=0,1
                    if( boundaryCondition(idxs,1).eq.tractionBC )then
                      i2=n2a*(1-idxs)+n2b*idxs
                      i1=n1a
                                 uy=(1.0*(1-2*idxs)/dx(1))*(u(i1+(1-2*
     & idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(i1,i2,i3,uc))
                                 vy=(1.0*(1-2*idxs)/dx(1))*(u(i1+(1-2*
     & idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,i3,vc))
                                 u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is1*dx(0)*(-is1*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1./dx(0))*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-lamM(i1,i2)*
     & vy+Forceu)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                                 u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is1*dx(0)*(-is1*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(0)
     & )*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-muM(i1,i2)*uy+Forcev)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                    end if
                  end do

                else
                  !     Twilight
                  !     (2mu+lam) u.x + lam*v.y = (2mu+lam) ue.x + lam*ve.y
                  !     mu(v.x +u.y) = mu(ve.x +ue.y)
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                          call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                          call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                    Forceu=(lam2muM(i1,i2)*ux0+lamM(i1,i2)*vy0)
                    Forcev=(muM(i1,i2)*uy0+muM(i1,i2)*vx0)
                    vy=uy22r(i1,i2,i3,vc)
                    uy=uy22r(i1,i2,i3,uc)
                               u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is1*dx(0)*(-is1*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1./dx(0))*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-lamM(i1,i2)*
     & vy+Forceu)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                               u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is1*dx(0)*(-is1*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(0)
     & )*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-muM(i1,i2)*uy+Forcev)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                   end if
                   end do
                   end do
                  ! Correct the corners if adjacent sides have stress free bc
                  ! We use D+ or D- for the tangential derivative to get energy est.
                  do idxs=0,1
                    if( boundaryCondition(idxs,1).eq.tractionBC )then
                      i2=n2a*(1-idxs)+n2b*idxs
                      i1=n1a
                            call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),
     & xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                            call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),
     & xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                      Forceu=(lam2muM(i1,i2)*ux0+lamM(i1,i2)*vy0)
                      Forcev=(muM(i1,i2)*uy0+muM(i1,i2)*vx0)
                                 uy=(1.0*(1-2*idxs)/dx(1))*(u(i1+(1-2*
     & idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(i1,i2,i3,uc))
                                 vy=(1.0*(1-2*idxs)/dx(1))*(u(i1+(1-2*
     & idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,i3,vc))
                                 u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is1*dx(0)*(-is1*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1./dx(0))*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-lamM(i1,i2)*
     & vy+Forceu)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                                 u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is1*dx(0)*(-is1*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(0)
     & )*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-muM(i1,i2)*uy+Forcev)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                      !  OGDERIV2D(0,0,0,0,i1-is1,i2-is2,i3,t,ux0,vx0)
                      !  u(i1-is1,i2-is2,i3,uc)=ux0 
                      !  u(i1-is1,i2-is2,i3,vc)=vx0 
                    end if
                  end do
                end if           ! end if forcing

              else ! axis==1
                !     (2mu+lam) v.x + lam*u.y =fv
                !     mu(u.x +v.y) = fu
                if( twilightZone.eq.0 )then
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    if (addBoundaryForcing(side,axis).eq.0) then
                      !     No forcing
                      Forceu=0
                      Forcev=0
                    else
                      Forceu=(2.*side-1.)*bcf(side,axis,i1,i2,i3,uc)
                      Forcev=(2.*side-1.)*bcf(side,axis,i1,i2,i3,vc)
                    end if
                    ux=ux22r(i1,i2,i3,uc)
                    vx=ux22r(i1,i2,i3,vc)
                               u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is2*dx(1)*(-is2*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1.0/dx(1))*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-lamM(i1,i2)*
     & ux+Forcev)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                               u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is2*dx(1)*(-is2*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(1)
     & )*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-muM(i1,i2)*vx+Forceu)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                   end if
                   end do
                   end do
                  ! Correct the corners if adjacent sides have stress free bc
                  ! We use D+ or D- for the tangential derivative to get energy est.
                  do idxs=0,1
                    if( boundaryCondition(idxs,0).eq.tractionBC )then
                      i2=n2a
                      i1=n1a*(1-idxs)+n1b*idxs
                                 ux=(1.0*(1-2*idxs)/dx(0))*(u(i1+(1-2*
     & idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(i1,i2,i3,uc))
                                 vx=(1.0*(1-2*idxs)/dx(0))*(u(i1+(1-2*
     & idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,i3,vc))
                                 u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is2*dx(1)*(-is2*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1.0/dx(1))*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-lamM(i1,i2)*
     & ux+Forcev)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                                 u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is2*dx(1)*(-is2*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(1)
     & )*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-muM(i1,i2)*vx+Forceu)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                    end if
                  end do
                else
                  !     Twilight
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                          call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                          call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                    Forcev=lam2muM(i1,i2)*vy0 +lamM(i1,i2)*ux0
                    Forceu=muM(i1,i2)*vx0 +muM(i1,i2)*uy0
                    ux=ux22r(i1,i2,i3,uc)
                    vx=ux22r(i1,i2,i3,vc)
                               u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is2*dx(1)*(-is2*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1.0/dx(1))*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-lamM(i1,i2)*
     & ux+Forcev)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                               u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is2*dx(1)*(-is2*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(1)
     & )*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-muM(i1,i2)*vx+Forceu)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                   end if
                   end do
                   end do
                  ! Correct the corners if adjacent sides have stress free bc
                  ! We use D+ or D- for the tangential derivative to get energy est.
                  do idxs=0,1
                    if( boundaryCondition(idxs,0).eq.tractionBC )then
                      i2=n2a
                      i1=n1a*(1-idxs)+n1b*idxs
                            call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),
     & xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                            call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),
     & xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                      Forcev=lam2muM(i1,i2)*vy0 +lamM(i1,i2)*ux0
                      Forceu=muM(i1,i2)*vx0 +muM(i1,i2)*uy0
                                 ux=(1.0*(1-2*idxs)/dx(0))*(u(i1+(1-2*
     & idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(i1,i2,i3,uc))
                                 vx=(1.0*(1-2*idxs)/dx(0))*(u(i1+(1-2*
     & idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,i3,vc))
                                 u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-
     & is2*dx(1)*(-is2*0.25*(lam2muM(i1,i2)+lam2muM(i1+is1,i2+is2))*(
     & 1.0/dx(1))*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,vc))-lamM(i1,i2)*
     & ux+Forcev)/(0.25*(lam2muM(i1,i2)+lam2muM(i1-is1,i2-is2)))
                                 u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-
     & is2*dx(1)*(-is2*0.25*(muM(i1,i2)+muM(i1+is1,i2+is2))*(1.0/dx(1)
     & )*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))-muM(i1,i2)*vx+Forceu)
     & /(0.25*(muM(i1,i2)+muM(i1-is1,i2-is2)))
                      !  OGDERIV2D(0,0,0,0,i1-is1,i2-is2,i3,t,ux0,vx0)
                      !  u(i1-is1,i2-is2,i3,uc)=ux0 
                      !  u(i1-is1,i2-is2,i3,vc)=vx0 
                    end if
                  end do
                end if           ! end if forcing
              end if            ! end if axis

            ! *wdh* 091205 -- add slip wall from SOS-NC 
            else if( boundaryCondition(side,axis).eq.slipWall )then

              alpha=lambda/(lambda+2.*mu)
              beta =1./(lambda+2.*mu)
              if( axis.eq.0 )then
                ! v.x = -u.y       
                if( addBoundaryForcing(side,axis).eq.0 )then
                  ! no forcing 
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    u(i1-is1,i2-is2,i3,vc)=u(i1+is1,i2+is2,i3,vc)+is1*
     & dx(0)*2.*      uy22r(i1,i2,i3,uc)
                   end if
                   end do
                   end do

                else if( assignTwilightZone.eq.0 )then
                  ! include forcing terms 
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    u(i1-is1,i2-is2,i3,vc)=u(i1+is1,i2+is2,i3,vc)+dx(0)
     & *2.*(is1*uy22r(i1,i2,i3,uc)    + (1./mu)*bcf(side,axis,i1,i2,
     & i3,vc) )
                   end if
                   end do
                   end do

                else
                  ! Twilight-zone: 
                  ! u.x = -alpha*v.y + ue.x -alpha*ve.y 
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                          call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                          call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                    u(i1-is1,i2-is2,i3,vc)=u(i1+is1,i2+is2,i3,vc)-is1*
     & dx(0)*2.*(-uy22r(i1,i2,i3,uc) + vx0 + uy0 )
                    !     write(*,'("i1,i2=",2i3," ux0,vx0,uy0,vy0=",4e10.2)') i1,i2, ux0,vx0,uy0,vy0                
                   end if
                   end do
                   end do
                end if

              else if( axis.eq.1 )then
                ! u.y = - v.x
                if( addBoundaryForcing(side,axis).eq.0 )then
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    u(i1-is1,i2-is2,i3,uc)=u(i1+is1,i2+is2,i3,uc)+is2*
     & dx(1)*2.*      ux22r(i1,i2,i3,vc)
                   end if
                   end do
                   end do

                else if( assignTwilightZone.eq.0 )then
                  ! include forcing terms
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                    u(i1-is1,i2-is2,i3,uc)=u(i1+is1,i2+is2,i3,uc)+dx(1)
     & *2.*(is2*ux22r(i1,i2,i3,vc)    + (1./mu)*bcf(side,axis,i1,i2,
     & i3,uc) )
                   end if
                   end do
                   end do

                else
                  ! Twilight-zone: 
                   i3=n3a
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                          call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                          call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                    u(i1-is1,i2-is2,i3,uc)=u(i1+is1,i2+is2,i3,uc)-is2*
     & dx(1)*2.*(      -ux22r(i1,i2,i3,vc)+uy0+vx0)
                   end if
                   end do
                   end do
                end if
              end if

            end if             ! end if bc
                      end do ! end side
                     end do  ! end axis


        else if( orderOfAccuracy.eq.2 .and. gridType.eq.curvilinear )
     & then
          !     *********************************************
          !     ************* 2d Curvilinear ****************
          !     *********************************************
          !     DEAA: changed into energy conserving bc 071118
          !     ** now apply BC's that assign the ghost values *********
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if( boundaryCondition(side,axis).eq.tractionBC )then
              if( twilightZone.eq.0 )then
                           if (axis.eq.0) then
                             i3=n3a
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                            if (addBoundaryForcing(side,axis).eq.0) 
     & then
                             !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                             !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                        a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                        a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                        a2(1,0)=a2(0,1)
                             !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                        a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                        f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*qy(
     & i1,i2)*rx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc)))))
                                        f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*
     & (u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((
     & Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*qy(i1,
     & i2)*ry(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+
     & (1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc)))))
                             !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                        call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                        call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                            else
                             !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                             !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                        a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                        a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                        a2(1,0)=a2(0,1)
                             !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                        a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                        f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*qy(
     & i1,i2)*rx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))-is*Jac(i1,i2)*(
     & sqrt(qx(i1,i2)*qx(i1,i2)+qy(i1,i2)*qy(i1,i2)))*(bcf(side,axis,
     & i1,i2,i3,uc)))
                                        f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*
     & (u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((
     & Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*qy(i1,
     & i2)*ry(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+
     & (1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))-is*Jac(i1,i2)*(
     & sqrt(qx(i1,i2)*qx(i1,i2)+qy(i1,i2)*qy(i1,i2)))*(bcf(side,axis,
     & i1,i2,i3,vc)))
                             !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                        call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                        call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                            end if
                            u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(is1+
     & is2)*f(0)*dr(axis)
                            u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(is1+
     & is2)*f(1)*dr(axis)
                             end if
                             end do
                             end do
                           else
                             i3=n3a
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                            if (addBoundaryForcing(side,axis).eq.0) 
     & then
                             !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                             !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                        a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                        a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                        a2(1,0)=a2(0,1)
                             !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                        a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                        f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*ry(
     & i1,i2)*qx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc)))))
                                        f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*
     & (u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((
     & Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*ry(i1,
     & i2)*qy(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+
     & (1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc)))))
                             !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                        call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                        call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                            else
                             !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                             !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                        a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                        a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                        a2(1,0)=a2(0,1)
                             !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                        a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                        f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*ry(
     & i1,i2)*qx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))-is*Jac(i1,i2)*(
     & sqrt(rx(i1,i2)*rx(i1,i2)+ry(i1,i2)*ry(i1,i2)))*(bcf(side,axis,
     & i1,i2,i3,uc)))
                                        f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*
     & (u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((
     & Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*ry(i1,
     & i2)*qy(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+
     & (1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))-is*Jac(i1,i2)*(
     & sqrt(rx(i1,i2)*rx(i1,i2)+ry(i1,i2)*ry(i1,i2)))*(bcf(side,axis,
     & i1,i2,i3,vc)))
                             !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                        call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                        call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                            end if
                            u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(is1+
     & is2)*f(0)*dr(axis)
                            u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(is1+
     & is2)*f(1)*dr(axis)
                             end if
                             end do
                             end do
                           end if
                           if (axis.eq.0) then
                !     ! Correct the corners if adjacent sides have stress free bc
                !     ! We use D+ or D- for the tangential derivative to get energy est.
                            do idxs=0,1
                             if( boundaryCondition(idxs,1)
     & .eq.tractionBC )then
                              i2=n2a*(1-idxs)+n2b*idxs
                              i1=n1a
                              if (addBoundaryForcing(side,axis).eq.0) 
     & then
                               !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                               !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                          a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                          a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                          a2(1,0)=a2(0,1)
                               !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                          a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                          f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,
     & i3,vc))))))
                                          f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*qy(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,i3,
     & vc))))))
                               !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                          call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                          call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                              else
                               !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                               !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                          a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                          a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                          a2(1,0)=a2(0,1)
                               !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                          a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                          f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,
     & i3,vc)))))-is*Jac(i1,i2)*(sqrt(qx(i1,i2)*qx(i1,i2)+qy(i1,i2)*
     & qy(i1,i2)))*(bcf(side,axis,i1,i2,i3,uc)))
                                          f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*qy(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,i3,
     & vc)))))-is*Jac(i1,i2)*(sqrt(qx(i1,i2)*qx(i1,i2)+qy(i1,i2)*qy(
     & i1,i2)))*(bcf(side,axis,i1,i2,i3,vc)))
                               !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                          call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                          call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                              end if
                              u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(
     & is1+is2)*f(0)*dr(axis)
                              u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(
     & is1+is2)*f(1)*dr(axis)
                             end if
                            end do
                           else                 ! the other axis
                !     ! Correct the corners if adjacent sides have stress free bc
                !     ! We use D+ or D- for the tangential derivative to get energy est.
                            do idxs=0,1
                             if( boundaryCondition(idxs,0)
     & .eq.tractionBC )then
                              i2=n2a
                              i1=n1a*(1-idxs)+n1b*idxs
                              if (addBoundaryForcing(side,axis).eq.0) 
     & then
                               !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                               !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                          a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                          a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                          a2(1,0)=a2(0,1)
                               !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                          a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                          f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,
     & i3,vc))))))
                                          f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*ry(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,i3,
     & vc))))))
                               !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                          call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                          call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                               !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                               !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                          a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                          a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                          a2(1,0)=a2(0,1)
                               !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                          a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                          f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,
     & i3,vc)))))-is*Jac(i1,i2)*(sqrt(rx(i1,i2)*rx(i1,i2)+ry(i1,i2)*
     & ry(i1,i2)))*(bcf(side,axis,i1,i2,i3,uc)))
                                          f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*ry(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,i3,
     & vc)))))-is*Jac(i1,i2)*(sqrt(rx(i1,i2)*rx(i1,i2)+ry(i1,i2)*ry(
     & i1,i2)))*(bcf(side,axis,i1,i2,i3,vc)))
                               !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                          call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                          call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                              end if
                              u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(
     & is1+is2)*f(0)*dr(axis)
                              u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(
     & is1+is2)*f(1)*dr(axis)
                             end if
                            end do
                           end if
              else
                           if (axis.eq.0) then
                             i3=n3a
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                                  call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                                  call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                            !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                            !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                       a2(0,0)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                       a2(0,1)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)
     & +Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-is1,
     & i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+
     & Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                       a2(1,0)=a2(0,1)
                            !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                       a2(1,1)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                       f(0) = (-(0.5*((0.5*(Jac(i1+is1,
     & i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*(
     & is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*qy(
     & i1,i2)*rx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))+Jac(i1,i2)*(qx(
     & i1,i2)*(lam2muM(i1,i2)*ux0+lamM(i1,i2)*vy0)+qy(i1,i2)*(muM(i1,
     & i2)*(vx0+uy0))))
                                       f(1) = (-(0.5*((0.5*(Jac(i1+is1,
     & i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+is2)+
     & Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+is1,
     & i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+is2)
     & +Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+is2))
     & /dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*lam2muM(
     & i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+
     & (0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*
     & muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))
     & *(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,
     & vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(Jac(i1,i2)
     & *qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+
     & axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((Jac(
     & i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*qy(i1,i2)*
     & ry(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(1-
     & axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))+Jac(i1,i2)*(qx(i1,
     & i2)*(muM(i1,i2)*(vx0+uy0))+qy(i1,i2)*(lam2muM(i1,i2)*vy0+lamM(
     & i1,i2)*ux0)))
                            !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                       call dgeco( a2(0,0), 2, 2, ipvt(
     & 0),rcond,work(0))
                                       call dgesl( a2(0,0), 2, 2, ipvt(
     & 0), f(0), job)
                            u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(is1+
     & is2)*f(0)*dr(axis)
                            u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(is1+
     & is2)*f(1)*dr(axis)
                             end if
                             end do
                             end do
                           else
                             i3=n3a
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                                  call ogDeriv2(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                                  call ogDeriv2(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                            !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                            !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                       a2(0,0)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                       a2(0,1)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)
     & +Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-is1,
     & i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+
     & Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                       a2(1,0)=a2(0,1)
                            !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                       a2(1,1)=((0.5*((0.5*(Jac(i1-is1,
     & i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                       f(0) = (-(0.5*((0.5*(Jac(i1+is1,
     & i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(Jac(
     & i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*(
     & is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis)
     & )*(u(i1+axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+
     & ((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(Jac(i1,i2)*ry(
     & i1,i2)*qx(i1,i2)*muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(
     & 1-axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))+Jac(i1,i2)*(rx(
     & i1,i2)*(lam2muM(i1,i2)*ux0+lamM(i1,i2)*vy0)+ry(i1,i2)*(muM(i1,
     & i2)*(vx0+uy0))))
                                       f(1) = (-(0.5*((0.5*(Jac(i1+is1,
     & i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+is2)+
     & Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+is1,
     & i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+is2)
     & +Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+is2))
     & /dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*lam2muM(
     & i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+
     & (0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*
     & muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))
     & *(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(i1,i2,i3,
     & vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(Jac(i1,i2)
     & *ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+
     & axis,i2+(1-axis),i3,uc)-u(i1-axis,i2-(1-axis),i3,uc)))+((Jac(
     & i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,i2)*ry(i1,i2)*
     & qy(i1,i2)*lam2muM(i1,i2)))*((0.5/dr(1-axis))*(u(i1+axis,i2+(1-
     & axis),i3,vc)-u(i1-axis,i2-(1-axis),i3,vc))))+Jac(i1,i2)*(rx(i1,
     & i2)*(muM(i1,i2)*(vx0+uy0))+ry(i1,i2)*(lam2muM(i1,i2)*vy0+lamM(
     & i1,i2)*ux0)))
                            !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                       call dgeco( a2(0,0), 2, 2, ipvt(
     & 0),rcond,work(0))
                                       call dgesl( a2(0,0), 2, 2, ipvt(
     & 0), f(0), job)
                            u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(is1+
     & is2)*f(0)*dr(axis)
                            u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(is1+
     & is2)*f(1)*dr(axis)
                             end if
                             end do
                             end do
                           end if
                           if (axis.eq.0) then
                !     ! Correct the corners if adjacent sides have stress free bc
                !     ! We use D+ or D- for the tangential derivative to get energy est.
                            do idxs=0,1
                             if( boundaryCondition(idxs,1)
     & .eq.tractionBC )then
                              i2=n2a*(1-idxs)+n2b*idxs
                              i1=n1a
                                    call ogDeriv2(ep, 0,1,0,0, xy(i1,
     & i2,i3,0),xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                                    call ogDeriv2(ep, 0,0,1,0, xy(i1,
     & i2,i3,0),xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                              !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                              !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                         a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))))
                                         a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                         a2(1,0)=a2(0,1)
                              !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))))
                                         a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*qy(i1-is1,i2-is2)*qy(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*qx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(i1,i2))))))
                                         f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*qy(i1,i2)*ry(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,
     & i3,vc)))))+Jac(i1,i2)*(qx(i1,i2)*(lam2muM(i1,i2)*ux0+lamM(i1,
     & i2)*vy0)+qy(i1,i2)*(muM(i1,i2)*(vx0+uy0))))
                                         f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*qx(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qx(i1,i2)*qy(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*qy(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*qy(i1,i2)*qx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*qy(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*qy(i1,i2)*qy(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*qx(i1+is1,i2+is2)*qx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*qx(i1,i2)*qx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*qx(i1,i2)*ry(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*qy(i1,i2)*rx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*qx(i1,i2)*rx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*qy(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 1))*(u(i1+(1-2*idxs)*(1-1),i2+(1-2*idxs)*1,i3,vc)-u(i1,i2,i3,
     & vc)))))+Jac(i1,i2)*(qx(i1,i2)*(muM(i1,i2)*(vx0+uy0))+qy(i1,i2)*
     & (lam2muM(i1,i2)*vy0+lamM(i1,i2)*ux0)))
                              !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                         call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                         call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                              u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(
     & is1+is2)*f(0)*dr(axis)
                              u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(
     & is1+is2)*f(1)*dr(axis)
                             end if
                            end do
                           else                 ! the other axis
                !     ! Correct the corners if adjacent sides have stress free bc
                !     ! We use D+ or D- for the tangential derivative to get energy est.
                            do idxs=0,1
                             if( boundaryCondition(idxs,0)
     & .eq.tractionBC )then
                              i2=n2a
                              i1=n1a*(1-idxs)+n1b*idxs
                                    call ogDeriv2(ep, 0,1,0,0, xy(i1,
     & i2,i3,0),xy(i1,i2,i3,1),0.,t, uc,ux0, vc,vx0)
                                    call ogDeriv2(ep, 0,0,1,0, xy(i1,
     & i2,i3,0),xy(i1,i2,i3,1),0.,t, uc,uy0, vc,vy0)
                              !     [ a2(0,0) a2(0,1) ][ DNu(gp) ] =  FU
                              !     [ a2(1,0) a2(1,1) ][ DNv(gp) ] =  FV
                                         a2(0,0)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))))
                                         a2(0,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lamM(i1-is1,i2-
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(i1,i2)))+(0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-is1,i2-
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                         a2(1,0)=a2(0,1)
                              !     a2(1,0)=((0.5*((0.5*(Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*muM(i1-is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*lamM(i1-is1,i2-is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))))
                                         a2(1,1)=((0.5*((0.5*(Jac(i1-
     & is1,i2-is2)*ry(i1-is1,i2-is2)*ry(i1-is1,i2-is2)*lam2muM(i1-is1,
     & i2-is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*rx(i1-is1,i2-is2)*muM(i1-
     & is1,i2-is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(i1,i2))))))
                                         f(0) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lam2muM(i1+is1,
     & i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*lam2muM(i1,i2)))+(0.5*(
     & Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+
     & is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*muM(i1,i2))))*(((1.*
     & (is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+
     & 0.5*((0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+
     & is2)*lamM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*lamM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*lam2muM(i1,i2)
     & )+(Jac(i1,i2)*ry(i1,i2)*qy(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*
     & idxs)/dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(
     & i1,i2,i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*lamM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*muM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,
     & i3,vc)))))+Jac(i1,i2)*(rx(i1,i2)*(lam2muM(i1,i2)*ux0+lamM(i1,
     & i2)*vy0)+ry(i1,i2)*(muM(i1,i2)*(vx0+uy0))))
                                         f(1) = (-(0.5*((0.5*(Jac(i1+
     & is1,i2+is2)*rx(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*muM(i1+is1,i2+
     & is2)+Jac(i1,i2)*rx(i1,i2)*ry(i1,i2)*muM(i1,i2)))+(0.5*(Jac(i1+
     & is1,i2+is2)*ry(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*lamM(i1+is1,i2+
     & is2)+Jac(i1,i2)*ry(i1,i2)*rx(i1,i2)*lamM(i1,i2))))*(((1.*(is1+
     & is2))/dr(axis)*(u(i1+is1,i2+is2,i3,uc)-u(i1,i2,i3,uc))))+0.5*((
     & 0.5*(Jac(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*ry(i1+is1,i2+is2)*
     & lam2muM(i1+is1,i2+is2)+Jac(i1,i2)*ry(i1,i2)*ry(i1,i2)*lam2muM(
     & i1,i2)))+(0.5*(Jac(i1+is1,i2+is2)*rx(i1+is1,i2+is2)*rx(i1+is1,
     & i2+is2)*muM(i1+is1,i2+is2)+Jac(i1,i2)*rx(i1,i2)*rx(i1,i2)*muM(
     & i1,i2))))*(((1.*(is1+is2))/dr(axis)*(u(i1+is1,i2+is2,i3,vc)-u(
     & i1,i2,i3,vc))))+((Jac(i1,i2)*rx(i1,i2)*qy(i1,i2)*muM(i1,i2))+(
     & Jac(i1,i2)*ry(i1,i2)*qx(i1,i2)*lamM(i1,i2)))*(((1.0*(1-2*idxs)
     & /dr(0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,uc)-u(i1,i2,
     & i3,uc))))+((Jac(i1,i2)*rx(i1,i2)*qx(i1,i2)*muM(i1,i2))+(Jac(i1,
     & i2)*ry(i1,i2)*qy(i1,i2)*lam2muM(i1,i2)))*(((1.0*(1-2*idxs)/dr(
     & 0))*(u(i1+(1-2*idxs)*(1-0),i2+(1-2*idxs)*0,i3,vc)-u(i1,i2,i3,
     & vc)))))+Jac(i1,i2)*(rx(i1,i2)*(muM(i1,i2)*(vx0+uy0))+ry(i1,i2)*
     & (lam2muM(i1,i2)*vy0+lamM(i1,i2)*ux0)))
                              !     write (*,*) "a(0,0), a(0,1), a(1,0), a(1,1), f(0), f(1) " ,a2(0,0), a2(0,1), a2(1,0), a2(1,1), f(0), f(1)
                                         call dgeco( a2(0,0), 2, 2, 
     & ipvt(0),rcond,work(0))
                                         call dgesl( a2(0,0), 2, 2, 
     & ipvt(0), f(0), job)
                              u(i1-is1,i2-is2,i3,uc)=u(i1,i2,i3,uc)-(
     & is1+is2)*f(0)*dr(axis)
                              u(i1-is1,i2-is2,i3,vc)=u(i1,i2,i3,vc)-(
     & is1+is2)*f(1)*dr(axis)
                             end if
                            end do
                           end if
              end if
            end if
                      end do ! end side
                     end do  ! end axis
        else
          !     un-known nd and orderOfAccuracy
          stop 6663
        end if

      else if( nd.eq.3 )then
        !     *************************
        !     ********** 3D ***********
        !     *************************

        !     Rectangular
        if( orderOfAccuracy.eq.2 .and. gridType.eq.rectangular )then
          !     Then do stress BC
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if(boundaryCondition(side,axis).eq.tractionBC)then
              if( twilightZone.eq.0 )then
                           if( axis.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                            if (addBoundaryForcing(side,axis).eq.0) 
     & then
                !     No forcing
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,
     & wc)))))
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)
     & -u(i1-is3,i2-is1,i3-is2,uc)))))
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)
     & -u(i1-is2,i2-is3,i3-is1,uc)))))
                            else
                !     Forcing
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,
     & wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)
     & -u(i1-is3,i2-is1,i3-is2,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)
     & -u(i1-is2,i2-is3,i3-is1,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            endif
                             end if
                             end do
                             end do
                             end do
                           else if( axis.eq.1 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                            if (addBoundaryForcing(side,axis).eq.0) 
     & then
                !     No forcing
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,
     & uc)))))
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)
     & -u(i1-is3,i2-is1,i3-is2,vc)))))
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)
     & -u(i1-is2,i2-is3,i3-is1,vc)))))
                            else
                           ! *wdh* 091109 bcf wrong
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,
     & uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)
     & -u(i1-is3,i2-is1,i3-is2,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)
     & -u(i1-is2,i2-is3,i3-is1,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            end if
                             end if
                             end do
                             end do
                             end do
                           else if( axis.eq.2 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                            if (addBoundaryForcing(side,axis).eq.0) 
     & then
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,
     & vc)))))
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)
     & -u(i1-is3,i2-is1,i3-is2,wc)))))
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)
     & -u(i1-is2,i2-is3,i3-is1,wc)))))
                            else
                             u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,
     & vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                             u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)
     & -u(i1-is3,i2-is1,i3-is2,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                             u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)
     & -u(i1-is2,i2-is3,i3-is1,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            end if
                             end if
                             end do
                             end do
                             end do
                           end if
              else
                           if( axis.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                                  call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                  call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                  call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,
     & wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+wz0))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)
     & -u(i1-is3,i2-is1,i3-is2,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,
     & i2,i3))*(uy0))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)
     & -u(i1-is2,i2-is3,i3-is1,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,
     & i2,i3))*(uz0))
                             end if
                             end do
                             end do
                             end do
                           else if( axis.eq.1 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                                  call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                  call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                  call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,
     & uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+wz0))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)
     & -u(i1-is3,i2-is1,i3-is2,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,
     & i2,i3))*(vz0))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)
     & -u(i1-is2,i2-is3,i3-is1,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,
     & i2,i3))*(vx0))
                             end if
                             end do
                             end do
                             end do
                           else if( axis.eq.2 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                             do i3=n3a,n3b
                             do i2=n2a,n2b
                             do i1=n1a,n1b
                             if( mask(i1,i2,i3).gt.0 )then
                                  call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                  call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                  call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*
     & (u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+is*0.5*
     & dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,
     & vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+ux0))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)
     & -u(i1-is3,i2-is1,i3-is2,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,
     & i2,i3))*(uz0))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*0.5*dxi(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)
     & -u(i1-is2,i2-is3,i3-is1,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,
     & i2,i3))*(vz0))
                             end if
                             end do
                             end do
                             end do
                           end if
              end if
            end if
                      end do ! end side
                     end do  ! end axis
          !     Correct edges
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if

            !     Axis 1
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)) 
     & then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            !     Axis 2
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)) 
     & then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
                      end do ! end side
                     end do  ! end axis
          !     Correct corners
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)
     & .and.(boundaryCondition(0,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)
     & .and.(boundaryCondition(1,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3b
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if

            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)
     & .and.(boundaryCondition(0,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)
     & .and.(boundaryCondition(1,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc)))))
                           else
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))-is*bcf(side,axis,i1,i2,i3,wc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     (2 mu lam) u.x = -lam (v.y+w.z)
                !     mu v.x = - mu u.y
                !     mu w.x = -mu u.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(0)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))))+(lam2mu3M(i1,i2,i3))*ux0+(lam3M(i1,i2,i3))*(vy0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))))+(mu3M(i1,i2,i3))*vx0+(mu3M(i1,i2,i3))
     & *(uy0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(0)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            !     Axis 1
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)
     & .and.(boundaryCondition(0,0).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)
     & .and.(boundaryCondition(1,0).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)
     & .and.(boundaryCondition(0,0).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)
     & .and.(boundaryCondition(1,0).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc)))))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))-is*bcf(side,axis,i1,i2,i3,vc))
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))-is*bcf(side,axis,i1,i2,i3,uc))
                           end if
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.y = - mu v.x
                !     lam2mu v.y = -lam*(u.x+w.z)
                !     mu w.y = - mu v.z
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(1)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))))+(lam2mu3M(i1,i2,i3))*vy0+(lam3M(i1,i2,i3))*(ux0+
     & wz0))
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(1)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))))+(mu3M(i1,i2,i3))*uy0+(mu3M(i1,i2,i3))
     & *(vx0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if

            !     Axis 2
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)
     & .and.(boundaryCondition(0,1).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)
     & .and.(boundaryCondition(1,1).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)
     & .and.(boundaryCondition(0,1).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)
     & .and.(boundaryCondition(1,1).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              if( twilightZone.eq.0 )then
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                           if (addBoundaryForcing(side,axis).eq.0) then
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc)))))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc)))))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc)))))
                           else
                            ! *wdh* 091109 -- bcf --
                            u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))-is*bcf(side,axis,i1,i2,i3,wc))
                            u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))-is*bcf(side,axis,i1,i2,i3,uc))
                            u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))-is*bcf(side,axis,i1,i2,i3,vc))
                           endif
                            end if
                            end do
                            end do
                            end do
              else
                !     mu u.z = - mu w.x
                !     mu v.z = - mu w.y
                !     lam2mu w.z = -lam*(u.x+v.y)
                           do i3=n3ae,n3be
                           do i2=n2ae,n2be
                           do i1=n1ae,n1be
                            if( mask(i1,i2,i3).gt.0 )then
                                 call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                                 call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                                 call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,
     & i3,0),xy(i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                           u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-
     & is*dx(2)*2.*(1.d0/(0.5*(lam2mu3M(i1-is1,i2-is2,i3-is3)+
     & lam2mu3M(i1,i2,i3))))*(-(0.5d0*(0.5*(lam2mu3M(i1+is1,i2+is2,i3+
     & is3)+lam2mu3M(i1,i2,i3)))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(lam3M(i1,i2,i3))*(is*(1.d0-iep11*
     & iep12*0.5d0)*dxi(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*
     & iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+is*(
     & 1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))))+(lam2mu3M(i1,i2,i3))*wz0+(lam3M(i1,i2,i3))*(vy0+
     & ux0))
                           u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep11*iep12*0.5d0)*dxi(axisp1)*(u(i1+
     & is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))))+(mu3M(i1,i2,i3))*wx0+(mu3M(i1,i2,i3))
     & *(uz0))
                           u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-
     & is*dx(2)*2.*(1.d0/(0.5*(mu3M(i1-is1,i2-is2,i3-is3)+mu3M(i1,i2,
     & i3))))*(-(0.5d0*(0.5*(mu3M(i1+is1,i2+is2,i3+is3)+mu3M(i1,i2,i3)
     & ))*is*(dxi(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & mu3M(i1,i2,i3))*(is*(1.d0-iep21*iep22*0.5d0)*dxi(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))))+(mu3M(i1,i2,i3))*wy0+(mu3M(i1,i2,i3))
     & *(vz0))
                            end if
                            end do
                            end do
                            end do
              end if
            end if
                      end do ! end side
                     end do  ! end axis

        else if( orderOfAccuracy.eq.2 .and. gridType.eq.curvilinear )
     & then
          !     *********************************************
          !     ************* 3d Curvilinear ****************
          !     *********************************************

          !     Then do stress BC
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if(boundaryCondition(side,axis).eq.tractionBC)then
              if( twilightZone.eq.0 )then
                if(addBoundaryForcing(side,axis).eq.0) then
                   do i3=n3a,n3b
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                               f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,uc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & uc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-
     & is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-
     & is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp2,vc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,
     & wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp1,wc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-
     & is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-
     & is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)
     & *rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-
     & is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,
     & i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
                               f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,vc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & vc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-
     & is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-
     & is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp2,wc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,
     & uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp1,uc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-
     & is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-
     & is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)
     & *rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-
     & is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,
     & i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
                               f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,wc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & wc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-
     & is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-
     & is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp2,uc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,
     & vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp1,vc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-
     & is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-
     & is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)
     & *rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-
     & is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,
     & i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
                               a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                               a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axis,uc)*mu3M(i1,i2,i3))))
                               a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axis,uc)*mu3M(i1,i2,i3))))
                               a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                               a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axis,vc)*mu3M(i1,i2,i3))))
                               a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axis,vc)*mu3M(i1,i2,i3))))
                               a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                               a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axis,wc)*mu3M(i1,i2,i3))))
                               a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axis,wc)*mu3M(i1,i2,i3))))
                    !     [ a3(0,0) a3(0,1) a3(0,2) ][ Dnu(-1) ] =  RHS
                    !     [ a3(1,0) a3(1,1) a3(1,2) ][ dnv(-1) ]
                    !     [ a3(2,0) a3(2,1) a3(2,2) ][ dnw(-1) ]
                    f(0) = -f(0)
                    f(1) = -f(1)
                    f(2) = -f(2)
                    call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
                    call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
                    u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*
     & dr(axis)
                    u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*
     & dr(axis)
                    u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*
     & dr(axis)
                   end if
                   end do
                   end do
                   end do
                else             ! We force the boundary
                   do i3=n3a,n3b
                   do i2=n2a,n2b
                   do i1=n1a,n1b
                   if( mask(i1,i2,i3).gt.0 )then
                               f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,uc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & uc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-
     & is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-
     & is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp2,vc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,
     & wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp1,wc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-
     & is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-
     & is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)
     & *rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-
     & is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,
     & i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
                               f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,vc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & vc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-
     & is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-
     & is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp2,wc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,
     & uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp1,uc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-
     & is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-
     & is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)
     & *rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-
     & is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,
     & i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
                               f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+
     & is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,wc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & wc)*lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+
     & is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-
     & is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(
     & i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+
     & is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-
     & is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp2,uc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+
     & is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+
     & is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,
     & i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,
     & i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,
     & vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp1,vc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+
     & is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3)
     & )*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-
     & is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-
     & is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)
     & *rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-
     & is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,
     & i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
                               a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                               a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axis,uc)*mu3M(i1,i2,i3))))
                               a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axis,uc)*mu3M(i1,i2,i3))))
                               a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                               a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axis,vc)*mu3M(i1,i2,i3))))
                               a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axis,vc)*mu3M(i1,i2,i3))))
                               a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                               a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axis,wc)*mu3M(i1,i2,i3))))
                               a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,
     & i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,
     & i3-is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))
     & +(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,
     & i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axis,wc)*mu3M(i1,i2,i3))))
                    !     [ a3(0,0) a3(0,1) a3(0,2) ][ Dnu(-1) ] =  RHS
                    !     [ a3(1,0) a3(1,1) a3(1,2) ][ dnv(-1) ]
                    !     [ a3(2,0) a3(2,1) a3(2,2) ][ dnw(-1) ]
                    an1=rsxy(i1,i2,i3,axis,0) ! normal (an1,an2,an3)
                    an2=rsxy(i1,i2,i3,axis,1)
                    an3=rsxy(i1,i2,i3,axis,2)
                    alpha=lam2mu3M(i1,i2,i3)
                    mu=mu3M(i1,i2,i3)
                    lambda=lam3M(i1,i2,i3)
                    !     subtract off forcing
                    f(0) = -f(0) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,
     & i2,i3,uc))
                    f(1) = -f(1) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,
     & i2,i3,vc))
                    ! *wdh* 091109 -- bcf --
                    f(2) = -f(2) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,
     & i2,i3,wc))
                    call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
                    call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
                    u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*
     & dr(axis)
                    u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*
     & dr(axis)
                    u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*
     & dr(axis)
                   end if
                   end do
                   end do
                   end do
                end if
              else
                 do i3=n3a,n3b
                 do i2=n2a,n2b
                 do i1=n1a,n1b
                 if( mask(i1,i2,i3).gt.0 )then
                             f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))*is*(
     & dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*
     & lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*0.5*
     & dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,
     & uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,
     & i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))
     & +(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,
     & vc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+
     & is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+
     & is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))
     & *is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*
     & lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)
     & -u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)
     & *rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-
     & is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,
     & i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(
     & i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,
     & i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))
     & *is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-
     & is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-
     & is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,
     & axisp2,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))
                             f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))*is*(
     & dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*
     & lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*0.5*
     & dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,
     & vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,
     & i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))
     & +(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,
     & wc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+
     & is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+
     & is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))
     & *is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*
     & lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)
     & -u(i1-is3,i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)
     & *rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-
     & is2,i2-is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,
     & i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,wc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(
     & i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,
     & i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))
     & *is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-
     & is3,i3-is1,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-
     & is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,
     & axisp2,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))
                             f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))*is*(
     & dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*
     & lam2mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,
     & wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*0.5*
     & dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-is3,i3-is1,
     & wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,
     & i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,i2-is1,i3-is2,uc))
     & +(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,
     & uc)*lam3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+
     & is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(JAC3(i1+is1,i2+
     & is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))
     & *is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*
     & lam3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)
     & -u(i1-is3,i2-is1,i3-is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3))*is*0.5*dri(
     & axisp2)*(u(i1+is2,i2+is3,i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
     & +0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+
     & is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+
     & is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+
     & is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)
     & *rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(
     & u(i1+is3,i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(
     & i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-
     & is2,i2-is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,uc)-u(i1-is3,
     & i2-is1,i3-is2,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+
     & is2,i2+is3,i3+is1,uc)-u(i1-is2,i2-is3,i3-is1,uc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(
     & i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp1)*(u(i1+is3,
     & i2+is1,i3+is2,wc)-u(i1-is3,i2-is1,i3-is2,wc))+(JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))
     & *is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,i3+is1,wc)-u(i1-is2,i2-
     & is3,i3-is1,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(
     & i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*
     & 0.5*dri(axisp1)*(u(i1+is3,i2+is1,i3+is2,vc)-u(i1-is3,i2-is1,i3-
     & is2,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,
     & axisp2,wc)*mu3M(i1,i2,i3))*is*0.5*dri(axisp2)*(u(i1+is2,i2+is3,
     & i3+is1,vc)-u(i1-is2,i2-is3,i3-is1,vc))
                             a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,
     & i3,axis,vc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                             a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & uc)*mu3M(i1,i2,i3))))
                             a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & uc)*mu3M(i1,i2,i3))))
                             a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,
     & i3,axis,wc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                             a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & vc)*mu3M(i1,i2,i3))))
                             a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & vc)*mu3M(i1,i2,i3))))
                             a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*
     & rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,
     & i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-
     & is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,
     & i3,axis,uc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                             a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & wc)*mu3M(i1,i2,i3))))
                             a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-
     & is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-
     & is3,axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & wc)*mu3M(i1,i2,i3))))
                        call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
                        call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
                        call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,i3,0),xy(
     & i1,i2,i3,1),xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
                  !     [ a3(0,0) a3(0,1) a3(0,2) ][ Dnu(-1) ] =  RHS
                  !     [ a3(1,0) a3(1,1) a3(1,2) ][ dnv(-1) ]
                  !     [ a3(2,0) a3(2,1) a3(2,2) ][ dnw(-1) ]
                  an1=rsxy(i1,i2,i3,axis,0) ! normal (an1,an2,an3)
                  an2=rsxy(i1,i2,i3,axis,1)
                  an3=rsxy(i1,i2,i3,axis,2)
                  alpha=lam2mu3M(i1,i2,i3)
                  mu=mu3M(i1,i2,i3)
                  lambda=lam3M(i1,i2,i3)
                  !     subtract off twilight
                  f(0) = -f(0) + Jac3(i1,i2,i3)*( an1*(alpha*ux0+
     & lambda*(vy0+wz0))+an2*(mu*(uy0+vx0))+an3*(mu*(uz0+wx0)))
                  f(1) = -f(1) + Jac3(i1,i2,i3)*( an1*(mu*(uy0+vx0))+
     & an2*(lambda*(ux0+wz0)+alpha*vy0)+an3*(mu*(vz0+wy0)))
                  f(2) = -f(2) + Jac3(i1,i2,i3)*( an1*(mu*(uz0+wx0))+
     & an2*(mu*(vz0+wy0))+an3*(lambda*(ux0+vy0)+alpha*wz0))
                  call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
                  call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
                  u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*dr(
     & axis)
                  u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*dr(
     & axis)
                  u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*dr(
     & axis)
                 end if
                 end do
                 end do
                 end do
              end if
            end if
                      end do ! end side
                     end do  ! end axis
          !     Correct edges
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if

!     Axis 1
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
             end if
             if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)) 
     & then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
!     Axis 2
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)) 
     & then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1
              iep22=1
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)) 
     & then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1
              iep12=1
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
                      end do ! end side
                     end do  ! end axis

!     Correct corners
                     extra1a=numGhost
                     extra1b=numGhost
                     extra2a=numGhost
                     extra2b=numGhost
                     if( nd.eq.3 )then
                      extra3a=numGhost
                      extra3b=numGhost
                     else
                      extra3a=0
                      extra3b=0
                     end if
                     if( boundaryCondition(0,0).lt.0 )then
                      extra1a=max(0,extra1a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,0).eq.0 )then
                      extra1a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,0).lt.0 )then
                      extra1b=max(0,extra1b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,0).eq.0 )then
                      extra1b=numGhost
                     end if
                     if( boundaryCondition(0,1).lt.0 )then
                      extra2a=max(0,extra2a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                     else if( boundaryCondition(0,1).eq.0 )then
                      extra2a=numGhost ! include interpolation points since we assign ghost points outside these
                     end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                     if( boundaryCondition(1,1).lt.0 )then
                      extra2b=max(0,extra2b) ! over-ride numGhost=-1 : assign ends in periodic directions
                     else if( boundaryCondition(1,1).eq.0 )then
                      extra2b=numGhost
                     end if
                     if(  nd.eq.3 )then
                      if( boundaryCondition(0,2).lt.0 )then
                       extra3a=max(0,extra3a) ! over-ride numGhost=-1 : assign ends in periodic directions (or internal parallel boundaries)
                      else if( boundaryCondition(0,2).eq.0 )then
                       extra3a=numGhost ! include interpolation points since we assign ghost points outside these
                      end if
          !     **NOTE** the bc on the right may be negative even it is not on the left (for parallel)
                      if( boundaryCondition(1,2).lt.0 )then
                       extra3b=max(0,extra3b) ! over-ride numGhost=-1 : assign ends in periodic directions
                      else if( boundaryCondition(1,2).eq.0 )then
                       extra3b=numGhost
                      end if
                     end if
                     do axis=0,nd-1
                      do side=0,1
                       if( boundaryCondition(side,axis).gt.0 )then
          !     write(*,'(" bcOpt: side,axis,bc=",3i2)') side,axis,boundaryCondition(side,axis)
               n1a=gridIndexRange(0,0)
               n1b=gridIndexRange(1,0)
               n2a=gridIndexRange(0,1)
               n2b=gridIndexRange(1,1)
               n3a=gridIndexRange(0,2)
               n3b=gridIndexRange(1,2)
               if( axis.eq.0 )then
            n1a=gridIndexRange(side,axis)
            n1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           n2a=gridIndexRange(side,axis)
           n2b=gridIndexRange(side,axis)
               else
           n3a=gridIndexRange(side,axis)
           n3b=gridIndexRange(side,axis)
               end if
               nn1a=gridIndexRange(0,0)-extra1a
               nn1b=gridIndexRange(1,0)+extra1b
               nn2a=gridIndexRange(0,1)-extra2a
               nn2b=gridIndexRange(1,1)+extra2b
               nn3a=gridIndexRange(0,2)-extra3a
               nn3b=gridIndexRange(1,2)+extra3b
               if( axis.eq.0 )then
           nn1a=gridIndexRange(side,axis)
           nn1b=gridIndexRange(side,axis)
               else if( axis.eq.1 )then
           nn2a=gridIndexRange(side,axis)
           nn2b=gridIndexRange(side,axis)
               else
           nn3a=gridIndexRange(side,axis)
           nn3b=gridIndexRange(side,axis)
               end if
               is=1-2*side
               is1=0
               is2=0
               is3=0
               if( axis.eq.0 )then
           is1=1-2*side
               else if( axis.eq.1 )then
           is2=1-2*side
               else if( axis.eq.2 )then
           is3=1-2*side
               else
           stop 5
               end if
               axisp1=mod(axis+1,nd)
               axisp2=mod(axis+2,nd)
               i3=n3a
               if( debug.gt.7 )then
           write(*,'(" bcOpt: grid,side,axis=",3i3,", loop bounds: n1a,
     & n1b,n2a,n2b,n3a,n3b=",6i3)') grid,side,axis,n1a,n1b,n2a,n2b,
     & n3a,n3b
               end if
          end if! if bc>0
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)
     & .and.(boundaryCondition(0,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(0,1).eq.tractionBC)
     & .and.(boundaryCondition(1,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3b
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if

            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)
     & .and.(boundaryCondition(0,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.0).and.(boundaryCondition(side,0)
     & .eq.tractionBC).and.(boundaryCondition(1,1).eq.tractionBC)
     & .and.(boundaryCondition(1,2).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
!     Axis 1
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)
     & .and.(boundaryCondition(0,0).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

!     doEdge()
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(0,2).eq.tractionBC)
     & .and.(boundaryCondition(1,0).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3a
              n3be=n3a
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

            !     doEdge()
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)
     & .and.(boundaryCondition(0,0).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

            !     doEdge()
            end if
            if ((axis.eq.1).and.(boundaryCondition(side,1)
     & .eq.tractionBC).and.(boundaryCondition(1,2).eq.tractionBC)
     & .and.(boundaryCondition(1,0).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2b
              n3ae=n3b
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

            !     doEdge()
            end if

            !     Axis 2
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)
     & .and.(boundaryCondition(0,1).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

             !     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(0,0).eq.tractionBC)
     & .and.(boundaryCondition(1,1).eq.tractionBC)) then
              n1ae=n1a
              n1be=n1a
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=1-side
              iep12=side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

              !     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)
     & .and.(boundaryCondition(0,1).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2a
              n2be=n2a
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=1-side
              iep22=side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

              !     doEdge()
            end if
            if ((axis.eq.2).and.(boundaryCondition(side,2)
     & .eq.tractionBC).and.(boundaryCondition(1,0).eq.tractionBC)
     & .and.(boundaryCondition(1,1).eq.tractionBC)) then
              n1ae=n1b
              n1be=n1b
              n2ae=n2b
              n2be=n2b
              n3ae=n3a
              n3be=n3b
              iep11=side
              iep12=1-side
              iep21=side
              iep22=1-side
              call bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

              !     doEdge()
            end if
                      end do ! end side
                     end do  ! end axis
        else
          !     un-known nd and orderOfAccuracy
          stop 6663
        end if

      else
        !     unknown nd 
        stop 8826
      end if

      return
      end


!     This subroutine is used instead of the macro doEdge()
!     to produce shorter source code.
      subroutine bcEdge( nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,
     & gridIndexRange, u, mask,rsxy, xy, boundaryCondition, ipar, 
     & rpar, ierr , n1ae, n1be, n2ae, n2be, n3ae, n3be,iep11, iep12, 
     & iep21, iep22,axis,axisp1,axisp2,is1,is2,is3,is,bcf00,bcf10,
     & bcf01,bcf11,bcf02,bcf12,bcf0,bcOffset,addBoundaryForcing,
     & interfaceType,dim,side)

      implicit none

      integer nd, nd1a,nd1b,nd2a,nd2b,nd3a,nd3b, ierr

      real u(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:*)
      integer mask(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      real rsxy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1,0:nd-1)
      real xy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
      integer gridIndexRange(0:1,0:2),boundaryCondition(0:1,0:2)

      integer ipar(0:*)
      real rpar(0:*)

      integer*8 bcOffset(0:1,0:2)
      integer addBoundaryForcing(0:1,0:2)
      integer interfaceType(0:1,0:2,0:*)
      integer dim(0:1,0:2,0:1,0:2)
      real bcf00(dim(0,0,0,0):dim(1,0,0,0), dim(0,1,0,0):dim(1,1,0,0), 
     & dim(0,2,0,0):dim(1,2,0,0),0:*)
      real bcf10(dim(0,0,1,0):dim(1,0,1,0), dim(0,1,1,0):dim(1,1,1,0), 
     & dim(0,2,1,0):dim(1,2,1,0),0:*)
      real bcf01(dim(0,0,0,1):dim(1,0,0,1), dim(0,1,0,1):dim(1,1,0,1), 
     & dim(0,2,0,1):dim(1,2,0,1),0:*)
      real bcf11(dim(0,0,1,1):dim(1,0,1,1), dim(0,1,1,1):dim(1,1,1,1), 
     & dim(0,2,1,1):dim(1,2,1,1),0:*)
      real bcf02(dim(0,0,0,2):dim(1,0,0,2), dim(0,1,0,2):dim(1,1,0,2), 
     & dim(0,2,0,2):dim(1,2,0,2),0:*)
      real bcf12(dim(0,0,1,2):dim(1,0,1,2), dim(0,1,1,2):dim(1,1,1,2), 
     & dim(0,2,1,2):dim(1,2,1,2),0:*)

      real bcf0(0:*)


!     --- local variables ----

      integer side,axis,grid,gridType,orderOfAccuracy,
     & orderOfExtrapolation,twilightZone,uc,vc,wc,useWhereMask,debug,
     & nn,n1,n2
      real dx(0:2),dr(0:2),dri(0:3),dxi(0:3)
      real t,ep,dt,c1,c2,rho,mu,lambda,alpha
      integer axisp1,axisp2,i1,i2,i3,is1,is2,is3,j1,j2,j3,js1,js2,js3,
     & ks1,ks2,ks3,is,js,it,nit
      integer iep1,iep2,iep11,iep12,iep21,iep22
      integer option,initialized,itc

      integer numGhost,numberOfGhostPoints
      integer side1,side2,idxs,i
      integer n1a,n1b,n2a,n2b,n3a,n3b
      integer n1ae,n1be,n2ae,n2be,n3ae,n3be
      integer nn1a,nn1b,nn2a,nn2b,nn3a,nn3b
      integer extra1a,extra1b,extra2a,extra2b,extra3a,extra3b
      real epsRatio,an1,an2,an3,aNorm,ua,ub,nDotU
      real epsx
      real ux0,uy0,uz0,vx0,vy0,vz0,wx0,wy0,wz0
      real lam2muM,lamM,muM,lam3M,lam2mu3M,mu3M,jac3,lambdaPlus2mu
      integer numberOfEquations,job
      real a2(0:1,0:1),a3(0:2,0:2),a4(0:3,0:3),a8(0:7,0:7),q(0:11),f(
     & 0:11),ipvt(0:11),rcond,work(0:11)

      real err

!     define boundary conditions:
! define BC parameters for fortran routines
! boundary conditions
c123456789012345678901234567890123456789012345678901234567890123456789
      integer interpolation,displacementBC,tractionBC
      integer slipWall,symmetry,interfaceBC
      integer abcEM2,abcPML,abc3,abc4,abc5,rbcNonLocal,rbcLocal,lastBC
      integer dirichletBoundaryCondition
      parameter( interpolation=0,displacementBC=1,tractionBC=2)
      parameter( slipWall=3,symmetry=4 )
      parameter( interfaceBC=5,abcEM2=6,abcPML=7,abc3=8,abc4=9 )
      parameter( abc5=10,rbcNonLocal=11,rbcLocal=12 )
      parameter( dirichletBoundaryCondition=13 )
      parameter( lastBC=14 )
! define interfaceType values for fortran routines
      integer noInterface                     ! no interface conditions are imposed
      integer heatFluxInterface               ! [ T.n ] = g
      integer tractionInterface               ! [ n.tau ] = g
      integer tractionAndHeatFluxInterface
      parameter( noInterface=0, heatFluxInterface=1 )
      parameter( tractionInterface=2,tractionAndHeatFluxInterface=3 )

      integer rectangular,curvilinear
      parameter(rectangular=0,curvilinear=1)


!     --- start statement function ----
      integer kd,m,n
      real bcf
      Jac3(i1,i2,i3)=(1.d0/(rsxy(i1,i2,i3,0,0)*rsxy(i1,i2,i3,1,1)*rsxy(
     & i1,i2,i3,2,2)+rsxy(i1,i2,i3,0,1)*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,
     & i3,2,0)+rsxy(i1,i2,i3,0,2)*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,2,
     & 1)-rsxy(i1,i2,i3,2,0)*rsxy(i1,i2,i3,1,1)*rsxy(i1,i2,i3,0,2)-
     & rsxy(i1,i2,i3,2,1)*rsxy(i1,i2,i3,1,2)*rsxy(i1,i2,i3,0,0)-rsxy(
     & i1,i2,i3,2,2)*rsxy(i1,i2,i3,1,0)*rsxy(i1,i2,i3,0,1)))

!!$      lamM(i1,i2)=(c1-c2)
!!$      muM(i1,i2)=c2
!!$      lam2muM(i1,i2)=(lamM(i1,i2)+2.0*muM(i1,12))
!!$      lam3M(i1,i2,i3)=(c1-c2)
!!$      mu3M(i1,i2,i3)=c2
!!$      lam2mu3M(i1,i2,i3)=(lam3M(i1,i2,i3)+2.0*mu3M(i1,12,i3))

      lamM(i1,i2)=lambda
      muM(i1,i2)=mu
      lam2muM(i1,i2)=lambdaPlus2mu
      lam3M(i1,i2,i3)=lambda
      mu3M(i1,i2,i3)=mu
      lam2mu3M(i1,i2,i3)=lambdaPlus2mu

!     Here is the the generic boundary condition forcing array. It uses the bcOffset(side,axis) values as an
!     an offset from the bcf0 array to access the bcf10, bcf01, bcf11, ... arrays
      bcf(side,axis,i1,i2,i3,m) = bcf0(bcOffset(side,axis) + (i1-dim(0,
     & 0,side,axis)+(dim(1,0,side,axis)-dim(0,0,side,axis)+1)* (i2-
     & dim(0,1,side,axis)+(dim(1,1,side,axis)-dim(0,1,side,axis)+1)* (
     & i3-dim(0,2,side,axis)+(dim(1,2,side,axis)-dim(0,2,side,axis)+1)
     & *(m)))))

!...............end statement functions

      ierr=0

      nd                   =ipar(0)
      grid                 =ipar(1)
      uc                   =ipar(2)
      vc                   =ipar(3)
      wc                   =ipar(4)
      gridType             =ipar(5)
      orderOfAccuracy      =ipar(6)
      orderOfExtrapolation =ipar(7)
      twilightZone         =ipar(8)
      useWhereMask         =ipar(9)
      debug                =ipar(10)

      dx(0)                =rpar(0)
      dx(1)                =rpar(1)
      dx(2)                =rpar(2)
      dr(0)                =rpar(3)
      dr(1)                =rpar(4)
      dr(2)                =rpar(5)
      t                    =rpar(6)
      ep                   =rpar(7) ! pointer for exact solution
      dt                   =rpar(8)
      rho                  =rpar(9)
      mu                   =rpar(10)
      lambda               =rpar(11)
      c1                   =rpar(12)
      c2                   =rpar(13)

      job=0                     ! *wdh* 090101

      if (0.eq.1) write (*,*) "DEAA INNER",n3ae,n3be,n2ae,n2be,n1ae,
     & n1be,iep11,
     &     iep12, iep21, iep22
!     write(*,'(" bcOptSmCons t=",e10.2)') t

      epsx=1.e-20              ! fix this
      numGhost=orderOfAccuracy/2
      do i=0,2
       dri(i)=1.0d0/dr(i)
      enddo
       if( twilightZone.eq.0 )then
         if(addBoundaryForcing(side,axis).eq.0) then
          do i3=n3ae,n3be
          do i2=n2ae,n2be
          do i1=n1ae,n1be
           if( mask(i1,i2,i3).gt.0 )then
                     f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)
     & -u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(
     & i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))
                     f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)
     & -u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(
     & i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))
                     f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)
     & -u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(
     & i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))
                     a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & vc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                     a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3))))
                     a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3))))
                     a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & wc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                     a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3))))
                     a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3))))
                     a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & uc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                     a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3))))
                     a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3))))
          f(0) = -f(0)
          f(1) = -f(1)
          f(2) = -f(2)
          call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
          call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
          u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*dr(axis)
          u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*dr(axis)
          u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*dr(axis)
           end if
           end do
           end do
           end do
         else
          do i3=n3ae,n3be
          do i2=n2ae,n2be
          do i1=n1ae,n1be
           if( mask(i1,i2,i3).gt.0 )then
                     f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)
     & -u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(
     & i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))
                     f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)
     & -u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(
     & i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))
                     f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)
     & -u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(
     & i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))
                     a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & vc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                     a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3))))
                     a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3))))
                     a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & wc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                     a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3))))
                     a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3))))
                     a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,
     & i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))+(
     & 0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & uc)*mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-
     & is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                     a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3))))
                     a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,
     & axis,vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3))))
          an1=rsxy(i1,i2,i3,axis,0) ! normal (an1,an2,an3)
          an2=rsxy(i1,i2,i3,axis,1)
          an3=rsxy(i1,i2,i3,axis,2)
          alpha=lam2mu3M(i1,i2,i3)
          mu=mu3M(i1,i2,i3)
          lambda=lam3M(i1,i2,i3)
          !     subtract off twilight
          f(0) = -f(0) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,i2,i3,uc))
          f(1) = -f(1) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,i2,i3,vc))
          f(2) = -f(2) - is*Jac3(i1,i2,i3)*(bcf(side,axis,i1,i2,i3,wc))
          call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
          call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
          u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*dr(axis)
          u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*dr(axis)
          u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*dr(axis)
           end if
           end do
           end do
           end do
         end if
       else
         do i3=n3ae,n3be
         do i2=n2ae,n2be
         do i1=n1ae,n1be
          if( mask(i1,i2,i3).gt.0 )then
                    f(0)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,
     & vc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)
     & -u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axisp1,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(
     & i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,uc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,
     & uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & wc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))
                    f(1)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & vc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,
     & wc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)
     & -u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(
     & i1,i2,i3,axisp1,wc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp2,wc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(
     & i1,i2,i3,vc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,
     & i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,vc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,vc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,uc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,vc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)-u(i1,i2,i3,uc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp1,
     & vc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,uc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & uc)*rsxy(i1,i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,uc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,uc))
                    f(2)=0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+
     & is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*
     & lam2mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,wc)*lam2mu3M(
     & i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,wc)*lam2mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(
     & 0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,
     & wc)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*lam3M(i1+is1,i2+is2,i3+
     & is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,
     & uc)*lam3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,uc)
     & -u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(
     & i1,i2,i3,axisp1,uc)*lam3M(i1,i2,i3))*is*(1.d0-iep11*iep12*
     & 0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,
     & uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp2,uc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*
     & iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*lam3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axisp1,vc)*lam3M(i1,
     & i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*
     & iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-is1*
     & iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axisp2,vc)*lam3M(i1,i2,i3))*is*(1.d0-iep21*iep22*
     & 0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,
     & vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))+0.5*(0.5*(
     & JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,uc)*mu3M(i1+is1,i2+is2,i3+is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(
     & i1,i2,i3,wc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,
     & i2,i3,axisp1,uc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*
     & dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,wc)-u(i1-
     & is3*iep12,i2-is1*iep12,i3-is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(
     & i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,uc)*mu3M(i1,i2,i3))*is*(
     & 1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*
     & iep21,i3+is1*iep21,wc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*
     & iep22,wc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*rsxy(i1+is1,i2+
     & is2,i3+is3,axis,uc)*rsxy(i1+is1,i2+is2,i3+is3,axis,wc)*mu3M(i1+
     & is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(
     & i1,i2,i3,axis,wc)*mu3M(i1,i2,i3)))*is*(dri(axis)*(u(i1+is1,i2+
     & is2,i3+is3,uc)-u(i1,i2,i3,uc)))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axisp1,wc)*mu3M(i1,i2,i3))*is*(1.d0-
     & iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,i2+is1*iep11,i3+
     & is2*iep11,uc)-u(i1-is3*iep12,i2-is1*iep12,i3-is2*iep12,uc))+(
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axisp2,wc)*
     & mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*dri(axisp2)*(u(i1+
     & is2*iep21,i2+is3*iep21,i3+is1*iep21,uc)-u(i1-is2*iep22,i2-is3*
     & iep22,i3-is1*iep22,uc))+0.5*(0.5*(JAC3(i1+is1,i2+is2,i3+is3)*
     & rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,i2+is2,i3+is3,
     & axis,vc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3)))*is*(dri(
     & axis)*(u(i1+is1,i2+is2,i3+is3,wc)-u(i1,i2,i3,wc)))+(JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,vc)*mu3M(i1,i2,
     & i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(i1+is3*iep11,
     & i2+is1*iep11,i3+is2*iep11,wc)-u(i1-is3*iep12,i2-is1*iep12,i3-
     & is2*iep12,wc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,
     & i2,i3,axisp2,vc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*iep22*0.5d0)*
     & dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*iep21,wc)-u(i1-
     & is2*iep22,i2-is3*iep22,i3-is1*iep22,wc))+0.5*(0.5*(JAC3(i1+is1,
     & i2+is2,i3+is3)*rsxy(i1+is1,i2+is2,i3+is3,axis,vc)*rsxy(i1+is1,
     & i2+is2,i3+is3,axis,wc)*mu3M(i1+is1,i2+is2,i3+is3)+JAC3(i1,i2,
     & i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,
     & i3)))*is*(dri(axis)*(u(i1+is1,i2+is2,i3+is3,vc)-u(i1,i2,i3,vc))
     & )+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axisp1,
     & wc)*mu3M(i1,i2,i3))*is*(1.d0-iep11*iep12*0.5d0)*dri(axisp1)*(u(
     & i1+is3*iep11,i2+is1*iep11,i3+is2*iep11,vc)-u(i1-is3*iep12,i2-
     & is1*iep12,i3-is2*iep12,vc))+(JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,
     & vc)*rsxy(i1,i2,i3,axisp2,wc)*mu3M(i1,i2,i3))*is*(1.d0-iep21*
     & iep22*0.5d0)*dri(axisp2)*(u(i1+is2*iep21,i2+is3*iep21,i3+is1*
     & iep21,vc)-u(i1-is2*iep22,i2-is3*iep22,i3-is1*iep22,vc))
                    a3(0,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*lam2mu3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*
     & mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,
     & i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(
     & i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*
     & rsxy(i1,i2,i3,axis,wc)*mu3M(i1,i2,i3))))
                    a3(0,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,uc)*mu3M(
     & i1,i2,i3))))
                    a3(0,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,uc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,uc)*mu3M(
     & i1,i2,i3))))
                    a3(1,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,vc)*rsxy(i1,i2,i3,axis,vc)*lam2mu3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*
     & mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,
     & i2-is2,i3-is3,axis,uc)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(
     & i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*
     & rsxy(i1,i2,i3,axis,uc)*mu3M(i1,i2,i3))))
                    a3(1,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axis,wc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,wc)*rsxy(i1,i2,i3,axis,vc)*mu3M(
     & i1,i2,i3))))
                    a3(1,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,vc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,vc)*mu3M(
     & i1,i2,i3))))
                    a3(2,2)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & wc)*lam2mu3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,
     & i3,axis,wc)*rsxy(i1,i2,i3,axis,wc)*lam2mu3M(i1,i2,i3)))+(0.5*(
     & JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*
     & rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*mu3M(i1-is1,i2-is2,i3-is3)+
     & JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,uc)*
     & mu3M(i1,i2,i3)))+(0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,
     & i2-is2,i3-is3,axis,vc)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*mu3M(
     & i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*
     & rsxy(i1,i2,i3,axis,vc)*mu3M(i1,i2,i3))))
                    a3(2,0)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & uc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axis,uc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,uc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,uc)*rsxy(i1,i2,i3,axis,wc)*mu3M(
     & i1,i2,i3))))
                    a3(2,1)=0.5*((0.5*(JAC3(i1-is1,i2-is2,i3-is3)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,wc)*rsxy(i1-is1,i2-is2,i3-is3,axis,
     & vc)*lam3M(i1-is1,i2-is2,i3-is3)+JAC3(i1,i2,i3)*rsxy(i1,i2,i3,
     & axis,wc)*rsxy(i1,i2,i3,axis,vc)*lam3M(i1,i2,i3)))+(0.5*(JAC3(
     & i1-is1,i2-is2,i3-is3)*rsxy(i1-is1,i2-is2,i3-is3,axis,vc)*rsxy(
     & i1-is1,i2-is2,i3-is3,axis,wc)*mu3M(i1-is1,i2-is2,i3-is3)+JAC3(
     & i1,i2,i3)*rsxy(i1,i2,i3,axis,vc)*rsxy(i1,i2,i3,axis,wc)*mu3M(
     & i1,i2,i3))))
               call ogDeriv3(ep, 0,1,0,0, xy(i1,i2,i3,0),xy(i1,i2,i3,1)
     & ,xy(i1,i2,i3,2),t, uc,ux0, vc,vx0, wc,wx0)
               call ogDeriv3(ep, 0,0,1,0, xy(i1,i2,i3,0),xy(i1,i2,i3,1)
     & ,xy(i1,i2,i3,2),t, uc,uy0, vc,vy0, wc,wy0)
               call ogDeriv3(ep, 0,0,0,1, xy(i1,i2,i3,0),xy(i1,i2,i3,1)
     & ,xy(i1,i2,i3,2),t, uc,uz0, vc,vz0, wc,wz0)
         an1=rsxy(i1,i2,i3,axis,0) ! normal (an1,an2,an3)
         an2=rsxy(i1,i2,i3,axis,1)
         an3=rsxy(i1,i2,i3,axis,2)
         alpha=lam2mu3M(i1,i2,i3)
         mu=mu3M(i1,i2,i3)
         lambda=lam3M(i1,i2,i3)
         !     subtract off twilight
         f(0) = -f(0) + Jac3(i1,i2,i3)*( an1*(alpha*ux0+lambda*(vy0+
     & wz0))+an2*(mu*(uy0+vx0))+an3*(mu*(uz0+wx0)))
         f(1) = -f(1) + Jac3(i1,i2,i3)*( an1*(mu*(uy0+vx0))+an2*(
     & lambda*(ux0+wz0)+alpha*vy0)+an3*(mu*(vz0+wy0)))
         f(2) = -f(2) + Jac3(i1,i2,i3)*( an1*(mu*(uz0+wx0))+an2*(mu*(
     & vz0+wy0))+an3*(lambda*(ux0+vy0)+alpha*wz0))
         call dgeco( a3(0,0), 3, 3, ipvt(0),rcond,work(0))
         call dgesl( a3(0,0), 3, 3, ipvt(0), f(0), job)
         u(i1-is1,i2-is2,i3-is3,uc)=u(i1,i2,i3,uc)-is*f(0)*dr(axis)
         u(i1-is1,i2-is2,i3-is3,vc)=u(i1,i2,i3,vc)-is*f(1)*dr(axis)
         u(i1-is1,i2-is2,i3-is3,wc)=u(i1,i2,i3,wc)-is*f(2)*dr(axis)
          end if
          end do
          end do
          end do
       end if

      return
      end

