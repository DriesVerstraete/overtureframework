% 
%   plotRegionProbes.m 
%     Usage: plotRegionProbes [fileName] [-nv=<numVarsPerPlot>] [-title=<name>] [-plotName=<name>] [-stride=<i>] ...
%                             [-xMin=<f>] -xMax=[<f>] [-yMin=<f>] -yMax=[<f>]
%
%  -nv = number of variables to show on each plot (if there are more variables than this value then
%         multiple plots will be shown)
%  -plotName : name for plot
%  -stride : stride for showing markers, e.g. -stride=4 means every 4'th point will be marked.
%
%  Example: plotRegionProbes probeFile.dat 6
%  A Matlab script to plot probes results generated by one of the CG solvers
%
%    t  q1 q2 ...

function plotProbes ( varargin )

 set(gca,'FontSize',14);

 for i = 1 : nargin
   fprintf ( 1, '  Argument %d is %s\n', i, varargin{i} );
 end

 fileName = 'probeFile.dat';
 titleName = '';
 plotName = '';
 if nargin>0
   fileName = varargin{1};
 end;
 maxPerPlot=11;  % this is the maximum number of components we can plot at one time
 numPerPlot=3; 
 lineWidth=2;
 markerSize=8; 
 stride=1; 

 xMin=-Inf;
 xMax= Inf;

 yMin=-Inf;
 yMax= Inf;

 % --- read command line args ---
 for i = 2 : nargin
   % fprintf ( 1, 'readTerrain: argument %d is [%s]\n', i, varargin{i} );
   line = varargin{i};

   if( strncmp(line,'-nv=',4) )
     numPerPlot = sscanf(varargin{i},'-nv=%d'); 
   elseif( strncmp(line,'-plotName=',10) )
     plotName = sscanf(varargin{i},'-plotName=%s'); 
   elseif( strncmp(line,'-title=',7) )
     temps = varargin{i};
     titleName = temps(8:size(temps,2));
   elseif( strncmp(line,'-stride=',8) )
     stride = sscanf(varargin{i},'-stride=%d'); 
   elseif( strncmp(line,'-xMin=',6) )
     xMin = sscanf(varargin{i},'-xMin=%e'); 
   elseif( strncmp(line,'-xMax=',6) )
     xMax = sscanf(varargin{i},'-xMax=%e'); 
   elseif( strncmp(line,'-yMin=',6) )
     yMin = sscanf(varargin{i},'-yMin=%e'); 
   elseif( strncmp(line,'-yMax=',6) )
     yMax = sscanf(varargin{i},'-yMax=%e'); 
   else
      fprintf ( 1, 'plotRegionProbes:WARNING: argument %d [%s] is UNKNOWN.\n', i, varargin{i} );
   end;
 end

 fprintf('plotRegionProbes: fileName=%s, numPerPlot=%d, stride=%d, plotName=%s.\n',fileName,numPerPlot,stride,plotName);


%  Read data: 
[headers,labels,t,q] = readProbeFile(fileName);

[numHeaders,headerLen] = size(headers);
fprintf('Header comments:\n');
for i=1:numHeaders
  fprintf('%s\n',headers(i,:));
end;

% labels


[numColumns,columnLen] = size(labels);
numVars=numColumns-1;   % t is not counted
np=size(t,1); % number of points

fprintf(1,'There are %d solution variables in the data. There are %d values in time.\n',numVars,np);

j=1;  % quantities to plot start at index "1" 

nplot = floor( (numVars+numPerPlot-j)/numPerPlot );
for i=1:nplot

  numToPlot=min(numPerPlot,numVars-j+1);
  if numToPlot == 11
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-',t,q(:,j+6),'r-',t,q(:,j+7),'g-',t,q(:,j+8),'b-',t,q(:,j+9),'c-',t,q(:,j+10),'k-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^',t(1:stride:np),q(1:stride:np,j+6),'rd',t(1:stride:np),q(1:stride:np,j+7),'g*',t(1:stride:np),q(1:stride:np,j+8),'b>',t(1:stride:np),q(1:stride:np,j+9),'cp',t(1:stride:np),q(1:stride:np,j+10),'k<','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:),labels(j+10,:),labels(j+11,:));

  elseif numToPlot == 10
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-',t,q(:,j+6),'r-',t,q(:,j+7),'g-',t,q(:,j+8),'b-',t,q(:,j+9),'c-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^',t(1:stride:np),q(1:stride:np,j+6),'rd',t(1:stride:np),q(1:stride:np,j+7),'g*',t(1:stride:np),q(1:stride:np,j+8),'b>',t(1:stride:np),q(1:stride:np,j+9),'cp','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:),labels(j+10,:));

  elseif numToPlot == 9
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-',t,q(:,j+6),'b-',t,q(:,j+7),'g-',t,q(:,j+8),'r-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^',t(1:stride:np),q(1:stride:np,j+6),'rd',t(1:stride:np),q(1:stride:np,j+7),'g*',t(1:stride:np),q(1:stride:np,j+8),'b>','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:));

  elseif numToPlot == 8
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-',t,q(:,j+6),'b-',t,q(:,j+7),'g-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^',t(1:stride:np),q(1:stride:np,j+6),'rd',t(1:stride:np),q(1:stride:np,j+7),'g*','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:));

  elseif numToPlot == 7
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-',t,q(:,j+6),'b-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^',t(1:stride:np),q(1:stride:np,j+6),'rd','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:));

  elseif numToPlot == 6
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-',t,q(:,j+5),'y-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko',t(1:stride:np),q(1:stride:np,j+5),'y^','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:));

  elseif numToPlot == 5
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<',t(1:stride:np),q(1:stride:np,j+4),'ko','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:));

  elseif numToPlot == 4 
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-',t,q(:,j+3),'c-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs',t(1:stride:np),q(1:stride:np,j+3),'c<','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:));

  elseif numToPlot == 3 
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-',t,q(:,j+2),'b-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r+',t(1:stride:np),q(1:stride:np,j+1),'gx',t(1:stride:np),q(1:stride:np,j+2),'bs','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:));

  elseif numToPlot==2 
    plot(t,q(:,j),'r-',t,q(:,j+1),'g-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r-+',t(1:stride:np),q(1:stride:np,j+1),'g-x','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:),labels(j+2,:));

  else
    plot(t,q(:,j),'r-','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold on;
    plot(t(1:stride:np),q(1:stride:np,j),'r-+','LineWidth',lineWidth,'MarkerSize',markerSize);
    hold off;
    legend(labels(j+1,:));
  end;

  xlabel('t');                      % add axis labels and plot title
  % ylabel('temperature (degrees F)');
  if( size(titleName,1) ~= 0 )
    title(titleName);
  else
    title(headers(2,:));
  end;
  grid on;
  axis([xMin,xMax,yMin,yMax]);


  if i < nplot
    pause;
  end; 
  j=j+numPerPlot;

  if( size(plotName,1) ~= 0 )
    if( nplot == 0 )
      fName = sprintf('%s.eps',plotName);
    else
      fName = sprintf('%s%d.eps',plotName,i);
    end;
    fprintf(1,' Save the plot named = [%s]\n',fName);
    print('-depsc2',fName);
  end;
end;


