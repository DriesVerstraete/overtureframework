%   plotProbes.m 
%     Usage: plotProbes [fileName] [numVarsPerPlot] [plotName]
%
%  Example: plotProbes probeFile.dat 6
%  A Matlab script to plot probes results generated by one of the CG solvers
%
%    t  x  y z  q1 q2 ...

function plotProbes ( varargin )

 set(gca,'FontSize',14);

 for i = 1 : nargin
      fprintf ( 1, '  Argument %d is %s\n', i, varargin{i} );
 end

 fileName = 'probeFile.dat';
 plotName = 'probeFile';
 if nargin>0
   fileName = varargin{1};
 end;
 maxPerPlot=11;  % this is the maximum number of components we can plot at one time
 numPerPlot=5;   % this is the number of components to plot on each plot 
 lineWidth=2;
 markerSize=8; 
 if nargin>1 
   numPerPlot = varargin{2};
   numPerPlot=str2num(numPerPlot);  % assume we are NOT be called as a function plotProbes('...',.) then numPerPlot is a string
   fprintf(1,' convert numPerPlot -> %d\n',numPerPlot);
   numPerPlot = min(numPerPlot,maxPerPlot);
 end;
 if nargin>2
   plotName= varargin{3};
 end;

%  Read data: 
[headers,labels,t,q] = readProbeFile(fileName);

[numHeaders,headerLen] = size(headers);
fprintf('Header comments:\n');
for i=1:numHeaders
  fprintf('%s\n',headers(i,:));
end;

% labels


[numColumns,columnLen] = size(labels);
numVars=numColumns-1;   % t is not counted
fprintf(1,'There are %d solution variables in the data.\n',numVars);

x = q(:,1);
y = q(:,2);
z = q(:,3);

xMin = min(x);  xMax = max(x);
yMin = min(y);  yMax = max(y);
zMin = min(z);  zMax = max(z);

fixedPosition=0;
if xMin==xMax && yMin==yMax && zMin==zMax 
  fixedPosition=1;
  fprintf(1,' Probe is located at the fixed position (x,y,z)=(%9.3e,%9.3e,%9.3e)\n',xMin,yMin,zMin);
end;

j=1;
if fixedPosition==1 
  j=j+3;  % do not plot (x,y,z) in this case 
end;
nplot = floor( (numVars+numPerPlot-j)/numPerPlot );
for i=1:nplot

  numToPlot=min(numPerPlot,numVars-j+1);
  if numToPlot == 11
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-',t,q(:,j+6),'r-d',t,q(:,j+7),'g-*',t,q(:,j+8),'b-d',t,q(:,j+9),'c-p',t,q(:,j+10),'k->','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:),labels(j+10,:),labels(j+11,:));
  elseif numToPlot == 10
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-',t,q(:,j+6),'r-d',t,q(:,j+7),'g-*',t,q(:,j+8),'b-d',t,q(:,j+9),'c-p','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:),labels(j+10,:));
  elseif numToPlot == 9
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-',t,q(:,j+6),'b-d',t,q(:,j+7),'g-*',t,q(:,j+8),'r-d','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:),labels(j+9,:));
  elseif numToPlot == 8
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-',t,q(:,j+6),'b-d',t,q(:,j+7),'g-*','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:),labels(j+8,:));
  elseif numToPlot == 7
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-',t,q(:,j+6),'b-d','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:),labels(j+7,:));
  elseif numToPlot == 6
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o',t,q(:,j+5),'y-','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:),labels(j+6,:));
  elseif numToPlot == 5
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-',t,q(:,j+4),'k-o','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:),labels(j+5,:));
  elseif numToPlot == 4 
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-',t,q(:,j+3),'c-','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:),labels(j+4,:));
  elseif numToPlot == 3 
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x',t,q(:,j+2),'b-','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:),labels(j+3,:));
  elseif numToPlot==2 
    plot(t,q(:,j),'r-+',t,q(:,j+1),'g-x','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:),labels(j+2,:));
  else
    plot(t,q(:,j),'r-+','LineWidth',lineWidth,'MarkerSize',markerSize);
    legend(labels(j+1,:));
  end;

  xlabel(labels(1,:));                      % add axis labels and plot title
  % ylabel('temperature (degrees F)');
  title(headers(2,:));
  grid on;
  if i < nplot
    pause;
  end; 
  j=j+numPerPlot;

  if 1==1 
    fName = sprintf('%s%d.eps',plotName,i);
    fprintf(1,' Save the plot named = [%s]\n',fName);
    print('-depsc2',fName);
  end;
end;


