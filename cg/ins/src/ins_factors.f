! This file automatically generated from ins_factors.bf with bpp.
! -*- mode: fortran -*- !
! This file was generated by weights.maple


! This next macro will evaluate parametric derivatives and save in temporaries
!   u is the variable name, v is the prefix for the temporaries, e.g.
!   For example, lines of the following form will be generated:
!      v = u(i1,i2,i3) 
!      vr = ur4(i1,i2,i3) 

! This next macro will evaluate parametric derivatives and save in temporaries
!   u is the variable name, v is the prefix for the temporaries, e.g.
!   For example, lines of the following form will be generated:
!      v = u(i1,i2,i3) 
!      vr = ur4(i1,i2,i3) 

! This next macro will evaluate parametric derivatives and save in temporaries
!   u is the variable name, v is the prefix for the temporaries, e.g.
!   For example, lines of the following form will be generated:
!      v = u(i1,i2,i3) 
!      vr = ur4(i1,i2,i3) 

! This next macro will evaluate x,y,z derivatives using temporaries already computed 
!   u1 is the variable name, aj the jaocbian name and v is the prefix for the temporaries
!   For example, lines of the following form will be generated:
!      getDuDx2(u1,aj,vx) 
!      getDuDxy2(u1,aj,vxy) 
!      getDuDxxx2(u1,aj,vxxx) 

! This next macro will evaluate x,y,z derivatives using temporaries already computed 
!   u1 is the variable name, aj the jaocbian name and v is the prefix for the temporaries
!   For example, lines of the following form will be generated:
!      getDuDx2(u1,aj,vx) 
!      getDuDxy2(u1,aj,vxy) 
!      getDuDxxx2(u1,aj,vxxx) 

! This next macro will evaluate x,y,z derivatives using temporaries already computed 
!   u1 is the variable name, aj the jaocbian name and v is the prefix for the temporaries
!   For example, lines of the following form will be generated:
!      getDuDx2(u1,aj,vx) 
!      getDuDxy2(u1,aj,vxy) 
!      getDuDxxx2(u1,aj,vxxx) 

! This next macro will evaluate x,y,z derivatives of the jacobian 

! u = jacobian name (rsxy), v=prefix for derivatives: vrxr, vrys, 


! ****** Dimension 2 ******
 ! getDuDx2 operation count     : additions+2*multiplications+assignments
 ! getDuDx2 optimization savings: -assignments
 ! getDuDy2 operation count     : additions+2*multiplications+assignments
 ! getDuDy2 optimization savings: -assignments
 ! getDuDxx2 operation count     : 9*multiplications+3*assignments+4*additions
 ! getDuDxx2 optimization savings: -3*assignments
 ! getDuDxy2 operation count     : 5*additions+9*multiplications+assignments
 ! getDuDxy2 optimization savings: -assignments
 ! getDuDyy2 operation count     : 9*multiplications+3*assignments+4*additions
 ! getDuDyy2 optimization savings: -3*assignments
 ! getDuDxxx2 operation count     : 25*multiplications+3*assignments+9*additions
 ! getDuDxxx2 optimization savings: 2*multiplications-3*assignments
 ! getDuDxxy2 operation count     : 33*multiplications+3*assignments+15*additions
 ! getDuDxxy2 optimization savings: 2*multiplications-3*assignments
 ! getDuDxyy2 operation count     : 32*multiplications+5*assignments+16*additions
 ! getDuDxyy2 optimization savings: additions+3*multiplications-5*assignments
 ! getDuDyyy2 operation count     : 25*multiplications+3*assignments+9*additions
 ! getDuDyyy2 optimization savings: 2*multiplications-3*assignments
 ! getDuDxxxx2 operation count     : 59*multiplications+11*assignments+24*additions
 ! getDuDxxxx2 optimization savings: 3*additions+23*multiplications-11*assignments
 ! getDuDxxxy2 operation count     : 86*multiplications+11*assignments+37*additions
 ! getDuDxxxy2 optimization savings: 2*additions+24*multiplications-11*assignments
 ! getDuDxxyy2 operation count     : 105*multiplications+16*assignments+50*additions
 ! getDuDxxyy2 optimization savings: 8*additions+37*multiplications-16*assignments
 ! getDuDxyyy2 operation count     : 89*multiplications+21*assignments+52*additions
 ! getDuDxyyy2 optimization savings: 17*additions+47*multiplications-21*assignments
 ! getDuDyyyy2 operation count     : 59*multiplications+11*assignments+24*additions
 ! getDuDyyyy2 optimization savings: 3*additions+23*multiplications-11*assignments
 ! getDuDxxxxx2 operation count     : 154*multiplications+43*assignments+82*additions
 ! getDuDxxxxx2 optimization savings: 39*additions+196*multiplications-43*assignments
 ! getDuDxxxxy2 operation count     : 207*multiplications+42*assignments+102*additions
 ! getDuDxxxxy2 optimization savings: 45*additions+211*multiplications-42*assignments
 ! getDuDxxxyy2 operation count     : 249*multiplications+55*assignments+126*additions
 ! getDuDxxxyy2 optimization savings: 49*additions+241*multiplications-55*assignments
 ! getDuDxxyyy2 operation count     : 239*multiplications+67*assignments+150*additions
 ! getDuDxxyyy2 optimization savings: 97*additions+363*multiplications-67*assignments
 ! getDuDxyyyy2 operation count     : 215*multiplications+73*assignments+150*additions
 ! getDuDxyyyy2 optimization savings: 153*additions+371*multiplications-73*assignments
 ! getDuDyyyyy2 operation count     : 154*multiplications+43*assignments+82*additions
 ! getDuDyyyyy2 optimization savings: 39*additions+196*multiplications-43*assignments
 ! getDuDxxxxxx2 operation count     : 364*multiplications+134*assignments+258*additions
 ! getDuDxxxxxx2 optimization savings: 345*additions+1337*multiplications-134*assignments
 ! getDuDxxxxxy2 operation count     : 525*multiplications+149*assignments+326*additions
 ! getDuDxxxxxy2 optimization savings: 409*additions+1502*multiplications-149*assignments
 ! getDuDxxxxyy2 operation count     : 543*multiplications+173*assignments+339*additions
 ! getDuDxxxxyy2 optimization savings: 415*additions+1552*multiplications-173*assignments
 ! getDuDxxxyyy2 operation count     : 510*multiplications+172*assignments+360*additions
 ! getDuDxxxyyy2 optimization savings: 463*additions+1755*multiplications-172*assignments
 ! getDuDxxyyyy2 operation count     : 482*multiplications+184*assignments+391*additions
 ! getDuDxxyyyy2 optimization savings: 731*additions+2241*multiplications-184*assignments
 ! getDuDxyyyyy2 operation count     : 456*multiplications+188*assignments+384*additions
 ! getDuDxyyyyy2 optimization savings: 1019*additions+2233*multiplications-188*assignments
 ! getDuDyyyyyy2 operation count     : 366*multiplications+133*assignments+258*additions
 ! getDuDyyyyyy2 optimization savings: 345*additions+1335*multiplications-133*assignments


! ****** Dimension 3 ******
 ! getDuDx3 operation count     : 2*additions+3*multiplications+assignments
 ! getDuDx3 optimization savings: -assignments
 ! getDuDy3 operation count     : 2*additions+3*multiplications+assignments
 ! getDuDy3 optimization savings: -assignments
 ! getDuDz3 operation count     : 2*additions+3*multiplications+assignments
 ! getDuDz3 optimization savings: -assignments
 ! getDuDxx3 operation count     : 18*multiplications+4*assignments+8*additions
 ! getDuDxx3 optimization savings: -4*assignments
 ! getDuDxy3 operation count     : 11*additions+18*multiplications+assignments
 ! getDuDxy3 optimization savings: -assignments
 ! getDuDyy3 operation count     : 18*multiplications+4*assignments+8*additions
 ! getDuDyy3 optimization savings: -4*assignments
 ! getDuDxz3 operation count     : 11*additions+18*multiplications+assignments
 ! getDuDxz3 optimization savings: -assignments
 ! getDuDyz3 operation count     : 11*additions+18*multiplications+assignments
 ! getDuDyz3 optimization savings: -assignments
 ! getDuDzz3 operation count     : 18*multiplications+4*assignments+8*additions
 ! getDuDzz3 optimization savings: -4*assignments
 ! getDuDxxx3 operation count     : 58*multiplications+4*assignments+21*additions
 ! getDuDxxx3 optimization savings: 6*multiplications-4*assignments
 ! getDuDxxy3 operation count     : 82*multiplications+7*assignments+38*additions
 ! getDuDxxy3 optimization savings: 9*multiplications-7*assignments
 ! getDuDxyy3 operation count     : 76*multiplications+10*assignments+41*additions
 ! getDuDxyy3 optimization savings: 6*additions+15*multiplications-10*assignments
 ! getDuDyyy3 operation count     : 58*multiplications+4*assignments+21*additions
 ! getDuDyyy3 optimization savings: 6*multiplications-4*assignments
 ! getDuDxxz3 operation count     : 82*multiplications+7*assignments+38*additions
 ! getDuDxxz3 optimization savings: 9*multiplications-7*assignments
 ! getDuDxyz3 operation count     : 50*additions+79*multiplications+4*assignments
 ! getDuDxyz3 optimization savings: 6*additions+12*multiplications-4*assignments
 ! getDuDyyz3 operation count     : 82*multiplications+7*assignments+38*additions
 ! getDuDyyz3 optimization savings: 9*multiplications-7*assignments
 ! getDuDxzz3 operation count     : 76*multiplications+10*assignments+41*additions
 ! getDuDxzz3 optimization savings: 6*additions+15*multiplications-10*assignments
 ! getDuDyzz3 operation count     : 76*multiplications+10*assignments+41*additions
 ! getDuDyzz3 optimization savings: 6*additions+15*multiplications-10*assignments
 ! getDuDzzz3 operation count     : 58*multiplications+4*assignments+21*additions
 ! getDuDzzz3 optimization savings: 6*multiplications-4*assignments
 ! getDuDxxxx3 operation count     : 161*multiplications+29*assignments+71*additions
 ! getDuDxxxx3 optimization savings: 15*additions+98*multiplications-29*assignments
 ! getDuDxxxy3 operation count     : 246*multiplications+28*assignments+110*additions
 ! getDuDxxxy3 optimization savings: 12*additions+109*multiplications-28*assignments
 ! getDuDxxyy3 operation count     : 280*multiplications+43*assignments+142*additions
 ! getDuDxxyy3 optimization savings: 46*additions+192*multiplications-43*assignments
 ! getDuDxyyy3 operation count     : 235*multiplications+49*assignments+148*additions
 ! getDuDxyyy3 optimization savings: 97*additions+225*multiplications-49*assignments
 ! getDuDyyyy3 operation count     : 161*multiplications+29*assignments+71*additions
 ! getDuDyyyy3 optimization savings: 15*additions+98*multiplications-29*assignments
 ! getDuDxxxz3 operation count     : 247*multiplications+27*assignments+110*additions
 ! getDuDxxxz3 optimization savings: 12*additions+108*multiplications-27*assignments
 ! getDuDxxyz3 operation count     : 292*multiplications+31*assignments+154*additions
 ! getDuDxxyz3 optimization savings: 46*additions+186*multiplications-31*assignments
 ! getDuDxyyz3 operation count     : 271*multiplications+166*additions+31*assignments
 ! getDuDxyyz3 optimization savings: 97*additions+207*multiplications-31*assignments
 ! getDuDyyyz3 operation count     : 247*multiplications+27*assignments+110*additions
 ! getDuDyyyz3 optimization savings: 12*additions+108*multiplications-27*assignments
 ! getDuDxxzz3 operation count     : 277*multiplications+46*assignments+142*additions
 ! getDuDxxzz3 optimization savings: 46*additions+195*multiplications-46*assignments
 ! getDuDxyzz3 operation count     : 256*multiplications+52*assignments+175*additions
 ! getDuDxyzz3 optimization savings: 115*additions+222*multiplications-52*assignments
 ! getDuDyyzz3 operation count     : 277*multiplications+46*assignments+142*additions
 ! getDuDyyzz3 optimization savings: 46*additions+195*multiplications-46*assignments
 ! getDuDxzzz3 operation count     : 235*multiplications+49*assignments+148*additions
 ! getDuDxzzz3 optimization savings: 97*additions+225*multiplications-49*assignments
 ! getDuDyzzz3 operation count     : 235*multiplications+49*assignments+148*additions
 ! getDuDyzzz3 optimization savings: 97*additions+225*multiplications-49*assignments
 ! getDuDzzzz3 operation count     : 161*multiplications+29*assignments+71*additions
 ! getDuDzzzz3 optimization savings: 15*additions+98*multiplications-29*assignments
 ! getDuDxxxxx3 operation count     : 480*multiplications+117*assignments+279*additions
 ! getDuDxxxxx3 optimization savings: 239*additions+1000*multiplications-117*assignments
 ! getDuDxxxxy3 operation count     : 644*multiplications+120*assignments+345*additions
 ! getDuDxxxxy3 optimization savings: 266*additions+1103*multiplications-120*assignments
 ! getDuDxxxyy3 operation count     : 402*additions+732*multiplications+150*assignments
 ! getDuDxxxyy3 optimization savings: 311*additions+1309*multiplications-150*assignments
 ! getDuDxxyyy3 operation count     : 685*multiplications+177*assignments+458*additions
 ! getDuDxxyyy3 optimization savings: 576*additions+1896*multiplications-177*assignments
 ! getDuDxyyyy3 operation count     : 619*multiplications+186*assignments+461*additions
 ! getDuDxyyyy3 optimization savings: 924*additions+1926*multiplications-186*assignments
 ! getDuDyyyyy3 operation count     : 479*multiplications+117*assignments+279*additions
 ! getDuDyyyyy3 optimization savings: 239*additions+1001*multiplications-117*assignments
 ! getDuDxxxxz3 operation count     : 646*multiplications+120*assignments+345*additions
 ! getDuDxxxxz3 optimization savings: 266*additions+1101*multiplications-120*assignments
 ! getDuDxxxyz3 operation count     : 833*multiplications+116*assignments+441*additions
 ! getDuDxxxyz3 optimization savings: 323*additions+1298*multiplications-116*assignments
 ! getDuDxxyyz3 operation count     : 889*multiplications+138*assignments+512*additions
 ! getDuDxxyyz3 optimization savings: 594*additions+1827*multiplications-138*assignments
 ! getDuDxyyyz3 operation count     : 754*multiplications+156*assignments+536*additions
 ! getDuDxyyyz3 optimization savings: 984*additions+1908*multiplications-156*assignments
 ! getDuDyyyyz3 operation count     : 648*multiplications+119*assignments+345*additions
 ! getDuDyyyyz3 optimization savings: 266*additions+1099*multiplications-119*assignments
 ! getDuDxxxzz3 operation count     : 730*multiplications+149*assignments+402*additions
 ! getDuDxxxzz3 optimization savings: 311*additions+1311*multiplications-149*assignments
 ! getDuDxxyzz3 operation count     : 754*multiplications+183*assignments+500*additions
 ! getDuDxxyzz3 optimization savings: 606*additions+1899*multiplications-183*assignments
 ! getDuDxyyzz3 operation count     : 524*additions+727*multiplications+174*assignments
 ! getDuDxyyzz3 optimization savings: 978*additions+1953*multiplications-174*assignments
 ! getDuDyyyzz3 operation count     : 730*multiplications+149*assignments+402*additions
 ! getDuDyyyzz3 optimization savings: 311*additions+1311*multiplications-149*assignments
 ! getDuDxxzzz3 operation count     : 679*multiplications+183*assignments+458*additions
 ! getDuDxxzzz3 optimization savings: 576*additions+1902*multiplications-183*assignments
 ! getDuDxyzzz3 operation count     : 658*multiplications+195*assignments+533*additions
 ! getDuDxyzzz3 optimization savings: 1095*additions+2004*multiplications-195*assignments
 ! getDuDyyzzz3 operation count     : 679*multiplications+183*assignments+458*additions
 ! getDuDyyzzz3 optimization savings: 576*additions+1902*multiplications-183*assignments
 ! getDuDxzzzz3 operation count     : 619*multiplications+186*assignments+461*additions
 ! getDuDxzzzz3 optimization savings: 924*additions+1926*multiplications-186*assignments
 ! getDuDyzzzz3 operation count     : 619*multiplications+186*assignments+461*additions
 ! getDuDyzzzz3 optimization savings: 924*additions+1926*multiplications-186*assignments
 ! getDuDzzzzz3 operation count     : 481*multiplications+115*assignments+279*additions
 ! getDuDzzzzz3 optimization savings: 239*additions+999*multiplications-115*assignments
 ! getDuDxxxxxx3 operation count     : 1232*multiplications+380*assignments+916*additions
 ! getDuDxxxxxx3 optimization savings: 2414*additions+8130*multiplications-380*assignments
 ! getDuDxxxxxy3 operation count     : 1742*multiplications+419*assignments+1142*additions
 ! getDuDxxxxxy3 optimization savings: 2790*additions+9123*multiplications-419*assignments
 ! getDuDxxxxyy3 operation count     : 1728*multiplications+492*assignments+1158*additions
 ! getDuDxxxxyy3 optimization savings: 2837*additions+9455*multiplications-492*assignments
 ! getDuDxxxyyy3 operation count     : 1194*additions+1600*multiplications+481*assignments
 ! getDuDxxxyyy3 optimization savings: 3128*additions+10552*multiplications-481*assignments
 ! getDuDxxyyyy3 operation count     : 1265*additions+1496*multiplications+508*assignments
 ! getDuDxxyyyy3 optimization savings: 4761*additions+13467*multiplications-508*assignments
 ! getDuDxyyyyy3 operation count     : 1421*multiplications+505*assignments+1253*additions
 ! getDuDxyyyyy3 optimization savings: 6954*additions+13503*multiplications-505*assignments
 ! getDuDyyyyyy3 operation count     : 1230*multiplications+381*assignments+916*additions
 ! getDuDyyyyyy3 optimization savings: 2414*additions+8132*multiplications-381*assignments
 ! getDuDxxxxxz3 operation count     : 1741*multiplications+417*assignments+1142*additions
 ! getDuDxxxxxz3 optimization savings: 2790*additions+9124*multiplications-417*assignments
 ! getDuDxxxxyz3 operation count     : 2098*multiplications+378*assignments+1289*additions
 ! getDuDxxxxyz3 optimization savings: 3120*additions+10006*multiplications-378*assignments
 ! getDuDxxxyyz3 operation count     : 2226*multiplications+460*assignments+1406*additions
 ! getDuDxxxyyz3 optimization savings: 3465*additions+11159*multiplications-460*assignments
 ! getDuDxxyyyz3 operation count     : 2063*multiplications+503*assignments+1531*additions
 ! getDuDxxyyyz3 optimization savings: 5227*additions+14391*multiplications-503*assignments
 ! getDuDxyyyyz3 operation count     : 1552*additions+1886*multiplications+521*assignments
 ! getDuDxyyyyz3 optimization savings: 7924*additions+14415*multiplications-521*assignments
 ! getDuDyyyyyz3 operation count     : 1745*multiplications+412*assignments+1142*additions
 ! getDuDyyyyyz3 optimization savings: 2790*additions+9120*multiplications-412*assignments
 ! getDuDxxxxzz3 operation count     : 1733*multiplications+489*assignments+1158*additions
 ! getDuDxxxxzz3 optimization savings: 2837*additions+9450*multiplications-489*assignments
 ! getDuDxxxyzz3 operation count     : 1971*multiplications+514*assignments+1338*additions
 ! getDuDxxxyzz3 optimization savings: 3398*additions+11018*multiplications-514*assignments
 ! getDuDxxyyzz3 operation count     : 2018*multiplications+554*assignments+1463*additions
 ! getDuDxxyyzz3 optimization savings: 5157*additions+14124*multiplications-554*assignments
 ! getDuDxyyyzz3 operation count     : 1502*additions+1835*multiplications+572*assignments
 ! getDuDxyyyzz3 optimization savings: 7830*additions+14196*multiplications-572*assignments
 ! getDuDyyyyzz3 operation count     : 1735*multiplications+490*assignments+1158*additions
 ! getDuDyyyyzz3 optimization savings: 2837*additions+9448*multiplications-490*assignments
 ! getDuDxxxzzz3 operation count     : 1595*multiplications+477*assignments+1194*additions
 ! getDuDxxxzzz3 optimization savings: 3128*additions+10557*multiplications-477*assignments
 ! getDuDxxyzzz3 operation count     : 1631*multiplications+526*assignments+1373*additions
 ! getDuDxxyzzz3 optimization savings: 5079*additions+13824*multiplications-526*assignments
 ! getDuDxyyzzz3 operation count     : 1415*additions+1610*multiplications+511*assignments
 ! getDuDxyyzzz3 optimization savings: 7512*additions+14169*multiplications-511*assignments
 ! getDuDyyyzzz3 operation count     : 1595*multiplications+477*assignments+1194*additions
 ! getDuDyyyzzz3 optimization savings: 3128*additions+10557*multiplications-477*assignments
 ! getDuDxxzzzz3 operation count     : 1487*multiplications+517*assignments+1265*additions
 ! getDuDxxzzzz3 optimization savings: 4761*additions+13476*multiplications-517*assignments
 ! getDuDxyzzzz3 operation count     : 1478*multiplications+538*assignments+1406*additions
 ! getDuDxyzzzz3 optimization savings: 8178*additions+14193*multiplications-538*assignments
 ! getDuDyyzzzz3 operation count     : 1487*multiplications+517*assignments+1265*additions
 ! getDuDyyzzzz3 optimization savings: 4761*additions+13476*multiplications-517*assignments
 ! getDuDxzzzzz3 operation count     : 1421*multiplications+505*assignments+1253*additions
 ! getDuDxzzzzz3 optimization savings: 6954*additions+13503*multiplications-505*assignments
 ! getDuDyzzzzz3 operation count     : 1421*multiplications+505*assignments+1253*additions
 ! getDuDyzzzzz3 optimization savings: 6954*additions+13503*multiplications-505*assignments
 ! getDuDzzzzzz3 operation count     : 1232*multiplications+382*assignments+916*additions
 ! getDuDzzzzzz3 optimization savings: 2414*additions+8130*multiplications-382*assignments

! defineParametricDerivativeMacros(u,dr,dx,DIM,ORDER,COMPONENTS,MAXDERIV)
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************

      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************
      ! *************** 0 components *************
      ! *************** 1 components *************
      ! *************** 2 components *************











!! second order accurate, first derivative, forward difference

!! second order accurate, first derivative, centered difference

!! second order accurate, first derivative, backward difference

!! fourth order accurate first derivative, forward difference at 1
!! 1----2----3----4----5

!! fourth order accurate, first derivative, centered difference

!! fourth order accurate first derivative, backward difference at 1
!! 5----4----3----2----1






! *wdh* 2012/04/29 if tc=-1 then invalid read can occur in bcData(...)
!c#defineMacro IS_NEUMANN(SIDE,AXIS) (bc(SIDE,AXIS).eq.neumannBoundaryCondition).or.(bc(SIDE,AXIS).eq.outflow).or.(bc(SIDE,AXIS).eq.slipWall .and. AXIS.ne.(cc-uc))

!! .or. bc(SIDE,AXIS).eq.outflow)




      subroutine get_os_op_coeffs(hw,nder,side,order,type,P,D)
      implicit none

      integer nder,side,order,type,hw
      double precision P(0:*),D(0:*)

      double precision alpha,beta,a,b ! correspond to Lele's notation
            integer compact,finite_difference
            parameter(finite_difference=0,compact=1)
            integer solve_rhs,solve_lhs,get_explicit
            parameter(solve_rhs=0,solve_lhs=1,get_explicit=2)
            integer max_width,half_width
            parameter(max_width=5,half_width=2)
            integer max_dim
            parameter(max_dim=3)
            integer pdeModel,standardModel,BoussinesqModel,
     & viscoPlasticModel,twoPhaseFlowModel
            parameter( standardModel=0,BoussinesqModel=1,
     & viscoPlasticModel=2,twoPhaseFlowModel=3 )
            integer noSlipWall, inflowWithVelocityGiven, slipWall, 
     & outflow, convectiveOutflow, tractionFree, inflowWithPandTV, 
     & dirichletBoundaryCondition, symmetry, axisymmetric, 
     & interfaceBoundaryCondition,neumannBoundaryCondition, 
     & parallelbc, periodicbc
            parameter( noSlipWall=1,inflowWithVelocityGiven=2,
     & slipWall=4, outflow=5,convectiveOutflow=14,tractionFree=15, 
     & inflowWithPandTV=3, dirichletBoundaryCondition=12, symmetry=11,
     & axisymmetric=13,interfaceBoundaryCondition=17,
     & neumannBoundaryCondition=18,parallelbc=-31415,periodicbc=-1 )
      integer i

      do i = 0,2*hw
         P(i) = 0d0
         D(i) = 0d0
      enddo

      if ( nder.eq.1 ) then
         if ( type.eq.compact ) then
            if ( order.eq. 2 ) then
               if (side.eq.0) then
                  P(0) = 1d0
                  P(1) = 1d0
                  D(0) = -2d0
                  D(1) =  2d0
               else
                  P(2*hw)   = 1d0
                  P(2*hw-1) = 1d0
                  D(2*hw)   = 2d0
                  D(2*hw-1) = -2d0
               endif
            else if ( order.eq.4 .or. order.eq.6) then
!!! lower order accurate for 6th!!!
               if ( side.eq.0 ) then
                  D(0) = -0.17e2 / 0.6e1
                  D(1) = 0.3e1 / 0.2e1
                  D(2) = 0.3e1 / 0.2e1
                  D(3) = -0.1e1 / 0.6e1
                  D(4) = 0.0e0
                  P(0) = 1d0
                  P(1) = 3d0
               else
                  D(2*hw) =  0.17e2 / 0.6e1
                  D(2*hw-1) = -0.3e1 / 0.2e1
                  D(2*hw-2) = -0.3e1 / 0.2e1
                  D(2*hw-3)   = 0.1e1 / 0.6e1
                  P(2*hw)   = 1d0
                  P(2*hw-1) = 3d0
               endif
            else ! order .gt. 6
               stop 99502
            endif
         else ! type .ne. compact
            stop 99501
         endif
      else !nder .ne.1
         stop 99500
      endif

      return
      end

      subroutine get_op_coeffs(hw,nder,order,type,P,D)
      implicit none

      integer nder,order,type,hw
      double precision P(-hw:*),D(-hw:*)

      double precision alpha,beta,a,b ! correspond to Lele's notation
            integer compact,finite_difference
            parameter(finite_difference=0,compact=1)
            integer solve_rhs,solve_lhs,get_explicit
            parameter(solve_rhs=0,solve_lhs=1,get_explicit=2)
            integer max_width,half_width
            parameter(max_width=5,half_width=2)
            integer max_dim
            parameter(max_dim=3)
            integer pdeModel,standardModel,BoussinesqModel,
     & viscoPlasticModel,twoPhaseFlowModel
            parameter( standardModel=0,BoussinesqModel=1,
     & viscoPlasticModel=2,twoPhaseFlowModel=3 )
            integer noSlipWall, inflowWithVelocityGiven, slipWall, 
     & outflow, convectiveOutflow, tractionFree, inflowWithPandTV, 
     & dirichletBoundaryCondition, symmetry, axisymmetric, 
     & interfaceBoundaryCondition,neumannBoundaryCondition, 
     & parallelbc, periodicbc
            parameter( noSlipWall=1,inflowWithVelocityGiven=2,
     & slipWall=4, outflow=5,convectiveOutflow=14,tractionFree=15, 
     & inflowWithPandTV=3, dirichletBoundaryCondition=12, symmetry=11,
     & axisymmetric=13,interfaceBoundaryCondition=17,
     & neumannBoundaryCondition=18,parallelbc=-31415,periodicbc=-1 )

      integer i

      alpha = 0d0
      beta  = 0d0
      a = 0d0
      b = 0d0
      do i=-hw,hw
         P(i) = 0d0
         D(i) = 0d0
      end do

      if ( type.eq.finite_difference ) then

         P(0) = 1d0
         if ( order.eq.2 ) then
            if ( nder.eq.1 ) then
               D(-1) = -0.5d0
               D( 0) =  0.0d0
               D( 1) =  0.5d0
            else if ( nder.eq.2 ) then
               D(-1) =  1d0
               D( 0) = -2d0
               D( 1) =  1d0
            else
               stop 99000
            endif ! nder
         else if (order.ge.4) then
            if ( nder.eq.1 ) then
               D(-2) =  1d0/12d0
               D(-1) = -2d0/3d0
               D( 0) =  0d0
               D( 1) =  2d0/3d0
               D( 2) = -1d0/12d0
            else if ( nder.eq.2 ) then
               D(-2) = -1d0 /12d0
               D(-1) =  4d0 /3d0
               D( 0) = -15d0/6d0
               D( 1) =  4d0 /3d0
               D( 2) = -1d0 /12d0
            else
               stop 99001
            endif ! nder
         else
            stop 99002
         endif ! order

      else if (type.eq.compact) then

         if ( order.eq.2 ) then
            ! b = alpha = beta = 0
            if ( nder.eq.1 .or. nder.eq.2 ) then
               a = 1d0
            else
               stop 99003
            endif ! nder
         else if (order.eq.4) then
            if ( nder.eq.1 ) then
               alpha = 0.25d0
               a = 2d0*(alpha + 2d0)/3d0
            else if ( nder.eq.2 ) then
               alpha = 0.1d0
               a = 4d0*(1d0-alpha)/3d0
            else
               stop 99004
            endif ! nder
         else if (order.eq.6) then
            if ( nder.eq.1 ) then
               alpha = 1d0/3d0
               a = 14d0/9d0
               b = 1d0/9d0
            else if ( nder.eq.2 ) then
               alpha = 2d0/11d0
               a = 12d0/11d0
               b = 3d0/11d0
            else
               stop 99005
            endif               ! nder
         else if (order.eq.8) then
            if ( nder.eq.1 ) then
               alpha = 4d0/9d0
               beta = 1d0/36d0
               a = 40d0/27d0
               b = 25d0/54d0
            else if ( nder.eq.2 ) then
               alpha = 344d0/1179d0
               beta  = (38d0*alpha-9d0)/214d0
               a = (696d0 - 1191d0*alpha)/428d0
               b = (2454d0*alpha - 294d0)/535d0
            else
               stop 99006
            endif               ! nder
         else
            stop 99007
         endif ! order

         P(-2) = beta
         P(-1) = alpha
         P( 0) = 1d0
         P( 1) = alpha
         P( 2) = beta

         if ( nder.eq.1 ) then
            D(-2) = -b/4d0
            D(-1) = -a/2d0
            D( 0) =  0d0
            D( 1) =  a/2d0
            D( 2) =  b/4d0
         else
            D(-2) =  b/4d0
            D(-1) =  a
            D( 0) =  -2d0*( b/4d0 + a )
            D( 1) =  a
            D( 2) =  b/4d0
         endif

      else ! unknown difference type
         stop 99008
      endif ! type

      return
      end

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! subroutine ins_rfactor
      subroutine ins_rfactor(nd,nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,nd4a,
     & nd4b,mask, rsxy, u, ul, gv, bc, boundaryCondition, ndbcd1a,
     & ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,ndbcd4b,bcData,
     &  ipar, rpar, pdb, mode, dir, cc,dl2,dl1,d,du1,du2, rhs, ierr )
!     Incompressible Navier Stokes factor for an approximate factorization scheme
!     
!     INPUT::
!     nd : number of dimensions
!     mask : mask array
!     rsxy : mapping jacobian matrix
!     u : current solution
!     ul : solution to be used for the rhs
!     gv : grid velocity
!     mode : 0 means solve for the rhs temporary af variable, 1 means solve for the lhs, 2 add any explicit contribution
!     dir  : grid direction for the line sweep
!     cc : component to solve for
!
!     OUTPUT::
!     dl2,dl1,d,du1,du2 : arrays for the tri(penta)-diagonal blocks 
!                 note that dl1, d, and dl2 are used for tri-systems and dl2,dl1,d,du1,du2 for pentas
!                 name naming goes DLO or DUO meaning Diagonal Lower/Upper Offset so that dl2 is the lower diagonal with offset 2
!                 d is the diagonal
!     rhs : right hand side vector for the solve
!     ierr : error flag
!
!
      implicit none
            integer compact,finite_difference
            parameter(finite_difference=0,compact=1)
            integer solve_rhs,solve_lhs,get_explicit
            parameter(solve_rhs=0,solve_lhs=1,get_explicit=2)
            integer max_width,half_width
            parameter(max_width=5,half_width=2)
            integer max_dim
            parameter(max_dim=3)
            integer pdeModel,standardModel,BoussinesqModel,
     & viscoPlasticModel,twoPhaseFlowModel
            parameter( standardModel=0,BoussinesqModel=1,
     & viscoPlasticModel=2,twoPhaseFlowModel=3 )
            integer noSlipWall, inflowWithVelocityGiven, slipWall, 
     & outflow, convectiveOutflow, tractionFree, inflowWithPandTV, 
     & dirichletBoundaryCondition, symmetry, axisymmetric, 
     & interfaceBoundaryCondition,neumannBoundaryCondition, 
     & parallelbc, periodicbc
            parameter( noSlipWall=1,inflowWithVelocityGiven=2,
     & slipWall=4, outflow=5,convectiveOutflow=14,tractionFree=15, 
     & inflowWithPandTV=3, dirichletBoundaryCondition=12, symmetry=11,
     & axisymmetric=13,interfaceBoundaryCondition=17,
     & neumannBoundaryCondition=18,parallelbc=-31415,periodicbc=-1 )
      integer ipar(0:*)
      real rpar(0:*)
      integer nd, n1a,n1b,n2a,n2b,n3a,n3b,nd1a,nd1b,nd2a,nd2b,nd3a,
     & nd3b,nd4a,nd4b
      integer nde,nr1a,nr1b,nr2a,nr2b,nr3a,nr3b
      real u(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real ul(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real dl2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real dl1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real   d(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real rhs(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real gv(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real gvl(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real dw(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
!      real xy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
      real rsxy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1,0:nd-1)
!      real radiusInverse(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer mask(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer bc(0:1,0:2),boundaryCondition(0:1,0:2),indexRange(0:1,
     & 0:2),ierr
      integer ndbcd1a,ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,
     & ndbcd4b
      real bcData(ndbcd1a:ndbcd1b,ndbcd2a:ndbcd2b,ndbcd3a:ndbcd3b,
     & ndbcd4a:ndbcd4b)
      integer mode,dir,cc
      double precision pdb  ! pointer to data base
      !  declareParametricDerivativeVariables(v,DIM)
      !      declareJacobianDerivativeVariables(aj_m2_,3)
      !      declareJacobianDerivativeVariables(aj_m1_,3)
             real aj_rx,aj_rxr,aj_rxs,aj_rxt,aj_rxrr,aj_rxrs,aj_rxss,
     & aj_rxrt,aj_rxst,aj_rxtt,aj_rxrrr,aj_rxrrs,aj_rxrss,aj_rxsss,
     & aj_rxrrt,aj_rxrst,aj_rxsst,aj_rxrtt,aj_rxstt,aj_rxttt,
     & aj_rxrrrr,aj_rxrrrs,aj_rxrrss,aj_rxrsss,aj_rxssss,aj_rxrrrt,
     & aj_rxrrst,aj_rxrsst,aj_rxssst,aj_rxrrtt,aj_rxrstt,aj_rxsstt,
     & aj_rxrttt,aj_rxsttt,aj_rxtttt,aj_rxrrrrr,aj_rxrrrrs,aj_rxrrrss,
     & aj_rxrrsss,aj_rxrssss,aj_rxsssss,aj_rxrrrrt,aj_rxrrrst,
     & aj_rxrrsst,aj_rxrssst,aj_rxsssst,aj_rxrrrtt,aj_rxrrstt,
     & aj_rxrsstt,aj_rxssstt,aj_rxrrttt,aj_rxrsttt,aj_rxssttt,
     & aj_rxrtttt,aj_rxstttt,aj_rxttttt,aj_rxrrrrrr,aj_rxrrrrrs,
     & aj_rxrrrrss,aj_rxrrrsss,aj_rxrrssss,aj_rxrsssss,aj_rxssssss,
     & aj_rxrrrrrt,aj_rxrrrrst,aj_rxrrrsst,aj_rxrrssst,aj_rxrsssst,
     & aj_rxssssst,aj_rxrrrrtt,aj_rxrrrstt,aj_rxrrsstt,aj_rxrssstt,
     & aj_rxsssstt,aj_rxrrrttt,aj_rxrrsttt,aj_rxrssttt,aj_rxsssttt,
     & aj_rxrrtttt,aj_rxrstttt,aj_rxsstttt,aj_rxrttttt,aj_rxsttttt,
     & aj_rxtttttt
             real aj_sx,aj_sxr,aj_sxs,aj_sxt,aj_sxrr,aj_sxrs,aj_sxss,
     & aj_sxrt,aj_sxst,aj_sxtt,aj_sxrrr,aj_sxrrs,aj_sxrss,aj_sxsss,
     & aj_sxrrt,aj_sxrst,aj_sxsst,aj_sxrtt,aj_sxstt,aj_sxttt,
     & aj_sxrrrr,aj_sxrrrs,aj_sxrrss,aj_sxrsss,aj_sxssss,aj_sxrrrt,
     & aj_sxrrst,aj_sxrsst,aj_sxssst,aj_sxrrtt,aj_sxrstt,aj_sxsstt,
     & aj_sxrttt,aj_sxsttt,aj_sxtttt,aj_sxrrrrr,aj_sxrrrrs,aj_sxrrrss,
     & aj_sxrrsss,aj_sxrssss,aj_sxsssss,aj_sxrrrrt,aj_sxrrrst,
     & aj_sxrrsst,aj_sxrssst,aj_sxsssst,aj_sxrrrtt,aj_sxrrstt,
     & aj_sxrsstt,aj_sxssstt,aj_sxrrttt,aj_sxrsttt,aj_sxssttt,
     & aj_sxrtttt,aj_sxstttt,aj_sxttttt,aj_sxrrrrrr,aj_sxrrrrrs,
     & aj_sxrrrrss,aj_sxrrrsss,aj_sxrrssss,aj_sxrsssss,aj_sxssssss,
     & aj_sxrrrrrt,aj_sxrrrrst,aj_sxrrrsst,aj_sxrrssst,aj_sxrsssst,
     & aj_sxssssst,aj_sxrrrrtt,aj_sxrrrstt,aj_sxrrsstt,aj_sxrssstt,
     & aj_sxsssstt,aj_sxrrrttt,aj_sxrrsttt,aj_sxrssttt,aj_sxsssttt,
     & aj_sxrrtttt,aj_sxrstttt,aj_sxsstttt,aj_sxrttttt,aj_sxsttttt,
     & aj_sxtttttt
             real aj_ry,aj_ryr,aj_rys,aj_ryt,aj_ryrr,aj_ryrs,aj_ryss,
     & aj_ryrt,aj_ryst,aj_rytt,aj_ryrrr,aj_ryrrs,aj_ryrss,aj_rysss,
     & aj_ryrrt,aj_ryrst,aj_rysst,aj_ryrtt,aj_rystt,aj_ryttt,
     & aj_ryrrrr,aj_ryrrrs,aj_ryrrss,aj_ryrsss,aj_ryssss,aj_ryrrrt,
     & aj_ryrrst,aj_ryrsst,aj_ryssst,aj_ryrrtt,aj_ryrstt,aj_rysstt,
     & aj_ryrttt,aj_rysttt,aj_rytttt,aj_ryrrrrr,aj_ryrrrrs,aj_ryrrrss,
     & aj_ryrrsss,aj_ryrssss,aj_rysssss,aj_ryrrrrt,aj_ryrrrst,
     & aj_ryrrsst,aj_ryrssst,aj_rysssst,aj_ryrrrtt,aj_ryrrstt,
     & aj_ryrsstt,aj_ryssstt,aj_ryrrttt,aj_ryrsttt,aj_ryssttt,
     & aj_ryrtttt,aj_rystttt,aj_ryttttt,aj_ryrrrrrr,aj_ryrrrrrs,
     & aj_ryrrrrss,aj_ryrrrsss,aj_ryrrssss,aj_ryrsssss,aj_ryssssss,
     & aj_ryrrrrrt,aj_ryrrrrst,aj_ryrrrsst,aj_ryrrssst,aj_ryrsssst,
     & aj_ryssssst,aj_ryrrrrtt,aj_ryrrrstt,aj_ryrrsstt,aj_ryrssstt,
     & aj_rysssstt,aj_ryrrrttt,aj_ryrrsttt,aj_ryrssttt,aj_rysssttt,
     & aj_ryrrtttt,aj_ryrstttt,aj_rysstttt,aj_ryrttttt,aj_rysttttt,
     & aj_rytttttt
             real aj_sy,aj_syr,aj_sys,aj_syt,aj_syrr,aj_syrs,aj_syss,
     & aj_syrt,aj_syst,aj_sytt,aj_syrrr,aj_syrrs,aj_syrss,aj_sysss,
     & aj_syrrt,aj_syrst,aj_sysst,aj_syrtt,aj_systt,aj_syttt,
     & aj_syrrrr,aj_syrrrs,aj_syrrss,aj_syrsss,aj_syssss,aj_syrrrt,
     & aj_syrrst,aj_syrsst,aj_syssst,aj_syrrtt,aj_syrstt,aj_sysstt,
     & aj_syrttt,aj_systtt,aj_sytttt,aj_syrrrrr,aj_syrrrrs,aj_syrrrss,
     & aj_syrrsss,aj_syrssss,aj_sysssss,aj_syrrrrt,aj_syrrrst,
     & aj_syrrsst,aj_syrssst,aj_sysssst,aj_syrrrtt,aj_syrrstt,
     & aj_syrsstt,aj_syssstt,aj_syrrttt,aj_syrsttt,aj_syssttt,
     & aj_syrtttt,aj_systttt,aj_syttttt,aj_syrrrrrr,aj_syrrrrrs,
     & aj_syrrrrss,aj_syrrrsss,aj_syrrssss,aj_syrsssss,aj_syssssss,
     & aj_syrrrrrt,aj_syrrrrst,aj_syrrrsst,aj_syrrssst,aj_syrsssst,
     & aj_syssssst,aj_syrrrrtt,aj_syrrrstt,aj_syrrsstt,aj_syrssstt,
     & aj_sysssstt,aj_syrrrttt,aj_syrrsttt,aj_syrssttt,aj_sysssttt,
     & aj_syrrtttt,aj_syrstttt,aj_sysstttt,aj_syrttttt,aj_systtttt,
     & aj_sytttttt
             real aj_rxx,aj_rxy,aj_rxz,aj_rxxx,aj_rxxy,aj_rxyy,aj_rxxz,
     & aj_rxyz,aj_rxzz,aj_rxxxx,aj_rxxxy,aj_rxxyy,aj_rxyyy,aj_rxxxz,
     & aj_rxxyz,aj_rxyyz,aj_rxxzz,aj_rxyzz,aj_rxzzz,aj_rxxxxx,
     & aj_rxxxxy,aj_rxxxyy,aj_rxxyyy,aj_rxyyyy,aj_rxxxxz,aj_rxxxyz,
     & aj_rxxyyz,aj_rxyyyz,aj_rxxxzz,aj_rxxyzz,aj_rxyyzz,aj_rxxzzz,
     & aj_rxyzzz,aj_rxzzzz,aj_rxxxxxx,aj_rxxxxxy,aj_rxxxxyy,
     & aj_rxxxyyy,aj_rxxyyyy,aj_rxyyyyy,aj_rxxxxxz,aj_rxxxxyz,
     & aj_rxxxyyz,aj_rxxyyyz,aj_rxyyyyz,aj_rxxxxzz,aj_rxxxyzz,
     & aj_rxxyyzz,aj_rxyyyzz,aj_rxxxzzz,aj_rxxyzzz,aj_rxyyzzz,
     & aj_rxxzzzz,aj_rxyzzzz,aj_rxzzzzz,aj_rxxxxxxx,aj_rxxxxxxy,
     & aj_rxxxxxyy,aj_rxxxxyyy,aj_rxxxyyyy,aj_rxxyyyyy,aj_rxyyyyyy,
     & aj_rxxxxxxz,aj_rxxxxxyz,aj_rxxxxyyz,aj_rxxxyyyz,aj_rxxyyyyz,
     & aj_rxyyyyyz,aj_rxxxxxzz,aj_rxxxxyzz,aj_rxxxyyzz,aj_rxxyyyzz,
     & aj_rxyyyyzz,aj_rxxxxzzz,aj_rxxxyzzz,aj_rxxyyzzz,aj_rxyyyzzz,
     & aj_rxxxzzzz,aj_rxxyzzzz,aj_rxyyzzzz,aj_rxxzzzzz,aj_rxyzzzzz,
     & aj_rxzzzzzz
             real aj_sxx,aj_sxy,aj_sxz,aj_sxxx,aj_sxxy,aj_sxyy,aj_sxxz,
     & aj_sxyz,aj_sxzz,aj_sxxxx,aj_sxxxy,aj_sxxyy,aj_sxyyy,aj_sxxxz,
     & aj_sxxyz,aj_sxyyz,aj_sxxzz,aj_sxyzz,aj_sxzzz,aj_sxxxxx,
     & aj_sxxxxy,aj_sxxxyy,aj_sxxyyy,aj_sxyyyy,aj_sxxxxz,aj_sxxxyz,
     & aj_sxxyyz,aj_sxyyyz,aj_sxxxzz,aj_sxxyzz,aj_sxyyzz,aj_sxxzzz,
     & aj_sxyzzz,aj_sxzzzz,aj_sxxxxxx,aj_sxxxxxy,aj_sxxxxyy,
     & aj_sxxxyyy,aj_sxxyyyy,aj_sxyyyyy,aj_sxxxxxz,aj_sxxxxyz,
     & aj_sxxxyyz,aj_sxxyyyz,aj_sxyyyyz,aj_sxxxxzz,aj_sxxxyzz,
     & aj_sxxyyzz,aj_sxyyyzz,aj_sxxxzzz,aj_sxxyzzz,aj_sxyyzzz,
     & aj_sxxzzzz,aj_sxyzzzz,aj_sxzzzzz,aj_sxxxxxxx,aj_sxxxxxxy,
     & aj_sxxxxxyy,aj_sxxxxyyy,aj_sxxxyyyy,aj_sxxyyyyy,aj_sxyyyyyy,
     & aj_sxxxxxxz,aj_sxxxxxyz,aj_sxxxxyyz,aj_sxxxyyyz,aj_sxxyyyyz,
     & aj_sxyyyyyz,aj_sxxxxxzz,aj_sxxxxyzz,aj_sxxxyyzz,aj_sxxyyyzz,
     & aj_sxyyyyzz,aj_sxxxxzzz,aj_sxxxyzzz,aj_sxxyyzzz,aj_sxyyyzzz,
     & aj_sxxxzzzz,aj_sxxyzzzz,aj_sxyyzzzz,aj_sxxzzzzz,aj_sxyzzzzz,
     & aj_sxzzzzzz
             real aj_ryx,aj_ryy,aj_ryz,aj_ryxx,aj_ryxy,aj_ryyy,aj_ryxz,
     & aj_ryyz,aj_ryzz,aj_ryxxx,aj_ryxxy,aj_ryxyy,aj_ryyyy,aj_ryxxz,
     & aj_ryxyz,aj_ryyyz,aj_ryxzz,aj_ryyzz,aj_ryzzz,aj_ryxxxx,
     & aj_ryxxxy,aj_ryxxyy,aj_ryxyyy,aj_ryyyyy,aj_ryxxxz,aj_ryxxyz,
     & aj_ryxyyz,aj_ryyyyz,aj_ryxxzz,aj_ryxyzz,aj_ryyyzz,aj_ryxzzz,
     & aj_ryyzzz,aj_ryzzzz,aj_ryxxxxx,aj_ryxxxxy,aj_ryxxxyy,
     & aj_ryxxyyy,aj_ryxyyyy,aj_ryyyyyy,aj_ryxxxxz,aj_ryxxxyz,
     & aj_ryxxyyz,aj_ryxyyyz,aj_ryyyyyz,aj_ryxxxzz,aj_ryxxyzz,
     & aj_ryxyyzz,aj_ryyyyzz,aj_ryxxzzz,aj_ryxyzzz,aj_ryyyzzz,
     & aj_ryxzzzz,aj_ryyzzzz,aj_ryzzzzz,aj_ryxxxxxx,aj_ryxxxxxy,
     & aj_ryxxxxyy,aj_ryxxxyyy,aj_ryxxyyyy,aj_ryxyyyyy,aj_ryyyyyyy,
     & aj_ryxxxxxz,aj_ryxxxxyz,aj_ryxxxyyz,aj_ryxxyyyz,aj_ryxyyyyz,
     & aj_ryyyyyyz,aj_ryxxxxzz,aj_ryxxxyzz,aj_ryxxyyzz,aj_ryxyyyzz,
     & aj_ryyyyyzz,aj_ryxxxzzz,aj_ryxxyzzz,aj_ryxyyzzz,aj_ryyyyzzz,
     & aj_ryxxzzzz,aj_ryxyzzzz,aj_ryyyzzzz,aj_ryxzzzzz,aj_ryyzzzzz,
     & aj_ryzzzzzz
             real aj_syx,aj_syy,aj_syz,aj_syxx,aj_syxy,aj_syyy,aj_syxz,
     & aj_syyz,aj_syzz,aj_syxxx,aj_syxxy,aj_syxyy,aj_syyyy,aj_syxxz,
     & aj_syxyz,aj_syyyz,aj_syxzz,aj_syyzz,aj_syzzz,aj_syxxxx,
     & aj_syxxxy,aj_syxxyy,aj_syxyyy,aj_syyyyy,aj_syxxxz,aj_syxxyz,
     & aj_syxyyz,aj_syyyyz,aj_syxxzz,aj_syxyzz,aj_syyyzz,aj_syxzzz,
     & aj_syyzzz,aj_syzzzz,aj_syxxxxx,aj_syxxxxy,aj_syxxxyy,
     & aj_syxxyyy,aj_syxyyyy,aj_syyyyyy,aj_syxxxxz,aj_syxxxyz,
     & aj_syxxyyz,aj_syxyyyz,aj_syyyyyz,aj_syxxxzz,aj_syxxyzz,
     & aj_syxyyzz,aj_syyyyzz,aj_syxxzzz,aj_syxyzzz,aj_syyyzzz,
     & aj_syxzzzz,aj_syyzzzz,aj_syzzzzz,aj_syxxxxxx,aj_syxxxxxy,
     & aj_syxxxxyy,aj_syxxxyyy,aj_syxxyyyy,aj_syxyyyyy,aj_syyyyyyy,
     & aj_syxxxxxz,aj_syxxxxyz,aj_syxxxyyz,aj_syxxyyyz,aj_syxyyyyz,
     & aj_syyyyyyz,aj_syxxxxzz,aj_syxxxyzz,aj_syxxyyzz,aj_syxyyyzz,
     & aj_syyyyyzz,aj_syxxxzzz,aj_syxxyzzz,aj_syxyyzzz,aj_syyyyzzz,
     & aj_syxxzzzz,aj_syxyzzzz,aj_syyyzzzz,aj_syxzzzzz,aj_syyzzzzz,
     & aj_syzzzzzz
             real aj_rz,aj_rzr,aj_rzs,aj_rzt,aj_rzrr,aj_rzrs,aj_rzss,
     & aj_rzrt,aj_rzst,aj_rztt,aj_rzrrr,aj_rzrrs,aj_rzrss,aj_rzsss,
     & aj_rzrrt,aj_rzrst,aj_rzsst,aj_rzrtt,aj_rzstt,aj_rzttt,
     & aj_rzrrrr,aj_rzrrrs,aj_rzrrss,aj_rzrsss,aj_rzssss,aj_rzrrrt,
     & aj_rzrrst,aj_rzrsst,aj_rzssst,aj_rzrrtt,aj_rzrstt,aj_rzsstt,
     & aj_rzrttt,aj_rzsttt,aj_rztttt,aj_rzrrrrr,aj_rzrrrrs,aj_rzrrrss,
     & aj_rzrrsss,aj_rzrssss,aj_rzsssss,aj_rzrrrrt,aj_rzrrrst,
     & aj_rzrrsst,aj_rzrssst,aj_rzsssst,aj_rzrrrtt,aj_rzrrstt,
     & aj_rzrsstt,aj_rzssstt,aj_rzrrttt,aj_rzrsttt,aj_rzssttt,
     & aj_rzrtttt,aj_rzstttt,aj_rzttttt,aj_rzrrrrrr,aj_rzrrrrrs,
     & aj_rzrrrrss,aj_rzrrrsss,aj_rzrrssss,aj_rzrsssss,aj_rzssssss,
     & aj_rzrrrrrt,aj_rzrrrrst,aj_rzrrrsst,aj_rzrrssst,aj_rzrsssst,
     & aj_rzssssst,aj_rzrrrrtt,aj_rzrrrstt,aj_rzrrsstt,aj_rzrssstt,
     & aj_rzsssstt,aj_rzrrrttt,aj_rzrrsttt,aj_rzrssttt,aj_rzsssttt,
     & aj_rzrrtttt,aj_rzrstttt,aj_rzsstttt,aj_rzrttttt,aj_rzsttttt,
     & aj_rztttttt
             real aj_sz,aj_szr,aj_szs,aj_szt,aj_szrr,aj_szrs,aj_szss,
     & aj_szrt,aj_szst,aj_sztt,aj_szrrr,aj_szrrs,aj_szrss,aj_szsss,
     & aj_szrrt,aj_szrst,aj_szsst,aj_szrtt,aj_szstt,aj_szttt,
     & aj_szrrrr,aj_szrrrs,aj_szrrss,aj_szrsss,aj_szssss,aj_szrrrt,
     & aj_szrrst,aj_szrsst,aj_szssst,aj_szrrtt,aj_szrstt,aj_szsstt,
     & aj_szrttt,aj_szsttt,aj_sztttt,aj_szrrrrr,aj_szrrrrs,aj_szrrrss,
     & aj_szrrsss,aj_szrssss,aj_szsssss,aj_szrrrrt,aj_szrrrst,
     & aj_szrrsst,aj_szrssst,aj_szsssst,aj_szrrrtt,aj_szrrstt,
     & aj_szrsstt,aj_szssstt,aj_szrrttt,aj_szrsttt,aj_szssttt,
     & aj_szrtttt,aj_szstttt,aj_szttttt,aj_szrrrrrr,aj_szrrrrrs,
     & aj_szrrrrss,aj_szrrrsss,aj_szrrssss,aj_szrsssss,aj_szssssss,
     & aj_szrrrrrt,aj_szrrrrst,aj_szrrrsst,aj_szrrssst,aj_szrsssst,
     & aj_szssssst,aj_szrrrrtt,aj_szrrrstt,aj_szrrsstt,aj_szrssstt,
     & aj_szsssstt,aj_szrrrttt,aj_szrrsttt,aj_szrssttt,aj_szsssttt,
     & aj_szrrtttt,aj_szrstttt,aj_szsstttt,aj_szrttttt,aj_szsttttt,
     & aj_sztttttt
             real aj_tx,aj_txr,aj_txs,aj_txt,aj_txrr,aj_txrs,aj_txss,
     & aj_txrt,aj_txst,aj_txtt,aj_txrrr,aj_txrrs,aj_txrss,aj_txsss,
     & aj_txrrt,aj_txrst,aj_txsst,aj_txrtt,aj_txstt,aj_txttt,
     & aj_txrrrr,aj_txrrrs,aj_txrrss,aj_txrsss,aj_txssss,aj_txrrrt,
     & aj_txrrst,aj_txrsst,aj_txssst,aj_txrrtt,aj_txrstt,aj_txsstt,
     & aj_txrttt,aj_txsttt,aj_txtttt,aj_txrrrrr,aj_txrrrrs,aj_txrrrss,
     & aj_txrrsss,aj_txrssss,aj_txsssss,aj_txrrrrt,aj_txrrrst,
     & aj_txrrsst,aj_txrssst,aj_txsssst,aj_txrrrtt,aj_txrrstt,
     & aj_txrsstt,aj_txssstt,aj_txrrttt,aj_txrsttt,aj_txssttt,
     & aj_txrtttt,aj_txstttt,aj_txttttt,aj_txrrrrrr,aj_txrrrrrs,
     & aj_txrrrrss,aj_txrrrsss,aj_txrrssss,aj_txrsssss,aj_txssssss,
     & aj_txrrrrrt,aj_txrrrrst,aj_txrrrsst,aj_txrrssst,aj_txrsssst,
     & aj_txssssst,aj_txrrrrtt,aj_txrrrstt,aj_txrrsstt,aj_txrssstt,
     & aj_txsssstt,aj_txrrrttt,aj_txrrsttt,aj_txrssttt,aj_txsssttt,
     & aj_txrrtttt,aj_txrstttt,aj_txsstttt,aj_txrttttt,aj_txsttttt,
     & aj_txtttttt
             real aj_ty,aj_tyr,aj_tys,aj_tyt,aj_tyrr,aj_tyrs,aj_tyss,
     & aj_tyrt,aj_tyst,aj_tytt,aj_tyrrr,aj_tyrrs,aj_tyrss,aj_tysss,
     & aj_tyrrt,aj_tyrst,aj_tysst,aj_tyrtt,aj_tystt,aj_tyttt,
     & aj_tyrrrr,aj_tyrrrs,aj_tyrrss,aj_tyrsss,aj_tyssss,aj_tyrrrt,
     & aj_tyrrst,aj_tyrsst,aj_tyssst,aj_tyrrtt,aj_tyrstt,aj_tysstt,
     & aj_tyrttt,aj_tysttt,aj_tytttt,aj_tyrrrrr,aj_tyrrrrs,aj_tyrrrss,
     & aj_tyrrsss,aj_tyrssss,aj_tysssss,aj_tyrrrrt,aj_tyrrrst,
     & aj_tyrrsst,aj_tyrssst,aj_tysssst,aj_tyrrrtt,aj_tyrrstt,
     & aj_tyrsstt,aj_tyssstt,aj_tyrrttt,aj_tyrsttt,aj_tyssttt,
     & aj_tyrtttt,aj_tystttt,aj_tyttttt,aj_tyrrrrrr,aj_tyrrrrrs,
     & aj_tyrrrrss,aj_tyrrrsss,aj_tyrrssss,aj_tyrsssss,aj_tyssssss,
     & aj_tyrrrrrt,aj_tyrrrrst,aj_tyrrrsst,aj_tyrrssst,aj_tyrsssst,
     & aj_tyssssst,aj_tyrrrrtt,aj_tyrrrstt,aj_tyrrsstt,aj_tyrssstt,
     & aj_tysssstt,aj_tyrrrttt,aj_tyrrsttt,aj_tyrssttt,aj_tysssttt,
     & aj_tyrrtttt,aj_tyrstttt,aj_tysstttt,aj_tyrttttt,aj_tysttttt,
     & aj_tytttttt
             real aj_tz,aj_tzr,aj_tzs,aj_tzt,aj_tzrr,aj_tzrs,aj_tzss,
     & aj_tzrt,aj_tzst,aj_tztt,aj_tzrrr,aj_tzrrs,aj_tzrss,aj_tzsss,
     & aj_tzrrt,aj_tzrst,aj_tzsst,aj_tzrtt,aj_tzstt,aj_tzttt,
     & aj_tzrrrr,aj_tzrrrs,aj_tzrrss,aj_tzrsss,aj_tzssss,aj_tzrrrt,
     & aj_tzrrst,aj_tzrsst,aj_tzssst,aj_tzrrtt,aj_tzrstt,aj_tzsstt,
     & aj_tzrttt,aj_tzsttt,aj_tztttt,aj_tzrrrrr,aj_tzrrrrs,aj_tzrrrss,
     & aj_tzrrsss,aj_tzrssss,aj_tzsssss,aj_tzrrrrt,aj_tzrrrst,
     & aj_tzrrsst,aj_tzrssst,aj_tzsssst,aj_tzrrrtt,aj_tzrrstt,
     & aj_tzrsstt,aj_tzssstt,aj_tzrrttt,aj_tzrsttt,aj_tzssttt,
     & aj_tzrtttt,aj_tzstttt,aj_tzttttt,aj_tzrrrrrr,aj_tzrrrrrs,
     & aj_tzrrrrss,aj_tzrrrsss,aj_tzrrssss,aj_tzrsssss,aj_tzssssss,
     & aj_tzrrrrrt,aj_tzrrrrst,aj_tzrrrsst,aj_tzrrssst,aj_tzrsssst,
     & aj_tzssssst,aj_tzrrrrtt,aj_tzrrrstt,aj_tzrrsstt,aj_tzrssstt,
     & aj_tzsssstt,aj_tzrrrttt,aj_tzrrsttt,aj_tzrssttt,aj_tzsssttt,
     & aj_tzrrtttt,aj_tzrstttt,aj_tzsstttt,aj_tzrttttt,aj_tzsttttt,
     & aj_tztttttt
             real aj_rzx,aj_rzy,aj_rzz,aj_rzxx,aj_rzxy,aj_rzyy,aj_rzxz,
     & aj_rzyz,aj_rzzz,aj_rzxxx,aj_rzxxy,aj_rzxyy,aj_rzyyy,aj_rzxxz,
     & aj_rzxyz,aj_rzyyz,aj_rzxzz,aj_rzyzz,aj_rzzzz,aj_rzxxxx,
     & aj_rzxxxy,aj_rzxxyy,aj_rzxyyy,aj_rzyyyy,aj_rzxxxz,aj_rzxxyz,
     & aj_rzxyyz,aj_rzyyyz,aj_rzxxzz,aj_rzxyzz,aj_rzyyzz,aj_rzxzzz,
     & aj_rzyzzz,aj_rzzzzz,aj_rzxxxxx,aj_rzxxxxy,aj_rzxxxyy,
     & aj_rzxxyyy,aj_rzxyyyy,aj_rzyyyyy,aj_rzxxxxz,aj_rzxxxyz,
     & aj_rzxxyyz,aj_rzxyyyz,aj_rzyyyyz,aj_rzxxxzz,aj_rzxxyzz,
     & aj_rzxyyzz,aj_rzyyyzz,aj_rzxxzzz,aj_rzxyzzz,aj_rzyyzzz,
     & aj_rzxzzzz,aj_rzyzzzz,aj_rzzzzzz,aj_rzxxxxxx,aj_rzxxxxxy,
     & aj_rzxxxxyy,aj_rzxxxyyy,aj_rzxxyyyy,aj_rzxyyyyy,aj_rzyyyyyy,
     & aj_rzxxxxxz,aj_rzxxxxyz,aj_rzxxxyyz,aj_rzxxyyyz,aj_rzxyyyyz,
     & aj_rzyyyyyz,aj_rzxxxxzz,aj_rzxxxyzz,aj_rzxxyyzz,aj_rzxyyyzz,
     & aj_rzyyyyzz,aj_rzxxxzzz,aj_rzxxyzzz,aj_rzxyyzzz,aj_rzyyyzzz,
     & aj_rzxxzzzz,aj_rzxyzzzz,aj_rzyyzzzz,aj_rzxzzzzz,aj_rzyzzzzz,
     & aj_rzzzzzzz
             real aj_szx,aj_szy,aj_szz,aj_szxx,aj_szxy,aj_szyy,aj_szxz,
     & aj_szyz,aj_szzz,aj_szxxx,aj_szxxy,aj_szxyy,aj_szyyy,aj_szxxz,
     & aj_szxyz,aj_szyyz,aj_szxzz,aj_szyzz,aj_szzzz,aj_szxxxx,
     & aj_szxxxy,aj_szxxyy,aj_szxyyy,aj_szyyyy,aj_szxxxz,aj_szxxyz,
     & aj_szxyyz,aj_szyyyz,aj_szxxzz,aj_szxyzz,aj_szyyzz,aj_szxzzz,
     & aj_szyzzz,aj_szzzzz,aj_szxxxxx,aj_szxxxxy,aj_szxxxyy,
     & aj_szxxyyy,aj_szxyyyy,aj_szyyyyy,aj_szxxxxz,aj_szxxxyz,
     & aj_szxxyyz,aj_szxyyyz,aj_szyyyyz,aj_szxxxzz,aj_szxxyzz,
     & aj_szxyyzz,aj_szyyyzz,aj_szxxzzz,aj_szxyzzz,aj_szyyzzz,
     & aj_szxzzzz,aj_szyzzzz,aj_szzzzzz,aj_szxxxxxx,aj_szxxxxxy,
     & aj_szxxxxyy,aj_szxxxyyy,aj_szxxyyyy,aj_szxyyyyy,aj_szyyyyyy,
     & aj_szxxxxxz,aj_szxxxxyz,aj_szxxxyyz,aj_szxxyyyz,aj_szxyyyyz,
     & aj_szyyyyyz,aj_szxxxxzz,aj_szxxxyzz,aj_szxxyyzz,aj_szxyyyzz,
     & aj_szyyyyzz,aj_szxxxzzz,aj_szxxyzzz,aj_szxyyzzz,aj_szyyyzzz,
     & aj_szxxzzzz,aj_szxyzzzz,aj_szyyzzzz,aj_szxzzzzz,aj_szyzzzzz,
     & aj_szzzzzzz
             real aj_txx,aj_txy,aj_txz,aj_txxx,aj_txxy,aj_txyy,aj_txxz,
     & aj_txyz,aj_txzz,aj_txxxx,aj_txxxy,aj_txxyy,aj_txyyy,aj_txxxz,
     & aj_txxyz,aj_txyyz,aj_txxzz,aj_txyzz,aj_txzzz,aj_txxxxx,
     & aj_txxxxy,aj_txxxyy,aj_txxyyy,aj_txyyyy,aj_txxxxz,aj_txxxyz,
     & aj_txxyyz,aj_txyyyz,aj_txxxzz,aj_txxyzz,aj_txyyzz,aj_txxzzz,
     & aj_txyzzz,aj_txzzzz,aj_txxxxxx,aj_txxxxxy,aj_txxxxyy,
     & aj_txxxyyy,aj_txxyyyy,aj_txyyyyy,aj_txxxxxz,aj_txxxxyz,
     & aj_txxxyyz,aj_txxyyyz,aj_txyyyyz,aj_txxxxzz,aj_txxxyzz,
     & aj_txxyyzz,aj_txyyyzz,aj_txxxzzz,aj_txxyzzz,aj_txyyzzz,
     & aj_txxzzzz,aj_txyzzzz,aj_txzzzzz,aj_txxxxxxx,aj_txxxxxxy,
     & aj_txxxxxyy,aj_txxxxyyy,aj_txxxyyyy,aj_txxyyyyy,aj_txyyyyyy,
     & aj_txxxxxxz,aj_txxxxxyz,aj_txxxxyyz,aj_txxxyyyz,aj_txxyyyyz,
     & aj_txyyyyyz,aj_txxxxxzz,aj_txxxxyzz,aj_txxxyyzz,aj_txxyyyzz,
     & aj_txyyyyzz,aj_txxxxzzz,aj_txxxyzzz,aj_txxyyzzz,aj_txyyyzzz,
     & aj_txxxzzzz,aj_txxyzzzz,aj_txyyzzzz,aj_txxzzzzz,aj_txyzzzzz,
     & aj_txzzzzzz
             real aj_tyx,aj_tyy,aj_tyz,aj_tyxx,aj_tyxy,aj_tyyy,aj_tyxz,
     & aj_tyyz,aj_tyzz,aj_tyxxx,aj_tyxxy,aj_tyxyy,aj_tyyyy,aj_tyxxz,
     & aj_tyxyz,aj_tyyyz,aj_tyxzz,aj_tyyzz,aj_tyzzz,aj_tyxxxx,
     & aj_tyxxxy,aj_tyxxyy,aj_tyxyyy,aj_tyyyyy,aj_tyxxxz,aj_tyxxyz,
     & aj_tyxyyz,aj_tyyyyz,aj_tyxxzz,aj_tyxyzz,aj_tyyyzz,aj_tyxzzz,
     & aj_tyyzzz,aj_tyzzzz,aj_tyxxxxx,aj_tyxxxxy,aj_tyxxxyy,
     & aj_tyxxyyy,aj_tyxyyyy,aj_tyyyyyy,aj_tyxxxxz,aj_tyxxxyz,
     & aj_tyxxyyz,aj_tyxyyyz,aj_tyyyyyz,aj_tyxxxzz,aj_tyxxyzz,
     & aj_tyxyyzz,aj_tyyyyzz,aj_tyxxzzz,aj_tyxyzzz,aj_tyyyzzz,
     & aj_tyxzzzz,aj_tyyzzzz,aj_tyzzzzz,aj_tyxxxxxx,aj_tyxxxxxy,
     & aj_tyxxxxyy,aj_tyxxxyyy,aj_tyxxyyyy,aj_tyxyyyyy,aj_tyyyyyyy,
     & aj_tyxxxxxz,aj_tyxxxxyz,aj_tyxxxyyz,aj_tyxxyyyz,aj_tyxyyyyz,
     & aj_tyyyyyyz,aj_tyxxxxzz,aj_tyxxxyzz,aj_tyxxyyzz,aj_tyxyyyzz,
     & aj_tyyyyyzz,aj_tyxxxzzz,aj_tyxxyzzz,aj_tyxyyzzz,aj_tyyyyzzz,
     & aj_tyxxzzzz,aj_tyxyzzzz,aj_tyyyzzzz,aj_tyxzzzzz,aj_tyyzzzzz,
     & aj_tyzzzzzz
             real aj_tzx,aj_tzy,aj_tzz,aj_tzxx,aj_tzxy,aj_tzyy,aj_tzxz,
     & aj_tzyz,aj_tzzz,aj_tzxxx,aj_tzxxy,aj_tzxyy,aj_tzyyy,aj_tzxxz,
     & aj_tzxyz,aj_tzyyz,aj_tzxzz,aj_tzyzz,aj_tzzzz,aj_tzxxxx,
     & aj_tzxxxy,aj_tzxxyy,aj_tzxyyy,aj_tzyyyy,aj_tzxxxz,aj_tzxxyz,
     & aj_tzxyyz,aj_tzyyyz,aj_tzxxzz,aj_tzxyzz,aj_tzyyzz,aj_tzxzzz,
     & aj_tzyzzz,aj_tzzzzz,aj_tzxxxxx,aj_tzxxxxy,aj_tzxxxyy,
     & aj_tzxxyyy,aj_tzxyyyy,aj_tzyyyyy,aj_tzxxxxz,aj_tzxxxyz,
     & aj_tzxxyyz,aj_tzxyyyz,aj_tzyyyyz,aj_tzxxxzz,aj_tzxxyzz,
     & aj_tzxyyzz,aj_tzyyyzz,aj_tzxxzzz,aj_tzxyzzz,aj_tzyyzzz,
     & aj_tzxzzzz,aj_tzyzzzz,aj_tzzzzzz,aj_tzxxxxxx,aj_tzxxxxxy,
     & aj_tzxxxxyy,aj_tzxxxyyy,aj_tzxxyyyy,aj_tzxyyyyy,aj_tzyyyyyy,
     & aj_tzxxxxxz,aj_tzxxxxyz,aj_tzxxxyyz,aj_tzxxyyyz,aj_tzxyyyyz,
     & aj_tzyyyyyz,aj_tzxxxxzz,aj_tzxxxyzz,aj_tzxxyyzz,aj_tzxyyyzz,
     & aj_tzyyyyzz,aj_tzxxxzzz,aj_tzxxyzzz,aj_tzxyyzzz,aj_tzyyyzzz,
     & aj_tzxxzzzz,aj_tzxyzzzz,aj_tzyyzzzz,aj_tzxzzzzz,aj_tzyzzzzz,
     & aj_tzzzzzzz
      !      declareJacobianDerivativeVariables(aj_p1_,3)
      !      declareJacobianDerivativeVariables(aj_p2_,3)
            double precision t1,t14,t6
            integer i1s,i1e,i2s,i2e,i3s,i3e
            integer pc,uc,vc,wc,kc,sc,tc
            integer order,disc_approx
            logical is_periodic, is_dirichlet_bc, is_neumann_bc,
     & is_outflow_bc
            logical is_parallel,is_moving
            logical use_ad2,use_ad4
            integer index_range(0:1,0:2),dims(0:1,0:2),gir(0:1,0:2)
            integer debug,grid
            integer pde_model
            integer npghost
            integer processid
            double precision dr(0:max_dim-1),dx(0:max_dim-1)
            double precision dt
            double precision nu,kthermal
            double precision gravity(0:max_dim-1)
            double precision thermal_expansivity
            double precision advection_coefficient
            double precision ad21,ad22,ad41,ad42
            double precision adcBoussinesq
            logical is_rect, use_os_rxr,rhs_only
            logical is_penta, have_ghost_points, extrap_all_1
            integer isn(0:max_dim-1),is1,is2,is3
            integer ilo(0:max_dim-1),ilo1,ilo2,ilo3
            integer bc_range(0:1,0:1,0:2),side,bc_trange(0:1,0:1,0:2)
            integer i1,i2,i3,i1l,i2l,i3l,i1o,i2o,i3o
            integer i1p,i2p,i3p,i1m,i2m,i3m
            integer i1pp,i2pp,i3pp,i1mm,i2mm,i3mm
            integer id,id2,ic  !! loop variable over physical/parameter space dimension
            integer off
            double precision nu_eq,dri(0:max_dim-1),dxi(0:max_dim-1),
     & dto2,drid,dxid
            double precision uxnorm
      double precision px_coeff(-half_width:half_width)
      double precision pxx_coeff(-half_width:half_width)
      double precision dx_coeff(-half_width:half_width)
      double precision dxx_coeff(-half_width:half_width)
      double precision rx(-half_width:half_width,0:max_dim-1,0:max_dim-
     & 1) ! dr_i/dx_j
      double precision rxx(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dx^2_j
      double precision rxr(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dr_idx_j
      double precision rxs(0:max_dim-1,0:max_dim-1,0:max_dim-1)! d^2r_i/dr_jdx_k
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

      double precision a_ik(-half_width:half_width) !! this holds the variable pde coefficients at adjacent grid points
      integer io !! loop variable for looping over adjacent grid points in the stencil (i.e. from -half_width to half_width)

      !!!!!!!! extract parameters from ipar and rpar
            i1s = ipar(0)
            i1e = ipar(1)
            i2s = ipar(2)
            i2e = ipar(3)
            i3s = ipar(4)
            i3e = ipar(5)
            gir(0,0) = i1s
            gir(1,0) = i1e
            gir(0,1) = i2s
            gir(1,1) = i2e
            gir(0,2) = i3s
            gir(1,2) = i3e
            pc = ipar(6)
            uc = ipar(7)
            vc = ipar(8)
            wc = ipar(9)
            kc = ipar(10)
            sc = ipar(11)
            tc = ipar(12)
            grid = ipar(13)
            order = ipar(14)
            is_moving = ipar(15).ne.0
            disc_approx = ipar(16)
            is_rect = ipar(26).eq.1
            is_periodic = ipar(27).ne.0
            index_range(0,0) = ipar(38)
            index_range(1,0) = ipar(39)
            index_range(0,1) = ipar(40)
            index_range(1,1) = ipar(41)
            index_range(0,2) = ipar(42)
            index_range(1,2) = ipar(43)
            dims(0,0) = nd1a
            dims(1,0) = nd1b
            dims(0,1) = nd2a
            dims(1,1) = nd2b
            dims(0,2) = nd3a
            dims(1,2) = nd3b
            do side=0,1
               bc_range(side,0,0) = i1s
               bc_range(side,1,0) = i1e
               bc_range(side,0,1) = i2s
               bc_range(side,1,1) = i2e
               bc_range(side,0,2) = i3s
               bc_range(side,1,2) = i3e
               do id=0,max_dim-1
                  bc_trange(side,0,id) = bc_range(side,0,id)
                  bc_trange(side,0,id) = bc_range(side,1,id)
               enddo
            enddo
      !     here are the loop bounds for the boundary conditions
            bc_range(0,0,dir) = bc_range(0,0,dir)
            bc_range(0,1,dir) = bc_range(0,0,dir)
            bc_range(1,0,dir) = bc_range(1,1,dir)
            bc_range(1,1,dir) = bc_range(1,1,dir)
            debug = ipar(48)
            pde_model = ipar(49)
            use_ad2 = ipar(50).ne.0
            use_ad4 = ipar(51).ne.0
            is_parallel = ipar(52).eq.1
            npghost = ipar(54)
            rhs_only = ipar(55).ne.0
            processid = ipar(56)
            dr(0) = rpar(0)
            dr(1) = rpar(1)
            dr(2) = rpar(2)
            dx(0) = rpar(3)
            dx(1) = rpar(4)
            dx(2) = rpar(5)
            dt = rpar(6)
            nu = rpar(8)
            kthermal = rpar(9)
            gravity(0) = rpar(20)
            gravity(1) = rpar(21)
            gravity(2) = rpar(22)
            thermal_expansivity = rpar(23)
            advection_coefficient = rpar(24)
      ! *wdh* 2013/09/24      if ( .false. ) then
            if ( .true. ) then ! *wdh* 2013/09/24 try this
      !! effectively use backward euler for the artificial dissipation
            ad21 = 2d0*rpar(25)
            ad22 = 2d0*rpar(26)
            ad41 = 2d0*rpar(27)
            ad42 = 2d0*rpar(28)
            if ( .not.use_ad2 .or. mode.eq.solve_rhs ) then
               ad21 = 0d0
               ad22 = 0d0
            endif
            if ( .not. use_ad4 .or. mode.eq.solve_rhs ) then
               ad41 = 0d0
               ad42 = 0d0
            endif
            if ( mode.eq.solve_rhs) then
               use_ad4 = .false.
               use_ad2 = .false.
            endif
            else
               ad21 = rpar(25)
               ad22 = rpar(26)
               ad41 = rpar(27)
               ad42 = rpar(28)
               if ( .not.use_ad2 ) then
                  ad21 = 0d0
                  ad22 = 0d0
               endif
               if ( .not. use_ad4 )then
                  ad41 = 0d0
                  ad42 = 0d0
               endif
            endif
      !!!!!!!! setup additional local variables based on the data in ipar and rpar
      !! old way      is_penta = (order.eq.4 .and. disc_approx.eq.finite_difference).or.(order.gt.4 .and. disc_approx.eq.compact)
            is_penta = (order.gt.2 .and. disc_approx.eq.compact)
            if ( cc.eq.tc .and. pde_model.eq.BoussinesqModel ) then
               nu_eq = kthermal
               ! Set dissipation for the T equation *wdh* 2013/02/02
               adcBoussinesq = rpar(29)
               ! write(*,'("ins_factors: adcBoussinesq=",e12.2)') adcBoussinesq
               ad21=0.
               ad22=0.
               ad41=0.
               ad42=0.
               if ( use_ad2 ) then
                 ad21=adcBoussinesq
               end if
               if( use_ad4 )then
                 ad41=adcBoussinesq
               end if
            else
               nu_eq = nu
            endif
            dto2 = dt/2d0
            do id=0,max_dim-1
               dxi(id) = 1d0/dx(id)
               dri(id) = 1d0/dr(id)
               do io=-half_width,half_width
                  do id2=0,max_dim-1
                     rx(io,id,id2) = 0d0
                     rxx(io,id,id2) = 0d0
                     rxr(io,id,id2) = 0d0
                  enddo
               enddo
               do ic=0,max_dim-1
               do id2=0,max_dim-1
                  rxs(id,ic,id2) = 0d0
               enddo
               enddo
            enddo
            drid = dri(dir)
            dxid = dxi(dir)
            !!! initialize the metrics to the rectangular case
            aj_rx    = dr(0)/dx(0)
            aj_ry    = 0d0
            aj_sx    = 0d0
            aj_sy    = dr(1)/dx(1)
            if ( nd.eq.3 ) then
               aj_rz = 0d0
               aj_sz = 0d0
               aj_tx = 0d0
               aj_ty = 0d0
               aj_tz = dr(2)/dx(2)
            endif
            aj_rxx    = 0d0
            aj_sxx    = 0d0
            aj_txx    = 0d0
            aj_rxr    = 0d0
            aj_sxs    = 0d0
            aj_txt    = 0d0
            aj_ryy    = 0d0
            aj_syy    = 0d0
            aj_tyy    = 0d0
            aj_ryr    = 0d0
            aj_sys    = 0d0
            aj_tyt    = 0d0
            aj_rzz    = 0d0
            aj_szz    = 0d0
            aj_tzz    = 0d0
            aj_rzr    = 0d0
            aj_szs    = 0d0
            aj_tzt    = 0d0
            do io=-half_width,half_width
            rx( io,0,0) = aj_rx
            rxx(io,0,0) = aj_rxx
            rxr(io,0,0) = aj_rxr
            rx( io,1,0) = aj_sx
            rxx(io,1,0) = aj_sxx
            rxr(io,1,0) = aj_sxs
            rx( io,0,1) = aj_ry
            rxx(io,0,1) = aj_ryy
            rxr(io,0,1) = aj_ryr
            rx( io,1,1) = aj_sy
            rxx(io,1,1) = aj_syy
            rxr(io,1,1) = aj_sys
            if (nd.eq.3) then
               rx( io,0,2) = aj_rz
               rxx(io,0,2) = aj_rzz
               rxr(io,0,2) = aj_rzr
               rx( io,1,2) = aj_sz
               rxx(io,1,2) = aj_szz
               rxr(io,1,2) = aj_szs
               rx( io,2,0) = aj_tx
               rxx(io,2,0) = aj_txx
               rxr(io,2,0) = aj_txt
               rx( io,2,1) = aj_ty
               rxx(io,2,1) = aj_tyy
               rxr(io,2,1) = aj_tyt
               rx( io,2,2) = aj_tz
               rxx(io,2,2) = aj_tzz
               rxr(io,2,2) = aj_tzt
            endif
            enddo
            ! set the stencil offset to zero
            off = 0
            have_ghost_points = .true.
            extrap_all_1 = .true.
            use_os_rxr = .false.
      !! adjust dims for parallel ghost ghost boundaries
            if ( is_parallel ) then
               do side=0,1
                  do id=0,nd-1
                     if ( bc(side,id).ne.parallelBC ) then
                          dims(side,id) = dims(side,id) + npghost*(1-2*
     & side)
                     endif
                  enddo
               enddo
            endif                     ! is_parallel

            ! *wdh* 2012/04/06 if ( debug.ge.3 .and. processid.eq.0 ) then
            if ( debug.ge.4 .and. processid.le.0 ) then
               print '(a20)',"INSIDE ins_rfactor"
               print '("         nd : ",i3)',nd
               print '("  nd1a,nd1b : ",i4,2x,i4)',nd1a,nd1b
               print '("  nd2a,nd2b : ",i4,2x,i4)',nd2a,nd2b
               print '("  nd3a,nd3b : ",i4,2x,i4)',nd3a,nd3b
               print '("  nd4a,nd4b : ",i4,2x,i4)',nd4a,nd4b
               print '("    i1s,i1e : ",i4,2x,i4)',i1s,i1e
               print '("    i2s,i2e : ",i4,2x,i4)',i2s,i2e
               print '("    i3s,i3e : ",i4,2x,i4)',i3s,i3e
               print '("index_range0: ",i4,2x,i4)',index_range(0,0),
     & index_range(1,0)
               print '("index_range1: ",i4,2x,i4)',index_range(0,1),
     & index_range(1,1)
               print '("index_range2: ",i4,2x,i4)',index_range(0,2),
     & index_range(1,2)
               print '("dims0: ",i4,2x,i4)',dims(0,0),dims(1,0)
               print '("dims1: ",i4,2x,i4)',dims(0,1),dims(1,1)
               print '("dims2: ",i4,2x,i4)',dims(0,2),dims(1,2)
               print '("gir0: ",i4,2x,i4)',gir(0,0),gir(1,0)
               print '("gir1: ",i4,2x,i4)',gir(0,1),gir(1,1)
               print '("gir2: ",i4,2x,i4)',gir(0,2),gir(1,2)
               print '("       dx(0): ",f10.7)',dx(0)
               print '("       dx(1): ",f10.7)',dx(1)
               print '("       dx(2): ",f10.7)',dx(2)
               print '("       dr(0): ",f10.7)',dr(0)
               print '("       dr(1): ",f10.7)',dr(1)
               print '("       dr(2): ",f10.7)',dr(2)
               print '("          dt: ",f10.7)',dt
               print '("       grid : ",i5)',grid
               print '("      order : ",i2)',order
               print '("      approx: ",i2)',disc_approx
               print '("  is_moving : ",l)',is_moving
               print '("    is_rect : ",l)',is_rect
               print '(" is_periodic: ",l)',is_periodic
               print '("    is_penta: ",l)',is_penta
               print '(" is_parallel: ",l)',is_parallel
               print '("       mode : ",i5)',mode
               print '("        dir : ",i5)',dir
               print '("         cc : ",i5)',cc
               print '("       nu_eq: ",f10.7)',nu_eq
            endif ! debug.gt.0

!!actually, do the pressure gradient in the explicit case      if ( mode.eq.get_explicit ) return ! there are no explicit contributions from this factor

      call get_op_coeffs(half_width,1,order,disc_approx,px_coeff,
     & dx_coeff)

            isn(0) = 0
            isn(1) = 0
            isn(2) = 0
            ilo(0) = 0
            ilo(1) = 0
            ilo(2) = 0
            isn(dir) = 1
            is1 = isn(0)
            is2 = isn(1)
            is3 = isn(2)
      !      if (.not.is_periodic) ilo(dir) = isn(dir)
            ilo1 = ilo(0)
            ilo2 = ilo(1)
            ilo3 = ilo(2)

!      do i3l=i3s,i3e
!      do i2l=i2s,i2e
!      do i1l=i1s,i1e
      do i3l=index_range(0,2),index_range(1,2)
      do i2l=index_range(0,1),index_range(1,1)
      do i1l=index_range(0,0),index_range(1,0)

            i1mm = i1l-2*is1
            i2mm = i2l-2*is2
            i3mm = i3l-2*is3
            i1m = i1l-is1
            i2m = i2l-is2
            i3m = i3l-is3
            i1  = i1l
            i2  = i2l
            i3  = i3l
            i1p = i1l+is1
            i2p = i2l+is2
            i3p = i3l+is3
            i1pp = i1l+2*is1
            i2pp = i2l+2*is2
            i3pp = i3l+2*is3
      if ( mask(i1,i2,i3).gt.0 ) then

               !!!! -- evaluate the jacobian derivatives we need to the order we require
               !!!! -- place the derivatives at each adjacent node into the arrays 
               !!!!    rx,rxr and rxx for later use in loops over the difference stencils
               !!!! -- we assume the grid is at least 2D
               !!!! -- currently we need only up to the second derivative in the mapping
               if ( .not. is_rect ) then
               do io=-half_width,half_width ! loop over the stencil and fill the small arrays of metrics at adjacent grid points
                        i1o = i1l + (io-off)*is1
                        i2o = i2l + (io-off)*is2
                        i3o = i3l + (io-off)*is3
                  if ( .not. use_os_rxr ) then
                  if ( nd.eq.2 ) then
                     if ( order.eq.2 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-1,i2o,i3o,0,0)+rsxy(i1o+1,
     & i2o,i3o,0,0))/(2.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-1,i3o,0,0)+rsxy(i1o,
     & i2o+1,i3o,0,0))/(2.*dr(1))
                        aj_rxrr = (rsxy(i1o-1,i2o,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o+1,i2o,i3o,0,0))/(dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,0)+rsxy(
     & i1o-1,i2o+1,i3o,0,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,0)+
     & rsxy(i1o+1,i2o+1,i3o,0,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_rxss = (rsxy(i1o,i2o-1,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o+1,i3o,0,0))/(dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-1,i2o,i3o,1,0)+rsxy(i1o+1,
     & i2o,i3o,1,0))/(2.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-1,i3o,1,0)+rsxy(i1o,
     & i2o+1,i3o,1,0))/(2.*dr(1))
                        aj_sxrr = (rsxy(i1o-1,i2o,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o+1,i2o,i3o,1,0))/(dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,0)+rsxy(
     & i1o-1,i2o+1,i3o,1,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,0)+
     & rsxy(i1o+1,i2o+1,i3o,1,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_sxss = (rsxy(i1o,i2o-1,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o+1,i3o,1,0))/(dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-1,i2o,i3o,0,1)+rsxy(i1o+1,
     & i2o,i3o,0,1))/(2.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-1,i3o,0,1)+rsxy(i1o,
     & i2o+1,i3o,0,1))/(2.*dr(1))
                        aj_ryrr = (rsxy(i1o-1,i2o,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o+1,i2o,i3o,0,1))/(dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,1)+rsxy(
     & i1o-1,i2o+1,i3o,0,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,1)+
     & rsxy(i1o+1,i2o+1,i3o,0,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_ryss = (rsxy(i1o,i2o-1,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o+1,i3o,0,1))/(dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-1,i2o,i3o,1,1)+rsxy(i1o+1,
     & i2o,i3o,1,1))/(2.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-1,i3o,1,1)+rsxy(i1o,
     & i2o+1,i3o,1,1))/(2.*dr(1))
                        aj_syrr = (rsxy(i1o-1,i2o,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o+1,i2o,i3o,1,1))/(dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,1)+rsxy(
     & i1o-1,i2o+1,i3o,1,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,1)+
     & rsxy(i1o+1,i2o+1,i3o,1,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_syss = (rsxy(i1o,i2o-1,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o+1,i3o,1,1))/(dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.4) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (rsxy(i1o-2,i2o,i3o,0,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+8.*rsxy(i1o+1,i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,
     & 0))/(12.*dr(0))
                        aj_rxs = (rsxy(i1o,i2o-2,i3o,0,0)-8.*rsxy(i1o,
     & i2o-1,i3o,0,0)+8.*rsxy(i1o,i2o+1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,
     & 0))/(12.*dr(1))
                        aj_rxrr = (-rsxy(i1o-2,i2o,i3o,0,0)+16.*rsxy(
     & i1o-1,i2o,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o+1,
     & i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,0))/(12.*dr(0)**2)
                        aj_rxrs = ((rsxy(i1o-2,i2o-2,i3o,0,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,0)+8.*rsxy(i1o-2,i2o+1,i3o,0,0)-rsxy(i1o-2,
     & i2o+2,i3o,0,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,0)+8.*rsxy(i1o-1,i2o+1,i3o,0,0)-rsxy(
     & i1o-1,i2o+2,i3o,0,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,0)+8.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & rsxy(i1o+1,i2o+2,i3o,0,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,0,0)+8.*rsxy(i1o+2,i2o+1,i3o,0,0)-
     & rsxy(i1o+2,i2o+2,i3o,0,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_rxss = (-rsxy(i1o,i2o-2,i3o,0,0)+16.*rsxy(
     & i1o,i2o-1,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,0))/(12.*dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (rsxy(i1o-2,i2o,i3o,1,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+8.*rsxy(i1o+1,i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,
     & 0))/(12.*dr(0))
                        aj_sxs = (rsxy(i1o,i2o-2,i3o,1,0)-8.*rsxy(i1o,
     & i2o-1,i3o,1,0)+8.*rsxy(i1o,i2o+1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,
     & 0))/(12.*dr(1))
                        aj_sxrr = (-rsxy(i1o-2,i2o,i3o,1,0)+16.*rsxy(
     & i1o-1,i2o,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o+1,
     & i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,0))/(12.*dr(0)**2)
                        aj_sxrs = ((rsxy(i1o-2,i2o-2,i3o,1,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,0)+8.*rsxy(i1o-2,i2o+1,i3o,1,0)-rsxy(i1o-2,
     & i2o+2,i3o,1,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,0)+8.*rsxy(i1o-1,i2o+1,i3o,1,0)-rsxy(
     & i1o-1,i2o+2,i3o,1,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,0)+8.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & rsxy(i1o+1,i2o+2,i3o,1,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,1,0)+8.*rsxy(i1o+2,i2o+1,i3o,1,0)-
     & rsxy(i1o+2,i2o+2,i3o,1,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_sxss = (-rsxy(i1o,i2o-2,i3o,1,0)+16.*rsxy(
     & i1o,i2o-1,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,0))/(12.*dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (rsxy(i1o-2,i2o,i3o,0,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+8.*rsxy(i1o+1,i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,
     & 1))/(12.*dr(0))
                        aj_rys = (rsxy(i1o,i2o-2,i3o,0,1)-8.*rsxy(i1o,
     & i2o-1,i3o,0,1)+8.*rsxy(i1o,i2o+1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,
     & 1))/(12.*dr(1))
                        aj_ryrr = (-rsxy(i1o-2,i2o,i3o,0,1)+16.*rsxy(
     & i1o-1,i2o,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o+1,
     & i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,1))/(12.*dr(0)**2)
                        aj_ryrs = ((rsxy(i1o-2,i2o-2,i3o,0,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,1)+8.*rsxy(i1o-2,i2o+1,i3o,0,1)-rsxy(i1o-2,
     & i2o+2,i3o,0,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,1)+8.*rsxy(i1o-1,i2o+1,i3o,0,1)-rsxy(
     & i1o-1,i2o+2,i3o,0,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,1)+8.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & rsxy(i1o+1,i2o+2,i3o,0,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,0,1)+8.*rsxy(i1o+2,i2o+1,i3o,0,1)-
     & rsxy(i1o+2,i2o+2,i3o,0,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_ryss = (-rsxy(i1o,i2o-2,i3o,0,1)+16.*rsxy(
     & i1o,i2o-1,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,1))/(12.*dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (rsxy(i1o-2,i2o,i3o,1,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+8.*rsxy(i1o+1,i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,
     & 1))/(12.*dr(0))
                        aj_sys = (rsxy(i1o,i2o-2,i3o,1,1)-8.*rsxy(i1o,
     & i2o-1,i3o,1,1)+8.*rsxy(i1o,i2o+1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,
     & 1))/(12.*dr(1))
                        aj_syrr = (-rsxy(i1o-2,i2o,i3o,1,1)+16.*rsxy(
     & i1o-1,i2o,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o+1,
     & i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,1))/(12.*dr(0)**2)
                        aj_syrs = ((rsxy(i1o-2,i2o-2,i3o,1,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,1)+8.*rsxy(i1o-2,i2o+1,i3o,1,1)-rsxy(i1o-2,
     & i2o+2,i3o,1,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,1)+8.*rsxy(i1o-1,i2o+1,i3o,1,1)-rsxy(
     & i1o-1,i2o+2,i3o,1,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,1)+8.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & rsxy(i1o+1,i2o+2,i3o,1,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,1,1)+8.*rsxy(i1o+2,i2o+1,i3o,1,1)-
     & rsxy(i1o+2,i2o+2,i3o,1,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_syss = (-rsxy(i1o,i2o-2,i3o,1,1)+16.*rsxy(
     & i1o,i2o-1,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,1))/(12.*dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.6) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-3,i2o,i3o,0,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,0)-45.*rsxy(i1o-1,i2o,i3o,0,0)+45.*rsxy(i1o+1,i2o,
     & i3o,0,0)-9.*rsxy(i1o+2,i2o,i3o,0,0)+rsxy(i1o+3,i2o,i3o,0,0))/(
     & 60.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-3,i3o,0,0)+9.*rsxy(i1o,
     & i2o-2,i3o,0,0)-45.*rsxy(i1o,i2o-1,i3o,0,0)+45.*rsxy(i1o,i2o+1,
     & i3o,0,0)-9.*rsxy(i1o,i2o+2,i3o,0,0)+rsxy(i1o,i2o+3,i3o,0,0))/(
     & 60.*dr(1))
                        aj_rxrr = (2.*rsxy(i1o-3,i2o,i3o,0,0)-27.*rsxy(
     & i1o-2,i2o,i3o,0,0)+270.*rsxy(i1o-1,i2o,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o+1,i2o,i3o,0,0)-27.*rsxy(i1o+2,i2o,
     & i3o,0,0)+2.*rsxy(i1o+3,i2o,i3o,0,0))/(180.*dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,0)-45.*rsxy(i1o-3,i2o-1,i3o,0,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,0)-9.*rsxy(i1o-3,i2o+2,i3o,0,0)+rsxy(
     & i1o-3,i2o+3,i3o,0,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,0,0)-45.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,0)-9.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & rsxy(i1o-2,i2o+3,i3o,0,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o-1,i2o-2,i3o,0,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o-1,i2o+1,i3o,0,0)-9.*rsxy(i1o-1,i2o+2,i3o,0,0)
     & +rsxy(i1o-1,i2o+3,i3o,0,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+1,i2o-2,i3o,0,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+1,i2o+1,i3o,0,0)-9.*rsxy(i1o+1,i2o+2,i3o,0,0)
     & +rsxy(i1o+1,i2o+3,i3o,0,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+2,i2o-2,i3o,0,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+2,i2o+1,i3o,0,0)-9.*rsxy(i1o+2,i2o+2,i3o,0,0)
     & +rsxy(i1o+2,i2o+3,i3o,0,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,0)+9.*rsxy(i1o+3,i2o-2,i3o,0,0)-45.*rsxy(i1o+3,i2o-1,i3o,0,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,0)-9.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & rsxy(i1o+3,i2o+3,i3o,0,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_rxss = (2.*rsxy(i1o,i2o-3,i3o,0,0)-27.*rsxy(
     & i1o,i2o-2,i3o,0,0)+270.*rsxy(i1o,i2o-1,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o+1,i3o,0,0)-27.*rsxy(i1o,i2o+2,
     & i3o,0,0)+2.*rsxy(i1o,i2o+3,i3o,0,0))/(180.*dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-3,i2o,i3o,1,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,0)-45.*rsxy(i1o-1,i2o,i3o,1,0)+45.*rsxy(i1o+1,i2o,
     & i3o,1,0)-9.*rsxy(i1o+2,i2o,i3o,1,0)+rsxy(i1o+3,i2o,i3o,1,0))/(
     & 60.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-3,i3o,1,0)+9.*rsxy(i1o,
     & i2o-2,i3o,1,0)-45.*rsxy(i1o,i2o-1,i3o,1,0)+45.*rsxy(i1o,i2o+1,
     & i3o,1,0)-9.*rsxy(i1o,i2o+2,i3o,1,0)+rsxy(i1o,i2o+3,i3o,1,0))/(
     & 60.*dr(1))
                        aj_sxrr = (2.*rsxy(i1o-3,i2o,i3o,1,0)-27.*rsxy(
     & i1o-2,i2o,i3o,1,0)+270.*rsxy(i1o-1,i2o,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o+1,i2o,i3o,1,0)-27.*rsxy(i1o+2,i2o,
     & i3o,1,0)+2.*rsxy(i1o+3,i2o,i3o,1,0))/(180.*dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,0)-45.*rsxy(i1o-3,i2o-1,i3o,1,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,0)-9.*rsxy(i1o-3,i2o+2,i3o,1,0)+rsxy(
     & i1o-3,i2o+3,i3o,1,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,1,0)-45.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,0)-9.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & rsxy(i1o-2,i2o+3,i3o,1,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o-1,i2o-2,i3o,1,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o-1,i2o+1,i3o,1,0)-9.*rsxy(i1o-1,i2o+2,i3o,1,0)
     & +rsxy(i1o-1,i2o+3,i3o,1,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+1,i2o-2,i3o,1,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+1,i2o+1,i3o,1,0)-9.*rsxy(i1o+1,i2o+2,i3o,1,0)
     & +rsxy(i1o+1,i2o+3,i3o,1,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+2,i2o-2,i3o,1,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+2,i2o+1,i3o,1,0)-9.*rsxy(i1o+2,i2o+2,i3o,1,0)
     & +rsxy(i1o+2,i2o+3,i3o,1,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,0)+9.*rsxy(i1o+3,i2o-2,i3o,1,0)-45.*rsxy(i1o+3,i2o-1,i3o,1,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,0)-9.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & rsxy(i1o+3,i2o+3,i3o,1,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_sxss = (2.*rsxy(i1o,i2o-3,i3o,1,0)-27.*rsxy(
     & i1o,i2o-2,i3o,1,0)+270.*rsxy(i1o,i2o-1,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o+1,i3o,1,0)-27.*rsxy(i1o,i2o+2,
     & i3o,1,0)+2.*rsxy(i1o,i2o+3,i3o,1,0))/(180.*dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-3,i2o,i3o,0,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,1)-45.*rsxy(i1o-1,i2o,i3o,0,1)+45.*rsxy(i1o+1,i2o,
     & i3o,0,1)-9.*rsxy(i1o+2,i2o,i3o,0,1)+rsxy(i1o+3,i2o,i3o,0,1))/(
     & 60.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-3,i3o,0,1)+9.*rsxy(i1o,
     & i2o-2,i3o,0,1)-45.*rsxy(i1o,i2o-1,i3o,0,1)+45.*rsxy(i1o,i2o+1,
     & i3o,0,1)-9.*rsxy(i1o,i2o+2,i3o,0,1)+rsxy(i1o,i2o+3,i3o,0,1))/(
     & 60.*dr(1))
                        aj_ryrr = (2.*rsxy(i1o-3,i2o,i3o,0,1)-27.*rsxy(
     & i1o-2,i2o,i3o,0,1)+270.*rsxy(i1o-1,i2o,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o+1,i2o,i3o,0,1)-27.*rsxy(i1o+2,i2o,
     & i3o,0,1)+2.*rsxy(i1o+3,i2o,i3o,0,1))/(180.*dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,1)-45.*rsxy(i1o-3,i2o-1,i3o,0,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,1)-9.*rsxy(i1o-3,i2o+2,i3o,0,1)+rsxy(
     & i1o-3,i2o+3,i3o,0,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,0,1)-45.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,1)-9.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & rsxy(i1o-2,i2o+3,i3o,0,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o-1,i2o-2,i3o,0,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o-1,i2o+1,i3o,0,1)-9.*rsxy(i1o-1,i2o+2,i3o,0,1)
     & +rsxy(i1o-1,i2o+3,i3o,0,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+1,i2o-2,i3o,0,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+1,i2o+1,i3o,0,1)-9.*rsxy(i1o+1,i2o+2,i3o,0,1)
     & +rsxy(i1o+1,i2o+3,i3o,0,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+2,i2o-2,i3o,0,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+2,i2o+1,i3o,0,1)-9.*rsxy(i1o+2,i2o+2,i3o,0,1)
     & +rsxy(i1o+2,i2o+3,i3o,0,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,1)+9.*rsxy(i1o+3,i2o-2,i3o,0,1)-45.*rsxy(i1o+3,i2o-1,i3o,0,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,1)-9.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & rsxy(i1o+3,i2o+3,i3o,0,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_ryss = (2.*rsxy(i1o,i2o-3,i3o,0,1)-27.*rsxy(
     & i1o,i2o-2,i3o,0,1)+270.*rsxy(i1o,i2o-1,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o+1,i3o,0,1)-27.*rsxy(i1o,i2o+2,
     & i3o,0,1)+2.*rsxy(i1o,i2o+3,i3o,0,1))/(180.*dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-3,i2o,i3o,1,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,1)-45.*rsxy(i1o-1,i2o,i3o,1,1)+45.*rsxy(i1o+1,i2o,
     & i3o,1,1)-9.*rsxy(i1o+2,i2o,i3o,1,1)+rsxy(i1o+3,i2o,i3o,1,1))/(
     & 60.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-3,i3o,1,1)+9.*rsxy(i1o,
     & i2o-2,i3o,1,1)-45.*rsxy(i1o,i2o-1,i3o,1,1)+45.*rsxy(i1o,i2o+1,
     & i3o,1,1)-9.*rsxy(i1o,i2o+2,i3o,1,1)+rsxy(i1o,i2o+3,i3o,1,1))/(
     & 60.*dr(1))
                        aj_syrr = (2.*rsxy(i1o-3,i2o,i3o,1,1)-27.*rsxy(
     & i1o-2,i2o,i3o,1,1)+270.*rsxy(i1o-1,i2o,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o+1,i2o,i3o,1,1)-27.*rsxy(i1o+2,i2o,
     & i3o,1,1)+2.*rsxy(i1o+3,i2o,i3o,1,1))/(180.*dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,1)-45.*rsxy(i1o-3,i2o-1,i3o,1,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,1)-9.*rsxy(i1o-3,i2o+2,i3o,1,1)+rsxy(
     & i1o-3,i2o+3,i3o,1,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,1,1)-45.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,1)-9.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & rsxy(i1o-2,i2o+3,i3o,1,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o-1,i2o-2,i3o,1,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o-1,i2o+1,i3o,1,1)-9.*rsxy(i1o-1,i2o+2,i3o,1,1)
     & +rsxy(i1o-1,i2o+3,i3o,1,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+1,i2o-2,i3o,1,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+1,i2o+1,i3o,1,1)-9.*rsxy(i1o+1,i2o+2,i3o,1,1)
     & +rsxy(i1o+1,i2o+3,i3o,1,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+2,i2o-2,i3o,1,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+2,i2o+1,i3o,1,1)-9.*rsxy(i1o+2,i2o+2,i3o,1,1)
     & +rsxy(i1o+2,i2o+3,i3o,1,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,1)+9.*rsxy(i1o+3,i2o-2,i3o,1,1)-45.*rsxy(i1o+3,i2o-1,i3o,1,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,1)-9.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & rsxy(i1o+3,i2o+3,i3o,1,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_syss = (2.*rsxy(i1o,i2o-3,i3o,1,1)-27.*rsxy(
     & i1o,i2o-2,i3o,1,1)+270.*rsxy(i1o,i2o-1,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o+1,i3o,1,1)-27.*rsxy(i1o,i2o+2,
     & i3o,1,1)+2.*rsxy(i1o,i2o+3,i3o,1,1))/(180.*dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.8) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (3.*rsxy(i1o-4,i2o,i3o,0,0)-32.*rsxy(
     & i1o-3,i2o,i3o,0,0)+168.*rsxy(i1o-2,i2o,i3o,0,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+672.*rsxy(i1o+1,i2o,i3o,0,0)-168.*rsxy(i1o+2,
     & i2o,i3o,0,0)+32.*rsxy(i1o+3,i2o,i3o,0,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,0))/(840.*dr(0))
                        aj_rxs = (3.*rsxy(i1o,i2o-4,i3o,0,0)-32.*rsxy(
     & i1o,i2o-3,i3o,0,0)+168.*rsxy(i1o,i2o-2,i3o,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o,i2o+1,i3o,0,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,0)+32.*rsxy(i1o,i2o+3,i3o,0,0)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 0))/(840.*dr(1))
                        aj_rxrr = (-9.*rsxy(i1o-4,i2o,i3o,0,0)+128.*
     & rsxy(i1o-3,i2o,i3o,0,0)-1008.*rsxy(i1o-2,i2o,i3o,0,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,0)-1008.*rsxy(i1o+2,i2o,i3o,0,0)+128.*
     & rsxy(i1o+3,i2o,i3o,0,0)-9.*rsxy(i1o+4,i2o,i3o,0,0))/(5040.*dr(
     & 0)**2)
                        aj_rxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,0)+168.*rsxy(i1o-4,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,0)+672.*rsxy(i1o-4,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,0)+32.*rsxy(i1o-4,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o-3,i2o-3,i3o,0,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o-3,i2o-1,i3o,0,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o-3,i2o+2,i3o,0,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o-3,i2o+4,i3o,0,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,0)-32.*rsxy(i1o-2,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,0)-672.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,0)-168.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,0)-3.*rsxy(i1o-2,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o-1,i2o-2,i3o,0,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o-1,i2o+1,i3o,0,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o-1,i2o+3,i3o,0,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,0)+168.*rsxy(i1o+1,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,0)+672.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,0)+32.*rsxy(i1o+1,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o+2,i2o-3,i3o,0,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o+2,i2o-1,i3o,0,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o+2,i2o+2,i3o,0,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o+2,i2o+4,i3o,0,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,0)-32.*rsxy(i1o+3,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,0)-672.*rsxy(i1o+3,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,0)-168.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,0)-3.*rsxy(i1o+3,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o+4,i2o-2,i3o,0,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o+4,i2o+1,i3o,0,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o+4,i2o+3,i3o,0,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_rxss = (-9.*rsxy(i1o,i2o-4,i3o,0,0)+128.*
     & rsxy(i1o,i2o-3,i3o,0,0)-1008.*rsxy(i1o,i2o-2,i3o,0,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,0)-1008.*rsxy(i1o,i2o+2,i3o,0,0)+128.*
     & rsxy(i1o,i2o+3,i3o,0,0)-9.*rsxy(i1o,i2o+4,i3o,0,0))/(5040.*dr(
     & 1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (3.*rsxy(i1o-4,i2o,i3o,1,0)-32.*rsxy(
     & i1o-3,i2o,i3o,1,0)+168.*rsxy(i1o-2,i2o,i3o,1,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+672.*rsxy(i1o+1,i2o,i3o,1,0)-168.*rsxy(i1o+2,
     & i2o,i3o,1,0)+32.*rsxy(i1o+3,i2o,i3o,1,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,0))/(840.*dr(0))
                        aj_sxs = (3.*rsxy(i1o,i2o-4,i3o,1,0)-32.*rsxy(
     & i1o,i2o-3,i3o,1,0)+168.*rsxy(i1o,i2o-2,i3o,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o,i2o+1,i3o,1,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,0)+32.*rsxy(i1o,i2o+3,i3o,1,0)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 0))/(840.*dr(1))
                        aj_sxrr = (-9.*rsxy(i1o-4,i2o,i3o,1,0)+128.*
     & rsxy(i1o-3,i2o,i3o,1,0)-1008.*rsxy(i1o-2,i2o,i3o,1,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,0)-1008.*rsxy(i1o+2,i2o,i3o,1,0)+128.*
     & rsxy(i1o+3,i2o,i3o,1,0)-9.*rsxy(i1o+4,i2o,i3o,1,0))/(5040.*dr(
     & 0)**2)
                        aj_sxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,0)+168.*rsxy(i1o-4,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,0)+672.*rsxy(i1o-4,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,0)+32.*rsxy(i1o-4,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o-3,i2o-3,i3o,1,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o-3,i2o-1,i3o,1,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o-3,i2o+2,i3o,1,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o-3,i2o+4,i3o,1,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,0)-32.*rsxy(i1o-2,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,0)-672.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,0)-168.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,0)-3.*rsxy(i1o-2,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o-1,i2o-2,i3o,1,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o-1,i2o+1,i3o,1,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o-1,i2o+3,i3o,1,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,0)+168.*rsxy(i1o+1,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,0)+672.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,0)+32.*rsxy(i1o+1,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o+2,i2o-3,i3o,1,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o+2,i2o-1,i3o,1,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o+2,i2o+2,i3o,1,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o+2,i2o+4,i3o,1,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,0)-32.*rsxy(i1o+3,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,0)-672.*rsxy(i1o+3,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,0)-168.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,0)-3.*rsxy(i1o+3,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o+4,i2o-2,i3o,1,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o+4,i2o+1,i3o,1,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o+4,i2o+3,i3o,1,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_sxss = (-9.*rsxy(i1o,i2o-4,i3o,1,0)+128.*
     & rsxy(i1o,i2o-3,i3o,1,0)-1008.*rsxy(i1o,i2o-2,i3o,1,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,0)-1008.*rsxy(i1o,i2o+2,i3o,1,0)+128.*
     & rsxy(i1o,i2o+3,i3o,1,0)-9.*rsxy(i1o,i2o+4,i3o,1,0))/(5040.*dr(
     & 1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (3.*rsxy(i1o-4,i2o,i3o,0,1)-32.*rsxy(
     & i1o-3,i2o,i3o,0,1)+168.*rsxy(i1o-2,i2o,i3o,0,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+672.*rsxy(i1o+1,i2o,i3o,0,1)-168.*rsxy(i1o+2,
     & i2o,i3o,0,1)+32.*rsxy(i1o+3,i2o,i3o,0,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,1))/(840.*dr(0))
                        aj_rys = (3.*rsxy(i1o,i2o-4,i3o,0,1)-32.*rsxy(
     & i1o,i2o-3,i3o,0,1)+168.*rsxy(i1o,i2o-2,i3o,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o,i2o+1,i3o,0,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,1)+32.*rsxy(i1o,i2o+3,i3o,0,1)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 1))/(840.*dr(1))
                        aj_ryrr = (-9.*rsxy(i1o-4,i2o,i3o,0,1)+128.*
     & rsxy(i1o-3,i2o,i3o,0,1)-1008.*rsxy(i1o-2,i2o,i3o,0,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,1)-1008.*rsxy(i1o+2,i2o,i3o,0,1)+128.*
     & rsxy(i1o+3,i2o,i3o,0,1)-9.*rsxy(i1o+4,i2o,i3o,0,1))/(5040.*dr(
     & 0)**2)
                        aj_ryrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,1)+168.*rsxy(i1o-4,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,1)+672.*rsxy(i1o-4,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,1)+32.*rsxy(i1o-4,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o-3,i2o-3,i3o,0,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o-3,i2o-1,i3o,0,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o-3,i2o+2,i3o,0,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o-3,i2o+4,i3o,0,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,1)-32.*rsxy(i1o-2,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,1)-672.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,1)-168.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,1)-3.*rsxy(i1o-2,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o-1,i2o-2,i3o,0,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o-1,i2o+1,i3o,0,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o-1,i2o+3,i3o,0,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,1)+168.*rsxy(i1o+1,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,1)+672.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,1)+32.*rsxy(i1o+1,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o+2,i2o-3,i3o,0,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o+2,i2o-1,i3o,0,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o+2,i2o+2,i3o,0,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o+2,i2o+4,i3o,0,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,1)-32.*rsxy(i1o+3,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,1)-672.*rsxy(i1o+3,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,1)-168.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,1)-3.*rsxy(i1o+3,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o+4,i2o-2,i3o,0,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o+4,i2o+1,i3o,0,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o+4,i2o+3,i3o,0,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_ryss = (-9.*rsxy(i1o,i2o-4,i3o,0,1)+128.*
     & rsxy(i1o,i2o-3,i3o,0,1)-1008.*rsxy(i1o,i2o-2,i3o,0,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,1)-1008.*rsxy(i1o,i2o+2,i3o,0,1)+128.*
     & rsxy(i1o,i2o+3,i3o,0,1)-9.*rsxy(i1o,i2o+4,i3o,0,1))/(5040.*dr(
     & 1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (3.*rsxy(i1o-4,i2o,i3o,1,1)-32.*rsxy(
     & i1o-3,i2o,i3o,1,1)+168.*rsxy(i1o-2,i2o,i3o,1,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+672.*rsxy(i1o+1,i2o,i3o,1,1)-168.*rsxy(i1o+2,
     & i2o,i3o,1,1)+32.*rsxy(i1o+3,i2o,i3o,1,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,1))/(840.*dr(0))
                        aj_sys = (3.*rsxy(i1o,i2o-4,i3o,1,1)-32.*rsxy(
     & i1o,i2o-3,i3o,1,1)+168.*rsxy(i1o,i2o-2,i3o,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o,i2o+1,i3o,1,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,1)+32.*rsxy(i1o,i2o+3,i3o,1,1)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 1))/(840.*dr(1))
                        aj_syrr = (-9.*rsxy(i1o-4,i2o,i3o,1,1)+128.*
     & rsxy(i1o-3,i2o,i3o,1,1)-1008.*rsxy(i1o-2,i2o,i3o,1,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,1)-1008.*rsxy(i1o+2,i2o,i3o,1,1)+128.*
     & rsxy(i1o+3,i2o,i3o,1,1)-9.*rsxy(i1o+4,i2o,i3o,1,1))/(5040.*dr(
     & 0)**2)
                        aj_syrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,1)+168.*rsxy(i1o-4,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,1)+672.*rsxy(i1o-4,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,1)+32.*rsxy(i1o-4,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o-3,i2o-3,i3o,1,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o-3,i2o-1,i3o,1,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o-3,i2o+2,i3o,1,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o-3,i2o+4,i3o,1,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,1)-32.*rsxy(i1o-2,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,1)-672.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,1)-168.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,1)-3.*rsxy(i1o-2,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o-1,i2o-2,i3o,1,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o-1,i2o+1,i3o,1,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o-1,i2o+3,i3o,1,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,1)+168.*rsxy(i1o+1,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,1)+672.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,1)+32.*rsxy(i1o+1,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o+2,i2o-3,i3o,1,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o+2,i2o-1,i3o,1,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o+2,i2o+2,i3o,1,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o+2,i2o+4,i3o,1,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,1)-32.*rsxy(i1o+3,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,1)-672.*rsxy(i1o+3,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,1)-168.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,1)-3.*rsxy(i1o+3,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o+4,i2o-2,i3o,1,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o+4,i2o+1,i3o,1,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o+4,i2o+3,i3o,1,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_syss = (-9.*rsxy(i1o,i2o-4,i3o,1,1)+128.*
     & rsxy(i1o,i2o-3,i3o,1,1)-1008.*rsxy(i1o,i2o-2,i3o,1,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,1)-1008.*rsxy(i1o,i2o+2,i3o,1,1)+128.*
     & rsxy(i1o,i2o+3,i3o,1,1)-9.*rsxy(i1o,i2o+4,i3o,1,1))/(5040.*dr(
     & 1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     endif ! order of accuracy
                  else if ( nd.eq.3) then
                     if ( order.eq.2 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-1,i2o,i3o,0,0)+rsxy(i1o+1,
     & i2o,i3o,0,0))/(2.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-1,i3o,0,0)+rsxy(i1o,
     & i2o+1,i3o,0,0))/(2.*dr(1))
                        aj_rxt = (-rsxy(i1o,i2o,i3o-1,0,0)+rsxy(i1o,
     & i2o,i3o+1,0,0))/(2.*dr(2))
                        aj_rxrr = (rsxy(i1o-1,i2o,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o+1,i2o,i3o,0,0))/(dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,0)+rsxy(
     & i1o-1,i2o+1,i3o,0,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,0)+
     & rsxy(i1o+1,i2o+1,i3o,0,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_rxss = (rsxy(i1o,i2o-1,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o+1,i3o,0,0))/(dr(1)**2)
                        aj_rxrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,0)+rsxy(
     & i1o-1,i2o,i3o+1,0,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,0)+
     & rsxy(i1o+1,i2o,i3o+1,0,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_rxst = (-(-rsxy(i1o,i2o-1,i3o-1,0,0)+rsxy(
     & i1o,i2o-1,i3o+1,0,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,0)+
     & rsxy(i1o,i2o+1,i3o+1,0,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_rxtt = (rsxy(i1o,i2o,i3o-1,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o,i3o+1,0,0))/(dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-1,i2o,i3o,1,0)+rsxy(i1o+1,
     & i2o,i3o,1,0))/(2.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-1,i3o,1,0)+rsxy(i1o,
     & i2o+1,i3o,1,0))/(2.*dr(1))
                        aj_sxt = (-rsxy(i1o,i2o,i3o-1,1,0)+rsxy(i1o,
     & i2o,i3o+1,1,0))/(2.*dr(2))
                        aj_sxrr = (rsxy(i1o-1,i2o,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o+1,i2o,i3o,1,0))/(dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,0)+rsxy(
     & i1o-1,i2o+1,i3o,1,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,0)+
     & rsxy(i1o+1,i2o+1,i3o,1,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_sxss = (rsxy(i1o,i2o-1,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o+1,i3o,1,0))/(dr(1)**2)
                        aj_sxrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,0)+rsxy(
     & i1o-1,i2o,i3o+1,1,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,0)+
     & rsxy(i1o+1,i2o,i3o+1,1,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_sxst = (-(-rsxy(i1o,i2o-1,i3o-1,1,0)+rsxy(
     & i1o,i2o-1,i3o+1,1,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,0)+
     & rsxy(i1o,i2o+1,i3o+1,1,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_sxtt = (rsxy(i1o,i2o,i3o-1,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o,i3o+1,1,0))/(dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (-rsxy(i1o-1,i2o,i3o,2,0)+rsxy(i1o+1,
     & i2o,i3o,2,0))/(2.*dr(0))
                        aj_txs = (-rsxy(i1o,i2o-1,i3o,2,0)+rsxy(i1o,
     & i2o+1,i3o,2,0))/(2.*dr(1))
                        aj_txt = (-rsxy(i1o,i2o,i3o-1,2,0)+rsxy(i1o,
     & i2o,i3o+1,2,0))/(2.*dr(2))
                        aj_txrr = (rsxy(i1o-1,i2o,i3o,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o+1,i2o,i3o,2,0))/(dr(0)**2)
                        aj_txrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,0)+rsxy(
     & i1o-1,i2o+1,i3o,2,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,0)+
     & rsxy(i1o+1,i2o+1,i3o,2,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_txss = (rsxy(i1o,i2o-1,i3o,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o,i2o+1,i3o,2,0))/(dr(1)**2)
                        aj_txrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,0)+rsxy(
     & i1o-1,i2o,i3o+1,2,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,0)+
     & rsxy(i1o+1,i2o,i3o+1,2,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_txst = (-(-rsxy(i1o,i2o-1,i3o-1,2,0)+rsxy(
     & i1o,i2o-1,i3o+1,2,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,0)+
     & rsxy(i1o,i2o+1,i3o+1,2,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_txtt = (rsxy(i1o,i2o,i3o-1,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o,i2o,i3o+1,2,0))/(dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-1,i2o,i3o,0,1)+rsxy(i1o+1,
     & i2o,i3o,0,1))/(2.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-1,i3o,0,1)+rsxy(i1o,
     & i2o+1,i3o,0,1))/(2.*dr(1))
                        aj_ryt = (-rsxy(i1o,i2o,i3o-1,0,1)+rsxy(i1o,
     & i2o,i3o+1,0,1))/(2.*dr(2))
                        aj_ryrr = (rsxy(i1o-1,i2o,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o+1,i2o,i3o,0,1))/(dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,1)+rsxy(
     & i1o-1,i2o+1,i3o,0,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,1)+
     & rsxy(i1o+1,i2o+1,i3o,0,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_ryss = (rsxy(i1o,i2o-1,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o+1,i3o,0,1))/(dr(1)**2)
                        aj_ryrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,1)+rsxy(
     & i1o-1,i2o,i3o+1,0,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,1)+
     & rsxy(i1o+1,i2o,i3o+1,0,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_ryst = (-(-rsxy(i1o,i2o-1,i3o-1,0,1)+rsxy(
     & i1o,i2o-1,i3o+1,0,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,1)+
     & rsxy(i1o,i2o+1,i3o+1,0,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_rytt = (rsxy(i1o,i2o,i3o-1,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o,i3o+1,0,1))/(dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-1,i2o,i3o,1,1)+rsxy(i1o+1,
     & i2o,i3o,1,1))/(2.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-1,i3o,1,1)+rsxy(i1o,
     & i2o+1,i3o,1,1))/(2.*dr(1))
                        aj_syt = (-rsxy(i1o,i2o,i3o-1,1,1)+rsxy(i1o,
     & i2o,i3o+1,1,1))/(2.*dr(2))
                        aj_syrr = (rsxy(i1o-1,i2o,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o+1,i2o,i3o,1,1))/(dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,1)+rsxy(
     & i1o-1,i2o+1,i3o,1,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,1)+
     & rsxy(i1o+1,i2o+1,i3o,1,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_syss = (rsxy(i1o,i2o-1,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o+1,i3o,1,1))/(dr(1)**2)
                        aj_syrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,1)+rsxy(
     & i1o-1,i2o,i3o+1,1,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,1)+
     & rsxy(i1o+1,i2o,i3o+1,1,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_syst = (-(-rsxy(i1o,i2o-1,i3o-1,1,1)+rsxy(
     & i1o,i2o-1,i3o+1,1,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,1)+
     & rsxy(i1o,i2o+1,i3o+1,1,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_sytt = (rsxy(i1o,i2o,i3o-1,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o,i3o+1,1,1))/(dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (-rsxy(i1o-1,i2o,i3o,2,1)+rsxy(i1o+1,
     & i2o,i3o,2,1))/(2.*dr(0))
                        aj_tys = (-rsxy(i1o,i2o-1,i3o,2,1)+rsxy(i1o,
     & i2o+1,i3o,2,1))/(2.*dr(1))
                        aj_tyt = (-rsxy(i1o,i2o,i3o-1,2,1)+rsxy(i1o,
     & i2o,i3o+1,2,1))/(2.*dr(2))
                        aj_tyrr = (rsxy(i1o-1,i2o,i3o,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o+1,i2o,i3o,2,1))/(dr(0)**2)
                        aj_tyrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,1)+rsxy(
     & i1o-1,i2o+1,i3o,2,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,1)+
     & rsxy(i1o+1,i2o+1,i3o,2,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_tyss = (rsxy(i1o,i2o-1,i3o,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o,i2o+1,i3o,2,1))/(dr(1)**2)
                        aj_tyrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,1)+rsxy(
     & i1o-1,i2o,i3o+1,2,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,1)+
     & rsxy(i1o+1,i2o,i3o+1,2,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_tyst = (-(-rsxy(i1o,i2o-1,i3o-1,2,1)+rsxy(
     & i1o,i2o-1,i3o+1,2,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,1)+
     & rsxy(i1o,i2o+1,i3o+1,2,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_tytt = (rsxy(i1o,i2o,i3o-1,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o,i2o,i3o+1,2,1))/(dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (-rsxy(i1o-1,i2o,i3o,0,2)+rsxy(i1o+1,
     & i2o,i3o,0,2))/(2.*dr(0))
                        aj_rzs = (-rsxy(i1o,i2o-1,i3o,0,2)+rsxy(i1o,
     & i2o+1,i3o,0,2))/(2.*dr(1))
                        aj_rzt = (-rsxy(i1o,i2o,i3o-1,0,2)+rsxy(i1o,
     & i2o,i3o+1,0,2))/(2.*dr(2))
                        aj_rzrr = (rsxy(i1o-1,i2o,i3o,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o+1,i2o,i3o,0,2))/(dr(0)**2)
                        aj_rzrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,2)+rsxy(
     & i1o-1,i2o+1,i3o,0,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,2)+
     & rsxy(i1o+1,i2o+1,i3o,0,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_rzss = (rsxy(i1o,i2o-1,i3o,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o,i2o+1,i3o,0,2))/(dr(1)**2)
                        aj_rzrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,2)+rsxy(
     & i1o-1,i2o,i3o+1,0,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,2)+
     & rsxy(i1o+1,i2o,i3o+1,0,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_rzst = (-(-rsxy(i1o,i2o-1,i3o-1,0,2)+rsxy(
     & i1o,i2o-1,i3o+1,0,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,2)+
     & rsxy(i1o,i2o+1,i3o+1,0,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_rztt = (rsxy(i1o,i2o,i3o-1,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o,i2o,i3o+1,0,2))/(dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (-rsxy(i1o-1,i2o,i3o,1,2)+rsxy(i1o+1,
     & i2o,i3o,1,2))/(2.*dr(0))
                        aj_szs = (-rsxy(i1o,i2o-1,i3o,1,2)+rsxy(i1o,
     & i2o+1,i3o,1,2))/(2.*dr(1))
                        aj_szt = (-rsxy(i1o,i2o,i3o-1,1,2)+rsxy(i1o,
     & i2o,i3o+1,1,2))/(2.*dr(2))
                        aj_szrr = (rsxy(i1o-1,i2o,i3o,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o+1,i2o,i3o,1,2))/(dr(0)**2)
                        aj_szrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,2)+rsxy(
     & i1o-1,i2o+1,i3o,1,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,2)+
     & rsxy(i1o+1,i2o+1,i3o,1,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_szss = (rsxy(i1o,i2o-1,i3o,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o,i2o+1,i3o,1,2))/(dr(1)**2)
                        aj_szrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,2)+rsxy(
     & i1o-1,i2o,i3o+1,1,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,2)+
     & rsxy(i1o+1,i2o,i3o+1,1,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_szst = (-(-rsxy(i1o,i2o-1,i3o-1,1,2)+rsxy(
     & i1o,i2o-1,i3o+1,1,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,2)+
     & rsxy(i1o,i2o+1,i3o+1,1,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_sztt = (rsxy(i1o,i2o,i3o-1,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o,i2o,i3o+1,1,2))/(dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (-rsxy(i1o-1,i2o,i3o,2,2)+rsxy(i1o+1,
     & i2o,i3o,2,2))/(2.*dr(0))
                        aj_tzs = (-rsxy(i1o,i2o-1,i3o,2,2)+rsxy(i1o,
     & i2o+1,i3o,2,2))/(2.*dr(1))
                        aj_tzt = (-rsxy(i1o,i2o,i3o-1,2,2)+rsxy(i1o,
     & i2o,i3o+1,2,2))/(2.*dr(2))
                        aj_tzrr = (rsxy(i1o-1,i2o,i3o,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o+1,i2o,i3o,2,2))/(dr(0)**2)
                        aj_tzrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,2)+rsxy(
     & i1o-1,i2o+1,i3o,2,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,2)+
     & rsxy(i1o+1,i2o+1,i3o,2,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_tzss = (rsxy(i1o,i2o-1,i3o,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o,i2o+1,i3o,2,2))/(dr(1)**2)
                        aj_tzrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,2)+rsxy(
     & i1o-1,i2o,i3o+1,2,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,2)+
     & rsxy(i1o+1,i2o,i3o+1,2,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_tzst = (-(-rsxy(i1o,i2o-1,i3o-1,2,2)+rsxy(
     & i1o,i2o-1,i3o+1,2,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,2)+
     & rsxy(i1o,i2o+1,i3o+1,2,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_tztt = (rsxy(i1o,i2o,i3o-1,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o,i2o,i3o+1,2,2))/(dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.4 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (rsxy(i1o-2,i2o,i3o,0,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+8.*rsxy(i1o+1,i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,
     & 0))/(12.*dr(0))
                        aj_rxs = (rsxy(i1o,i2o-2,i3o,0,0)-8.*rsxy(i1o,
     & i2o-1,i3o,0,0)+8.*rsxy(i1o,i2o+1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,
     & 0))/(12.*dr(1))
                        aj_rxt = (rsxy(i1o,i2o,i3o-2,0,0)-8.*rsxy(i1o,
     & i2o,i3o-1,0,0)+8.*rsxy(i1o,i2o,i3o+1,0,0)-rsxy(i1o,i2o,i3o+2,0,
     & 0))/(12.*dr(2))
                        aj_rxrr = (-rsxy(i1o-2,i2o,i3o,0,0)+16.*rsxy(
     & i1o-1,i2o,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o+1,
     & i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,0))/(12.*dr(0)**2)
                        aj_rxrs = ((rsxy(i1o-2,i2o-2,i3o,0,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,0)+8.*rsxy(i1o-2,i2o+1,i3o,0,0)-rsxy(i1o-2,
     & i2o+2,i3o,0,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,0)+8.*rsxy(i1o-1,i2o+1,i3o,0,0)-rsxy(
     & i1o-1,i2o+2,i3o,0,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,0)+8.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & rsxy(i1o+1,i2o+2,i3o,0,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,0,0)+8.*rsxy(i1o+2,i2o+1,i3o,0,0)-
     & rsxy(i1o+2,i2o+2,i3o,0,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_rxss = (-rsxy(i1o,i2o-2,i3o,0,0)+16.*rsxy(
     & i1o,i2o-1,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,0))/(12.*dr(1)**2)
                        aj_rxrt = ((rsxy(i1o-2,i2o,i3o-2,0,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,0)+8.*rsxy(i1o-2,i2o,i3o+1,0,0)-rsxy(i1o-2,
     & i2o,i3o+2,0,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,0)+8.*rsxy(i1o-1,i2o,i3o+1,0,0)-rsxy(
     & i1o-1,i2o,i3o+2,0,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,0)+8.*rsxy(i1o+1,i2o,i3o+1,0,0)-
     & rsxy(i1o+1,i2o,i3o+2,0,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,0,0)+8.*rsxy(i1o+2,i2o,i3o+1,0,0)-
     & rsxy(i1o+2,i2o,i3o+2,0,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_rxst = ((rsxy(i1o,i2o-2,i3o-2,0,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,0)+8.*rsxy(i1o,i2o-2,i3o+1,0,0)-rsxy(i1o,i2o-
     & 2,i3o+2,0,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,0)+8.*rsxy(i1o,i2o-1,i3o+1,0,0)-rsxy(
     & i1o,i2o-1,i3o+2,0,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,0)+8.*rsxy(i1o,i2o+1,i3o+1,0,0)-
     & rsxy(i1o,i2o+1,i3o+2,0,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,0,0)+8.*rsxy(i1o,i2o+2,i3o+1,0,0)-
     & rsxy(i1o,i2o+2,i3o+2,0,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_rxtt = (-rsxy(i1o,i2o,i3o-2,0,0)+16.*rsxy(
     & i1o,i2o,i3o-1,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o,
     & i3o+1,0,0)-rsxy(i1o,i2o,i3o+2,0,0))/(12.*dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (rsxy(i1o-2,i2o,i3o,1,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+8.*rsxy(i1o+1,i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,
     & 0))/(12.*dr(0))
                        aj_sxs = (rsxy(i1o,i2o-2,i3o,1,0)-8.*rsxy(i1o,
     & i2o-1,i3o,1,0)+8.*rsxy(i1o,i2o+1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,
     & 0))/(12.*dr(1))
                        aj_sxt = (rsxy(i1o,i2o,i3o-2,1,0)-8.*rsxy(i1o,
     & i2o,i3o-1,1,0)+8.*rsxy(i1o,i2o,i3o+1,1,0)-rsxy(i1o,i2o,i3o+2,1,
     & 0))/(12.*dr(2))
                        aj_sxrr = (-rsxy(i1o-2,i2o,i3o,1,0)+16.*rsxy(
     & i1o-1,i2o,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o+1,
     & i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,0))/(12.*dr(0)**2)
                        aj_sxrs = ((rsxy(i1o-2,i2o-2,i3o,1,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,0)+8.*rsxy(i1o-2,i2o+1,i3o,1,0)-rsxy(i1o-2,
     & i2o+2,i3o,1,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,0)+8.*rsxy(i1o-1,i2o+1,i3o,1,0)-rsxy(
     & i1o-1,i2o+2,i3o,1,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,0)+8.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & rsxy(i1o+1,i2o+2,i3o,1,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,1,0)+8.*rsxy(i1o+2,i2o+1,i3o,1,0)-
     & rsxy(i1o+2,i2o+2,i3o,1,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_sxss = (-rsxy(i1o,i2o-2,i3o,1,0)+16.*rsxy(
     & i1o,i2o-1,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,0))/(12.*dr(1)**2)
                        aj_sxrt = ((rsxy(i1o-2,i2o,i3o-2,1,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,0)+8.*rsxy(i1o-2,i2o,i3o+1,1,0)-rsxy(i1o-2,
     & i2o,i3o+2,1,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,0)+8.*rsxy(i1o-1,i2o,i3o+1,1,0)-rsxy(
     & i1o-1,i2o,i3o+2,1,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,0)+8.*rsxy(i1o+1,i2o,i3o+1,1,0)-
     & rsxy(i1o+1,i2o,i3o+2,1,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,1,0)+8.*rsxy(i1o+2,i2o,i3o+1,1,0)-
     & rsxy(i1o+2,i2o,i3o+2,1,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_sxst = ((rsxy(i1o,i2o-2,i3o-2,1,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,0)+8.*rsxy(i1o,i2o-2,i3o+1,1,0)-rsxy(i1o,i2o-
     & 2,i3o+2,1,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,0)+8.*rsxy(i1o,i2o-1,i3o+1,1,0)-rsxy(
     & i1o,i2o-1,i3o+2,1,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,0)+8.*rsxy(i1o,i2o+1,i3o+1,1,0)-
     & rsxy(i1o,i2o+1,i3o+2,1,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,1,0)+8.*rsxy(i1o,i2o+2,i3o+1,1,0)-
     & rsxy(i1o,i2o+2,i3o+2,1,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_sxtt = (-rsxy(i1o,i2o,i3o-2,1,0)+16.*rsxy(
     & i1o,i2o,i3o-1,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o,
     & i3o+1,1,0)-rsxy(i1o,i2o,i3o+2,1,0))/(12.*dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (rsxy(i1o-2,i2o,i3o,2,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,0)+8.*rsxy(i1o+1,i2o,i3o,2,0)-rsxy(i1o+2,i2o,i3o,2,
     & 0))/(12.*dr(0))
                        aj_txs = (rsxy(i1o,i2o-2,i3o,2,0)-8.*rsxy(i1o,
     & i2o-1,i3o,2,0)+8.*rsxy(i1o,i2o+1,i3o,2,0)-rsxy(i1o,i2o+2,i3o,2,
     & 0))/(12.*dr(1))
                        aj_txt = (rsxy(i1o,i2o,i3o-2,2,0)-8.*rsxy(i1o,
     & i2o,i3o-1,2,0)+8.*rsxy(i1o,i2o,i3o+1,2,0)-rsxy(i1o,i2o,i3o+2,2,
     & 0))/(12.*dr(2))
                        aj_txrr = (-rsxy(i1o-2,i2o,i3o,2,0)+16.*rsxy(
     & i1o-1,i2o,i3o,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o+1,
     & i2o,i3o,2,0)-rsxy(i1o+2,i2o,i3o,2,0))/(12.*dr(0)**2)
                        aj_txrs = ((rsxy(i1o-2,i2o-2,i3o,2,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,0)+8.*rsxy(i1o-2,i2o+1,i3o,2,0)-rsxy(i1o-2,
     & i2o+2,i3o,2,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,0)+8.*rsxy(i1o-1,i2o+1,i3o,2,0)-rsxy(
     & i1o-1,i2o+2,i3o,2,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,0)+8.*rsxy(i1o+1,i2o+1,i3o,2,0)-
     & rsxy(i1o+1,i2o+2,i3o,2,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,2,0)+8.*rsxy(i1o+2,i2o+1,i3o,2,0)-
     & rsxy(i1o+2,i2o+2,i3o,2,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_txss = (-rsxy(i1o,i2o-2,i3o,2,0)+16.*rsxy(
     & i1o,i2o-1,i3o,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,0)-rsxy(i1o,i2o+2,i3o,2,0))/(12.*dr(1)**2)
                        aj_txrt = ((rsxy(i1o-2,i2o,i3o-2,2,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,0)+8.*rsxy(i1o-2,i2o,i3o+1,2,0)-rsxy(i1o-2,
     & i2o,i3o+2,2,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,0)+8.*rsxy(i1o-1,i2o,i3o+1,2,0)-rsxy(
     & i1o-1,i2o,i3o+2,2,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,0)+8.*rsxy(i1o+1,i2o,i3o+1,2,0)-
     & rsxy(i1o+1,i2o,i3o+2,2,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,2,0)+8.*rsxy(i1o+2,i2o,i3o+1,2,0)-
     & rsxy(i1o+2,i2o,i3o+2,2,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_txst = ((rsxy(i1o,i2o-2,i3o-2,2,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,0)+8.*rsxy(i1o,i2o-2,i3o+1,2,0)-rsxy(i1o,i2o-
     & 2,i3o+2,2,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,0)+8.*rsxy(i1o,i2o-1,i3o+1,2,0)-rsxy(
     & i1o,i2o-1,i3o+2,2,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,0)+8.*rsxy(i1o,i2o+1,i3o+1,2,0)-
     & rsxy(i1o,i2o+1,i3o+2,2,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,2,0)+8.*rsxy(i1o,i2o+2,i3o+1,2,0)-
     & rsxy(i1o,i2o+2,i3o+2,2,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_txtt = (-rsxy(i1o,i2o,i3o-2,2,0)+16.*rsxy(
     & i1o,i2o,i3o-1,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o,i2o,
     & i3o+1,2,0)-rsxy(i1o,i2o,i3o+2,2,0))/(12.*dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (rsxy(i1o-2,i2o,i3o,0,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+8.*rsxy(i1o+1,i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,
     & 1))/(12.*dr(0))
                        aj_rys = (rsxy(i1o,i2o-2,i3o,0,1)-8.*rsxy(i1o,
     & i2o-1,i3o,0,1)+8.*rsxy(i1o,i2o+1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,
     & 1))/(12.*dr(1))
                        aj_ryt = (rsxy(i1o,i2o,i3o-2,0,1)-8.*rsxy(i1o,
     & i2o,i3o-1,0,1)+8.*rsxy(i1o,i2o,i3o+1,0,1)-rsxy(i1o,i2o,i3o+2,0,
     & 1))/(12.*dr(2))
                        aj_ryrr = (-rsxy(i1o-2,i2o,i3o,0,1)+16.*rsxy(
     & i1o-1,i2o,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o+1,
     & i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,1))/(12.*dr(0)**2)
                        aj_ryrs = ((rsxy(i1o-2,i2o-2,i3o,0,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,1)+8.*rsxy(i1o-2,i2o+1,i3o,0,1)-rsxy(i1o-2,
     & i2o+2,i3o,0,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,1)+8.*rsxy(i1o-1,i2o+1,i3o,0,1)-rsxy(
     & i1o-1,i2o+2,i3o,0,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,1)+8.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & rsxy(i1o+1,i2o+2,i3o,0,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,0,1)+8.*rsxy(i1o+2,i2o+1,i3o,0,1)-
     & rsxy(i1o+2,i2o+2,i3o,0,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_ryss = (-rsxy(i1o,i2o-2,i3o,0,1)+16.*rsxy(
     & i1o,i2o-1,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,1))/(12.*dr(1)**2)
                        aj_ryrt = ((rsxy(i1o-2,i2o,i3o-2,0,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,1)+8.*rsxy(i1o-2,i2o,i3o+1,0,1)-rsxy(i1o-2,
     & i2o,i3o+2,0,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,1)+8.*rsxy(i1o-1,i2o,i3o+1,0,1)-rsxy(
     & i1o-1,i2o,i3o+2,0,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,1)+8.*rsxy(i1o+1,i2o,i3o+1,0,1)-
     & rsxy(i1o+1,i2o,i3o+2,0,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,0,1)+8.*rsxy(i1o+2,i2o,i3o+1,0,1)-
     & rsxy(i1o+2,i2o,i3o+2,0,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_ryst = ((rsxy(i1o,i2o-2,i3o-2,0,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,1)+8.*rsxy(i1o,i2o-2,i3o+1,0,1)-rsxy(i1o,i2o-
     & 2,i3o+2,0,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,1)+8.*rsxy(i1o,i2o-1,i3o+1,0,1)-rsxy(
     & i1o,i2o-1,i3o+2,0,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,1)+8.*rsxy(i1o,i2o+1,i3o+1,0,1)-
     & rsxy(i1o,i2o+1,i3o+2,0,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,0,1)+8.*rsxy(i1o,i2o+2,i3o+1,0,1)-
     & rsxy(i1o,i2o+2,i3o+2,0,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_rytt = (-rsxy(i1o,i2o,i3o-2,0,1)+16.*rsxy(
     & i1o,i2o,i3o-1,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o,
     & i3o+1,0,1)-rsxy(i1o,i2o,i3o+2,0,1))/(12.*dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (rsxy(i1o-2,i2o,i3o,1,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+8.*rsxy(i1o+1,i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,
     & 1))/(12.*dr(0))
                        aj_sys = (rsxy(i1o,i2o-2,i3o,1,1)-8.*rsxy(i1o,
     & i2o-1,i3o,1,1)+8.*rsxy(i1o,i2o+1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,
     & 1))/(12.*dr(1))
                        aj_syt = (rsxy(i1o,i2o,i3o-2,1,1)-8.*rsxy(i1o,
     & i2o,i3o-1,1,1)+8.*rsxy(i1o,i2o,i3o+1,1,1)-rsxy(i1o,i2o,i3o+2,1,
     & 1))/(12.*dr(2))
                        aj_syrr = (-rsxy(i1o-2,i2o,i3o,1,1)+16.*rsxy(
     & i1o-1,i2o,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o+1,
     & i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,1))/(12.*dr(0)**2)
                        aj_syrs = ((rsxy(i1o-2,i2o-2,i3o,1,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,1)+8.*rsxy(i1o-2,i2o+1,i3o,1,1)-rsxy(i1o-2,
     & i2o+2,i3o,1,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,1)+8.*rsxy(i1o-1,i2o+1,i3o,1,1)-rsxy(
     & i1o-1,i2o+2,i3o,1,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,1)+8.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & rsxy(i1o+1,i2o+2,i3o,1,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,1,1)+8.*rsxy(i1o+2,i2o+1,i3o,1,1)-
     & rsxy(i1o+2,i2o+2,i3o,1,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_syss = (-rsxy(i1o,i2o-2,i3o,1,1)+16.*rsxy(
     & i1o,i2o-1,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,1))/(12.*dr(1)**2)
                        aj_syrt = ((rsxy(i1o-2,i2o,i3o-2,1,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,1)+8.*rsxy(i1o-2,i2o,i3o+1,1,1)-rsxy(i1o-2,
     & i2o,i3o+2,1,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,1)+8.*rsxy(i1o-1,i2o,i3o+1,1,1)-rsxy(
     & i1o-1,i2o,i3o+2,1,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,1)+8.*rsxy(i1o+1,i2o,i3o+1,1,1)-
     & rsxy(i1o+1,i2o,i3o+2,1,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,1,1)+8.*rsxy(i1o+2,i2o,i3o+1,1,1)-
     & rsxy(i1o+2,i2o,i3o+2,1,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_syst = ((rsxy(i1o,i2o-2,i3o-2,1,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,1)+8.*rsxy(i1o,i2o-2,i3o+1,1,1)-rsxy(i1o,i2o-
     & 2,i3o+2,1,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,1)+8.*rsxy(i1o,i2o-1,i3o+1,1,1)-rsxy(
     & i1o,i2o-1,i3o+2,1,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,1)+8.*rsxy(i1o,i2o+1,i3o+1,1,1)-
     & rsxy(i1o,i2o+1,i3o+2,1,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,1,1)+8.*rsxy(i1o,i2o+2,i3o+1,1,1)-
     & rsxy(i1o,i2o+2,i3o+2,1,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_sytt = (-rsxy(i1o,i2o,i3o-2,1,1)+16.*rsxy(
     & i1o,i2o,i3o-1,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o,
     & i3o+1,1,1)-rsxy(i1o,i2o,i3o+2,1,1))/(12.*dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (rsxy(i1o-2,i2o,i3o,2,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,1)+8.*rsxy(i1o+1,i2o,i3o,2,1)-rsxy(i1o+2,i2o,i3o,2,
     & 1))/(12.*dr(0))
                        aj_tys = (rsxy(i1o,i2o-2,i3o,2,1)-8.*rsxy(i1o,
     & i2o-1,i3o,2,1)+8.*rsxy(i1o,i2o+1,i3o,2,1)-rsxy(i1o,i2o+2,i3o,2,
     & 1))/(12.*dr(1))
                        aj_tyt = (rsxy(i1o,i2o,i3o-2,2,1)-8.*rsxy(i1o,
     & i2o,i3o-1,2,1)+8.*rsxy(i1o,i2o,i3o+1,2,1)-rsxy(i1o,i2o,i3o+2,2,
     & 1))/(12.*dr(2))
                        aj_tyrr = (-rsxy(i1o-2,i2o,i3o,2,1)+16.*rsxy(
     & i1o-1,i2o,i3o,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o+1,
     & i2o,i3o,2,1)-rsxy(i1o+2,i2o,i3o,2,1))/(12.*dr(0)**2)
                        aj_tyrs = ((rsxy(i1o-2,i2o-2,i3o,2,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,1)+8.*rsxy(i1o-2,i2o+1,i3o,2,1)-rsxy(i1o-2,
     & i2o+2,i3o,2,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,1)+8.*rsxy(i1o-1,i2o+1,i3o,2,1)-rsxy(
     & i1o-1,i2o+2,i3o,2,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,1)+8.*rsxy(i1o+1,i2o+1,i3o,2,1)-
     & rsxy(i1o+1,i2o+2,i3o,2,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,2,1)+8.*rsxy(i1o+2,i2o+1,i3o,2,1)-
     & rsxy(i1o+2,i2o+2,i3o,2,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_tyss = (-rsxy(i1o,i2o-2,i3o,2,1)+16.*rsxy(
     & i1o,i2o-1,i3o,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,1)-rsxy(i1o,i2o+2,i3o,2,1))/(12.*dr(1)**2)
                        aj_tyrt = ((rsxy(i1o-2,i2o,i3o-2,2,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,1)+8.*rsxy(i1o-2,i2o,i3o+1,2,1)-rsxy(i1o-2,
     & i2o,i3o+2,2,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,1)+8.*rsxy(i1o-1,i2o,i3o+1,2,1)-rsxy(
     & i1o-1,i2o,i3o+2,2,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,1)+8.*rsxy(i1o+1,i2o,i3o+1,2,1)-
     & rsxy(i1o+1,i2o,i3o+2,2,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,2,1)+8.*rsxy(i1o+2,i2o,i3o+1,2,1)-
     & rsxy(i1o+2,i2o,i3o+2,2,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_tyst = ((rsxy(i1o,i2o-2,i3o-2,2,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,1)+8.*rsxy(i1o,i2o-2,i3o+1,2,1)-rsxy(i1o,i2o-
     & 2,i3o+2,2,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,1)+8.*rsxy(i1o,i2o-1,i3o+1,2,1)-rsxy(
     & i1o,i2o-1,i3o+2,2,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,1)+8.*rsxy(i1o,i2o+1,i3o+1,2,1)-
     & rsxy(i1o,i2o+1,i3o+2,2,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,2,1)+8.*rsxy(i1o,i2o+2,i3o+1,2,1)-
     & rsxy(i1o,i2o+2,i3o+2,2,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_tytt = (-rsxy(i1o,i2o,i3o-2,2,1)+16.*rsxy(
     & i1o,i2o,i3o-1,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o,i2o,
     & i3o+1,2,1)-rsxy(i1o,i2o,i3o+2,2,1))/(12.*dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (rsxy(i1o-2,i2o,i3o,0,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,2)+8.*rsxy(i1o+1,i2o,i3o,0,2)-rsxy(i1o+2,i2o,i3o,0,
     & 2))/(12.*dr(0))
                        aj_rzs = (rsxy(i1o,i2o-2,i3o,0,2)-8.*rsxy(i1o,
     & i2o-1,i3o,0,2)+8.*rsxy(i1o,i2o+1,i3o,0,2)-rsxy(i1o,i2o+2,i3o,0,
     & 2))/(12.*dr(1))
                        aj_rzt = (rsxy(i1o,i2o,i3o-2,0,2)-8.*rsxy(i1o,
     & i2o,i3o-1,0,2)+8.*rsxy(i1o,i2o,i3o+1,0,2)-rsxy(i1o,i2o,i3o+2,0,
     & 2))/(12.*dr(2))
                        aj_rzrr = (-rsxy(i1o-2,i2o,i3o,0,2)+16.*rsxy(
     & i1o-1,i2o,i3o,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o+1,
     & i2o,i3o,0,2)-rsxy(i1o+2,i2o,i3o,0,2))/(12.*dr(0)**2)
                        aj_rzrs = ((rsxy(i1o-2,i2o-2,i3o,0,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,2)+8.*rsxy(i1o-2,i2o+1,i3o,0,2)-rsxy(i1o-2,
     & i2o+2,i3o,0,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,2)+8.*rsxy(i1o-1,i2o+1,i3o,0,2)-rsxy(
     & i1o-1,i2o+2,i3o,0,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,2)+8.*rsxy(i1o+1,i2o+1,i3o,0,2)-
     & rsxy(i1o+1,i2o+2,i3o,0,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,0,2)+8.*rsxy(i1o+2,i2o+1,i3o,0,2)-
     & rsxy(i1o+2,i2o+2,i3o,0,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_rzss = (-rsxy(i1o,i2o-2,i3o,0,2)+16.*rsxy(
     & i1o,i2o-1,i3o,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,2)-rsxy(i1o,i2o+2,i3o,0,2))/(12.*dr(1)**2)
                        aj_rzrt = ((rsxy(i1o-2,i2o,i3o-2,0,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,2)+8.*rsxy(i1o-2,i2o,i3o+1,0,2)-rsxy(i1o-2,
     & i2o,i3o+2,0,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,2)+8.*rsxy(i1o-1,i2o,i3o+1,0,2)-rsxy(
     & i1o-1,i2o,i3o+2,0,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,2)+8.*rsxy(i1o+1,i2o,i3o+1,0,2)-
     & rsxy(i1o+1,i2o,i3o+2,0,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,0,2)+8.*rsxy(i1o+2,i2o,i3o+1,0,2)-
     & rsxy(i1o+2,i2o,i3o+2,0,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_rzst = ((rsxy(i1o,i2o-2,i3o-2,0,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,2)+8.*rsxy(i1o,i2o-2,i3o+1,0,2)-rsxy(i1o,i2o-
     & 2,i3o+2,0,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,2)+8.*rsxy(i1o,i2o-1,i3o+1,0,2)-rsxy(
     & i1o,i2o-1,i3o+2,0,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,2)+8.*rsxy(i1o,i2o+1,i3o+1,0,2)-
     & rsxy(i1o,i2o+1,i3o+2,0,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,0,2)+8.*rsxy(i1o,i2o+2,i3o+1,0,2)-
     & rsxy(i1o,i2o+2,i3o+2,0,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_rztt = (-rsxy(i1o,i2o,i3o-2,0,2)+16.*rsxy(
     & i1o,i2o,i3o-1,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o,i2o,
     & i3o+1,0,2)-rsxy(i1o,i2o,i3o+2,0,2))/(12.*dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (rsxy(i1o-2,i2o,i3o,1,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,2)+8.*rsxy(i1o+1,i2o,i3o,1,2)-rsxy(i1o+2,i2o,i3o,1,
     & 2))/(12.*dr(0))
                        aj_szs = (rsxy(i1o,i2o-2,i3o,1,2)-8.*rsxy(i1o,
     & i2o-1,i3o,1,2)+8.*rsxy(i1o,i2o+1,i3o,1,2)-rsxy(i1o,i2o+2,i3o,1,
     & 2))/(12.*dr(1))
                        aj_szt = (rsxy(i1o,i2o,i3o-2,1,2)-8.*rsxy(i1o,
     & i2o,i3o-1,1,2)+8.*rsxy(i1o,i2o,i3o+1,1,2)-rsxy(i1o,i2o,i3o+2,1,
     & 2))/(12.*dr(2))
                        aj_szrr = (-rsxy(i1o-2,i2o,i3o,1,2)+16.*rsxy(
     & i1o-1,i2o,i3o,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o+1,
     & i2o,i3o,1,2)-rsxy(i1o+2,i2o,i3o,1,2))/(12.*dr(0)**2)
                        aj_szrs = ((rsxy(i1o-2,i2o-2,i3o,1,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,2)+8.*rsxy(i1o-2,i2o+1,i3o,1,2)-rsxy(i1o-2,
     & i2o+2,i3o,1,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,2)+8.*rsxy(i1o-1,i2o+1,i3o,1,2)-rsxy(
     & i1o-1,i2o+2,i3o,1,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,2)+8.*rsxy(i1o+1,i2o+1,i3o,1,2)-
     & rsxy(i1o+1,i2o+2,i3o,1,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,1,2)+8.*rsxy(i1o+2,i2o+1,i3o,1,2)-
     & rsxy(i1o+2,i2o+2,i3o,1,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_szss = (-rsxy(i1o,i2o-2,i3o,1,2)+16.*rsxy(
     & i1o,i2o-1,i3o,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,2)-rsxy(i1o,i2o+2,i3o,1,2))/(12.*dr(1)**2)
                        aj_szrt = ((rsxy(i1o-2,i2o,i3o-2,1,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,2)+8.*rsxy(i1o-2,i2o,i3o+1,1,2)-rsxy(i1o-2,
     & i2o,i3o+2,1,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,2)+8.*rsxy(i1o-1,i2o,i3o+1,1,2)-rsxy(
     & i1o-1,i2o,i3o+2,1,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,2)+8.*rsxy(i1o+1,i2o,i3o+1,1,2)-
     & rsxy(i1o+1,i2o,i3o+2,1,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,1,2)+8.*rsxy(i1o+2,i2o,i3o+1,1,2)-
     & rsxy(i1o+2,i2o,i3o+2,1,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_szst = ((rsxy(i1o,i2o-2,i3o-2,1,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,2)+8.*rsxy(i1o,i2o-2,i3o+1,1,2)-rsxy(i1o,i2o-
     & 2,i3o+2,1,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,2)+8.*rsxy(i1o,i2o-1,i3o+1,1,2)-rsxy(
     & i1o,i2o-1,i3o+2,1,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,2)+8.*rsxy(i1o,i2o+1,i3o+1,1,2)-
     & rsxy(i1o,i2o+1,i3o+2,1,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,1,2)+8.*rsxy(i1o,i2o+2,i3o+1,1,2)-
     & rsxy(i1o,i2o+2,i3o+2,1,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_sztt = (-rsxy(i1o,i2o,i3o-2,1,2)+16.*rsxy(
     & i1o,i2o,i3o-1,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o,i2o,
     & i3o+1,1,2)-rsxy(i1o,i2o,i3o+2,1,2))/(12.*dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (rsxy(i1o-2,i2o,i3o,2,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,2)+8.*rsxy(i1o+1,i2o,i3o,2,2)-rsxy(i1o+2,i2o,i3o,2,
     & 2))/(12.*dr(0))
                        aj_tzs = (rsxy(i1o,i2o-2,i3o,2,2)-8.*rsxy(i1o,
     & i2o-1,i3o,2,2)+8.*rsxy(i1o,i2o+1,i3o,2,2)-rsxy(i1o,i2o+2,i3o,2,
     & 2))/(12.*dr(1))
                        aj_tzt = (rsxy(i1o,i2o,i3o-2,2,2)-8.*rsxy(i1o,
     & i2o,i3o-1,2,2)+8.*rsxy(i1o,i2o,i3o+1,2,2)-rsxy(i1o,i2o,i3o+2,2,
     & 2))/(12.*dr(2))
                        aj_tzrr = (-rsxy(i1o-2,i2o,i3o,2,2)+16.*rsxy(
     & i1o-1,i2o,i3o,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o+1,
     & i2o,i3o,2,2)-rsxy(i1o+2,i2o,i3o,2,2))/(12.*dr(0)**2)
                        aj_tzrs = ((rsxy(i1o-2,i2o-2,i3o,2,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,2)+8.*rsxy(i1o-2,i2o+1,i3o,2,2)-rsxy(i1o-2,
     & i2o+2,i3o,2,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,2)+8.*rsxy(i1o-1,i2o+1,i3o,2,2)-rsxy(
     & i1o-1,i2o+2,i3o,2,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,2)+8.*rsxy(i1o+1,i2o+1,i3o,2,2)-
     & rsxy(i1o+1,i2o+2,i3o,2,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,2,2)+8.*rsxy(i1o+2,i2o+1,i3o,2,2)-
     & rsxy(i1o+2,i2o+2,i3o,2,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_tzss = (-rsxy(i1o,i2o-2,i3o,2,2)+16.*rsxy(
     & i1o,i2o-1,i3o,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,2)-rsxy(i1o,i2o+2,i3o,2,2))/(12.*dr(1)**2)
                        aj_tzrt = ((rsxy(i1o-2,i2o,i3o-2,2,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,2)+8.*rsxy(i1o-2,i2o,i3o+1,2,2)-rsxy(i1o-2,
     & i2o,i3o+2,2,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,2)+8.*rsxy(i1o-1,i2o,i3o+1,2,2)-rsxy(
     & i1o-1,i2o,i3o+2,2,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,2)+8.*rsxy(i1o+1,i2o,i3o+1,2,2)-
     & rsxy(i1o+1,i2o,i3o+2,2,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,2,2)+8.*rsxy(i1o+2,i2o,i3o+1,2,2)-
     & rsxy(i1o+2,i2o,i3o+2,2,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_tzst = ((rsxy(i1o,i2o-2,i3o-2,2,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,2)+8.*rsxy(i1o,i2o-2,i3o+1,2,2)-rsxy(i1o,i2o-
     & 2,i3o+2,2,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,2)+8.*rsxy(i1o,i2o-1,i3o+1,2,2)-rsxy(
     & i1o,i2o-1,i3o+2,2,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,2)+8.*rsxy(i1o,i2o+1,i3o+1,2,2)-
     & rsxy(i1o,i2o+1,i3o+2,2,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,2,2)+8.*rsxy(i1o,i2o+2,i3o+1,2,2)-
     & rsxy(i1o,i2o+2,i3o+2,2,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_tztt = (-rsxy(i1o,i2o,i3o-2,2,2)+16.*rsxy(
     & i1o,i2o,i3o-1,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o,i2o,
     & i3o+1,2,2)-rsxy(i1o,i2o,i3o+2,2,2))/(12.*dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.6) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-3,i2o,i3o,0,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,0)-45.*rsxy(i1o-1,i2o,i3o,0,0)+45.*rsxy(i1o+1,i2o,
     & i3o,0,0)-9.*rsxy(i1o+2,i2o,i3o,0,0)+rsxy(i1o+3,i2o,i3o,0,0))/(
     & 60.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-3,i3o,0,0)+9.*rsxy(i1o,
     & i2o-2,i3o,0,0)-45.*rsxy(i1o,i2o-1,i3o,0,0)+45.*rsxy(i1o,i2o+1,
     & i3o,0,0)-9.*rsxy(i1o,i2o+2,i3o,0,0)+rsxy(i1o,i2o+3,i3o,0,0))/(
     & 60.*dr(1))
                        aj_rxt = (-rsxy(i1o,i2o,i3o-3,0,0)+9.*rsxy(i1o,
     & i2o,i3o-2,0,0)-45.*rsxy(i1o,i2o,i3o-1,0,0)+45.*rsxy(i1o,i2o,
     & i3o+1,0,0)-9.*rsxy(i1o,i2o,i3o+2,0,0)+rsxy(i1o,i2o,i3o+3,0,0))
     & /(60.*dr(2))
                        aj_rxrr = (2.*rsxy(i1o-3,i2o,i3o,0,0)-27.*rsxy(
     & i1o-2,i2o,i3o,0,0)+270.*rsxy(i1o-1,i2o,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o+1,i2o,i3o,0,0)-27.*rsxy(i1o+2,i2o,
     & i3o,0,0)+2.*rsxy(i1o+3,i2o,i3o,0,0))/(180.*dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,0)-45.*rsxy(i1o-3,i2o-1,i3o,0,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,0)-9.*rsxy(i1o-3,i2o+2,i3o,0,0)+rsxy(
     & i1o-3,i2o+3,i3o,0,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,0,0)-45.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,0)-9.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & rsxy(i1o-2,i2o+3,i3o,0,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o-1,i2o-2,i3o,0,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o-1,i2o+1,i3o,0,0)-9.*rsxy(i1o-1,i2o+2,i3o,0,0)
     & +rsxy(i1o-1,i2o+3,i3o,0,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+1,i2o-2,i3o,0,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+1,i2o+1,i3o,0,0)-9.*rsxy(i1o+1,i2o+2,i3o,0,0)
     & +rsxy(i1o+1,i2o+3,i3o,0,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+2,i2o-2,i3o,0,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+2,i2o+1,i3o,0,0)-9.*rsxy(i1o+2,i2o+2,i3o,0,0)
     & +rsxy(i1o+2,i2o+3,i3o,0,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,0)+9.*rsxy(i1o+3,i2o-2,i3o,0,0)-45.*rsxy(i1o+3,i2o-1,i3o,0,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,0)-9.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & rsxy(i1o+3,i2o+3,i3o,0,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_rxss = (2.*rsxy(i1o,i2o-3,i3o,0,0)-27.*rsxy(
     & i1o,i2o-2,i3o,0,0)+270.*rsxy(i1o,i2o-1,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o+1,i3o,0,0)-27.*rsxy(i1o,i2o+2,
     & i3o,0,0)+2.*rsxy(i1o,i2o+3,i3o,0,0))/(180.*dr(1)**2)
                        aj_rxrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,0)-45.*rsxy(i1o-3,i2o,i3o-1,0,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,0)-9.*rsxy(i1o-3,i2o,i3o+2,0,0)+rsxy(
     & i1o-3,i2o,i3o+3,0,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,0,0)-45.*rsxy(i1o-2,i2o,i3o-1,0,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,0)-9.*rsxy(i1o-2,i2o,i3o+2,0,0)+
     & rsxy(i1o-2,i2o,i3o+3,0,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o-1,i2o,i3o-2,0,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o-1,i2o,i3o+1,0,0)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 0)+rsxy(i1o-1,i2o,i3o+3,0,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o+1,i2o,i3o-2,0,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o+1,i2o,i3o+1,0,0)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 0)+rsxy(i1o+1,i2o,i3o+3,0,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o+2,i2o,i3o-2,0,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o+2,i2o,i3o+1,0,0)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 0)+rsxy(i1o+2,i2o,i3o+3,0,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,0)+9.*rsxy(i1o+3,i2o,i3o-2,0,0)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,0,0)-9.*rsxy(i1o+3,i2o,i3o+2,0,0)+
     & rsxy(i1o+3,i2o,i3o+3,0,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_rxst = (-(-rsxy(i1o,i2o-3,i3o-3,0,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,0)-45.*rsxy(i1o,i2o-3,i3o-1,0,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,0)-9.*rsxy(i1o,i2o-3,i3o+2,0,0)+rsxy(
     & i1o,i2o-3,i3o+3,0,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,0,0)-45.*rsxy(i1o,i2o-2,i3o-1,0,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,0)-9.*rsxy(i1o,i2o-2,i3o+2,0,0)+
     & rsxy(i1o,i2o-2,i3o+3,0,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o-1,i3o-2,0,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o-1,i3o+1,0,0)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 0)+rsxy(i1o,i2o-1,i3o+3,0,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o+1,i3o-2,0,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o+1,i3o+1,0,0)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 0)+rsxy(i1o,i2o+1,i3o+3,0,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o+2,i3o-2,0,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o+2,i3o+1,0,0)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 0)+rsxy(i1o,i2o+2,i3o+3,0,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,0)+9.*rsxy(i1o,i2o+3,i3o-2,0,0)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,0,0)-9.*rsxy(i1o,i2o+3,i3o+2,0,0)+
     & rsxy(i1o,i2o+3,i3o+3,0,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_rxtt = (2.*rsxy(i1o,i2o,i3o-3,0,0)-27.*rsxy(
     & i1o,i2o,i3o-2,0,0)+270.*rsxy(i1o,i2o,i3o-1,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o,i3o+1,0,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,0)+2.*rsxy(i1o,i2o,i3o+3,0,0))/(180.*dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-3,i2o,i3o,1,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,0)-45.*rsxy(i1o-1,i2o,i3o,1,0)+45.*rsxy(i1o+1,i2o,
     & i3o,1,0)-9.*rsxy(i1o+2,i2o,i3o,1,0)+rsxy(i1o+3,i2o,i3o,1,0))/(
     & 60.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-3,i3o,1,0)+9.*rsxy(i1o,
     & i2o-2,i3o,1,0)-45.*rsxy(i1o,i2o-1,i3o,1,0)+45.*rsxy(i1o,i2o+1,
     & i3o,1,0)-9.*rsxy(i1o,i2o+2,i3o,1,0)+rsxy(i1o,i2o+3,i3o,1,0))/(
     & 60.*dr(1))
                        aj_sxt = (-rsxy(i1o,i2o,i3o-3,1,0)+9.*rsxy(i1o,
     & i2o,i3o-2,1,0)-45.*rsxy(i1o,i2o,i3o-1,1,0)+45.*rsxy(i1o,i2o,
     & i3o+1,1,0)-9.*rsxy(i1o,i2o,i3o+2,1,0)+rsxy(i1o,i2o,i3o+3,1,0))
     & /(60.*dr(2))
                        aj_sxrr = (2.*rsxy(i1o-3,i2o,i3o,1,0)-27.*rsxy(
     & i1o-2,i2o,i3o,1,0)+270.*rsxy(i1o-1,i2o,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o+1,i2o,i3o,1,0)-27.*rsxy(i1o+2,i2o,
     & i3o,1,0)+2.*rsxy(i1o+3,i2o,i3o,1,0))/(180.*dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,0)-45.*rsxy(i1o-3,i2o-1,i3o,1,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,0)-9.*rsxy(i1o-3,i2o+2,i3o,1,0)+rsxy(
     & i1o-3,i2o+3,i3o,1,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,1,0)-45.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,0)-9.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & rsxy(i1o-2,i2o+3,i3o,1,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o-1,i2o-2,i3o,1,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o-1,i2o+1,i3o,1,0)-9.*rsxy(i1o-1,i2o+2,i3o,1,0)
     & +rsxy(i1o-1,i2o+3,i3o,1,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+1,i2o-2,i3o,1,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+1,i2o+1,i3o,1,0)-9.*rsxy(i1o+1,i2o+2,i3o,1,0)
     & +rsxy(i1o+1,i2o+3,i3o,1,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+2,i2o-2,i3o,1,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+2,i2o+1,i3o,1,0)-9.*rsxy(i1o+2,i2o+2,i3o,1,0)
     & +rsxy(i1o+2,i2o+3,i3o,1,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,0)+9.*rsxy(i1o+3,i2o-2,i3o,1,0)-45.*rsxy(i1o+3,i2o-1,i3o,1,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,0)-9.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & rsxy(i1o+3,i2o+3,i3o,1,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_sxss = (2.*rsxy(i1o,i2o-3,i3o,1,0)-27.*rsxy(
     & i1o,i2o-2,i3o,1,0)+270.*rsxy(i1o,i2o-1,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o+1,i3o,1,0)-27.*rsxy(i1o,i2o+2,
     & i3o,1,0)+2.*rsxy(i1o,i2o+3,i3o,1,0))/(180.*dr(1)**2)
                        aj_sxrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,0)-45.*rsxy(i1o-3,i2o,i3o-1,1,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,0)-9.*rsxy(i1o-3,i2o,i3o+2,1,0)+rsxy(
     & i1o-3,i2o,i3o+3,1,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,1,0)-45.*rsxy(i1o-2,i2o,i3o-1,1,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,0)-9.*rsxy(i1o-2,i2o,i3o+2,1,0)+
     & rsxy(i1o-2,i2o,i3o+3,1,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o-1,i2o,i3o-2,1,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o-1,i2o,i3o+1,1,0)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 0)+rsxy(i1o-1,i2o,i3o+3,1,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o+1,i2o,i3o-2,1,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o+1,i2o,i3o+1,1,0)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 0)+rsxy(i1o+1,i2o,i3o+3,1,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o+2,i2o,i3o-2,1,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o+2,i2o,i3o+1,1,0)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 0)+rsxy(i1o+2,i2o,i3o+3,1,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,0)+9.*rsxy(i1o+3,i2o,i3o-2,1,0)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,1,0)-9.*rsxy(i1o+3,i2o,i3o+2,1,0)+
     & rsxy(i1o+3,i2o,i3o+3,1,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_sxst = (-(-rsxy(i1o,i2o-3,i3o-3,1,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,0)-45.*rsxy(i1o,i2o-3,i3o-1,1,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,0)-9.*rsxy(i1o,i2o-3,i3o+2,1,0)+rsxy(
     & i1o,i2o-3,i3o+3,1,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,1,0)-45.*rsxy(i1o,i2o-2,i3o-1,1,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,0)-9.*rsxy(i1o,i2o-2,i3o+2,1,0)+
     & rsxy(i1o,i2o-2,i3o+3,1,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o-1,i3o-2,1,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o-1,i3o+1,1,0)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 0)+rsxy(i1o,i2o-1,i3o+3,1,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o+1,i3o-2,1,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o+1,i3o+1,1,0)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 0)+rsxy(i1o,i2o+1,i3o+3,1,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o+2,i3o-2,1,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o+2,i3o+1,1,0)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 0)+rsxy(i1o,i2o+2,i3o+3,1,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,0)+9.*rsxy(i1o,i2o+3,i3o-2,1,0)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,1,0)-9.*rsxy(i1o,i2o+3,i3o+2,1,0)+
     & rsxy(i1o,i2o+3,i3o+3,1,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_sxtt = (2.*rsxy(i1o,i2o,i3o-3,1,0)-27.*rsxy(
     & i1o,i2o,i3o-2,1,0)+270.*rsxy(i1o,i2o,i3o-1,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o,i3o+1,1,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,0)+2.*rsxy(i1o,i2o,i3o+3,1,0))/(180.*dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (-rsxy(i1o-3,i2o,i3o,2,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,0)-45.*rsxy(i1o-1,i2o,i3o,2,0)+45.*rsxy(i1o+1,i2o,
     & i3o,2,0)-9.*rsxy(i1o+2,i2o,i3o,2,0)+rsxy(i1o+3,i2o,i3o,2,0))/(
     & 60.*dr(0))
                        aj_txs = (-rsxy(i1o,i2o-3,i3o,2,0)+9.*rsxy(i1o,
     & i2o-2,i3o,2,0)-45.*rsxy(i1o,i2o-1,i3o,2,0)+45.*rsxy(i1o,i2o+1,
     & i3o,2,0)-9.*rsxy(i1o,i2o+2,i3o,2,0)+rsxy(i1o,i2o+3,i3o,2,0))/(
     & 60.*dr(1))
                        aj_txt = (-rsxy(i1o,i2o,i3o-3,2,0)+9.*rsxy(i1o,
     & i2o,i3o-2,2,0)-45.*rsxy(i1o,i2o,i3o-1,2,0)+45.*rsxy(i1o,i2o,
     & i3o+1,2,0)-9.*rsxy(i1o,i2o,i3o+2,2,0)+rsxy(i1o,i2o,i3o+3,2,0))
     & /(60.*dr(2))
                        aj_txrr = (2.*rsxy(i1o-3,i2o,i3o,2,0)-27.*rsxy(
     & i1o-2,i2o,i3o,2,0)+270.*rsxy(i1o-1,i2o,i3o,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o+1,i2o,i3o,2,0)-27.*rsxy(i1o+2,i2o,
     & i3o,2,0)+2.*rsxy(i1o+3,i2o,i3o,2,0))/(180.*dr(0)**2)
                        aj_txrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,0)-45.*rsxy(i1o-3,i2o-1,i3o,2,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,0)-9.*rsxy(i1o-3,i2o+2,i3o,2,0)+rsxy(
     & i1o-3,i2o+3,i3o,2,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,2,0)-45.*rsxy(i1o-2,i2o-1,i3o,2,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,0)-9.*rsxy(i1o-2,i2o+2,i3o,2,0)+
     & rsxy(i1o-2,i2o+3,i3o,2,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o-1,i2o-2,i3o,2,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o-1,i2o+1,i3o,2,0)-9.*rsxy(i1o-1,i2o+2,i3o,2,0)
     & +rsxy(i1o-1,i2o+3,i3o,2,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o+1,i2o-2,i3o,2,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o+1,i2o+1,i3o,2,0)-9.*rsxy(i1o+1,i2o+2,i3o,2,0)
     & +rsxy(i1o+1,i2o+3,i3o,2,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o+2,i2o-2,i3o,2,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o+2,i2o+1,i3o,2,0)-9.*rsxy(i1o+2,i2o+2,i3o,2,0)
     & +rsxy(i1o+2,i2o+3,i3o,2,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,0)+9.*rsxy(i1o+3,i2o-2,i3o,2,0)-45.*rsxy(i1o+3,i2o-1,i3o,2,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,0)-9.*rsxy(i1o+3,i2o+2,i3o,2,0)+
     & rsxy(i1o+3,i2o+3,i3o,2,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_txss = (2.*rsxy(i1o,i2o-3,i3o,2,0)-27.*rsxy(
     & i1o,i2o-2,i3o,2,0)+270.*rsxy(i1o,i2o-1,i3o,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o,i2o+1,i3o,2,0)-27.*rsxy(i1o,i2o+2,
     & i3o,2,0)+2.*rsxy(i1o,i2o+3,i3o,2,0))/(180.*dr(1)**2)
                        aj_txrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,0)-45.*rsxy(i1o-3,i2o,i3o-1,2,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,0)-9.*rsxy(i1o-3,i2o,i3o+2,2,0)+rsxy(
     & i1o-3,i2o,i3o+3,2,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,2,0)-45.*rsxy(i1o-2,i2o,i3o-1,2,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,0)-9.*rsxy(i1o-2,i2o,i3o+2,2,0)+
     & rsxy(i1o-2,i2o,i3o+3,2,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o-1,i2o,i3o-2,2,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o-1,i2o,i3o+1,2,0)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 0)+rsxy(i1o-1,i2o,i3o+3,2,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o+1,i2o,i3o-2,2,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o+1,i2o,i3o+1,2,0)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 0)+rsxy(i1o+1,i2o,i3o+3,2,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o+2,i2o,i3o-2,2,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o+2,i2o,i3o+1,2,0)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 0)+rsxy(i1o+2,i2o,i3o+3,2,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,0)+9.*rsxy(i1o+3,i2o,i3o-2,2,0)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,2,0)-9.*rsxy(i1o+3,i2o,i3o+2,2,0)+
     & rsxy(i1o+3,i2o,i3o+3,2,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_txst = (-(-rsxy(i1o,i2o-3,i3o-3,2,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,0)-45.*rsxy(i1o,i2o-3,i3o-1,2,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,0)-9.*rsxy(i1o,i2o-3,i3o+2,2,0)+rsxy(
     & i1o,i2o-3,i3o+3,2,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,2,0)-45.*rsxy(i1o,i2o-2,i3o-1,2,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,0)-9.*rsxy(i1o,i2o-2,i3o+2,2,0)+
     & rsxy(i1o,i2o-2,i3o+3,2,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o-1,i3o-2,2,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o-1,i3o+1,2,0)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 0)+rsxy(i1o,i2o-1,i3o+3,2,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o+1,i3o-2,2,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o+1,i3o+1,2,0)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 0)+rsxy(i1o,i2o+1,i3o+3,2,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o+2,i3o-2,2,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o+2,i3o+1,2,0)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 0)+rsxy(i1o,i2o+2,i3o+3,2,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,0)+9.*rsxy(i1o,i2o+3,i3o-2,2,0)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,2,0)-9.*rsxy(i1o,i2o+3,i3o+2,2,0)+
     & rsxy(i1o,i2o+3,i3o+3,2,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_txtt = (2.*rsxy(i1o,i2o,i3o-3,2,0)-27.*rsxy(
     & i1o,i2o,i3o-2,2,0)+270.*rsxy(i1o,i2o,i3o-1,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o,i2o,i3o+1,2,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,0)+2.*rsxy(i1o,i2o,i3o+3,2,0))/(180.*dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-3,i2o,i3o,0,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,1)-45.*rsxy(i1o-1,i2o,i3o,0,1)+45.*rsxy(i1o+1,i2o,
     & i3o,0,1)-9.*rsxy(i1o+2,i2o,i3o,0,1)+rsxy(i1o+3,i2o,i3o,0,1))/(
     & 60.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-3,i3o,0,1)+9.*rsxy(i1o,
     & i2o-2,i3o,0,1)-45.*rsxy(i1o,i2o-1,i3o,0,1)+45.*rsxy(i1o,i2o+1,
     & i3o,0,1)-9.*rsxy(i1o,i2o+2,i3o,0,1)+rsxy(i1o,i2o+3,i3o,0,1))/(
     & 60.*dr(1))
                        aj_ryt = (-rsxy(i1o,i2o,i3o-3,0,1)+9.*rsxy(i1o,
     & i2o,i3o-2,0,1)-45.*rsxy(i1o,i2o,i3o-1,0,1)+45.*rsxy(i1o,i2o,
     & i3o+1,0,1)-9.*rsxy(i1o,i2o,i3o+2,0,1)+rsxy(i1o,i2o,i3o+3,0,1))
     & /(60.*dr(2))
                        aj_ryrr = (2.*rsxy(i1o-3,i2o,i3o,0,1)-27.*rsxy(
     & i1o-2,i2o,i3o,0,1)+270.*rsxy(i1o-1,i2o,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o+1,i2o,i3o,0,1)-27.*rsxy(i1o+2,i2o,
     & i3o,0,1)+2.*rsxy(i1o+3,i2o,i3o,0,1))/(180.*dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,1)-45.*rsxy(i1o-3,i2o-1,i3o,0,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,1)-9.*rsxy(i1o-3,i2o+2,i3o,0,1)+rsxy(
     & i1o-3,i2o+3,i3o,0,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,0,1)-45.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,1)-9.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & rsxy(i1o-2,i2o+3,i3o,0,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o-1,i2o-2,i3o,0,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o-1,i2o+1,i3o,0,1)-9.*rsxy(i1o-1,i2o+2,i3o,0,1)
     & +rsxy(i1o-1,i2o+3,i3o,0,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+1,i2o-2,i3o,0,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+1,i2o+1,i3o,0,1)-9.*rsxy(i1o+1,i2o+2,i3o,0,1)
     & +rsxy(i1o+1,i2o+3,i3o,0,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+2,i2o-2,i3o,0,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+2,i2o+1,i3o,0,1)-9.*rsxy(i1o+2,i2o+2,i3o,0,1)
     & +rsxy(i1o+2,i2o+3,i3o,0,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,1)+9.*rsxy(i1o+3,i2o-2,i3o,0,1)-45.*rsxy(i1o+3,i2o-1,i3o,0,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,1)-9.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & rsxy(i1o+3,i2o+3,i3o,0,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_ryss = (2.*rsxy(i1o,i2o-3,i3o,0,1)-27.*rsxy(
     & i1o,i2o-2,i3o,0,1)+270.*rsxy(i1o,i2o-1,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o+1,i3o,0,1)-27.*rsxy(i1o,i2o+2,
     & i3o,0,1)+2.*rsxy(i1o,i2o+3,i3o,0,1))/(180.*dr(1)**2)
                        aj_ryrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,1)-45.*rsxy(i1o-3,i2o,i3o-1,0,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,1)-9.*rsxy(i1o-3,i2o,i3o+2,0,1)+rsxy(
     & i1o-3,i2o,i3o+3,0,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,0,1)-45.*rsxy(i1o-2,i2o,i3o-1,0,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,1)-9.*rsxy(i1o-2,i2o,i3o+2,0,1)+
     & rsxy(i1o-2,i2o,i3o+3,0,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o-1,i2o,i3o-2,0,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o-1,i2o,i3o+1,0,1)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 1)+rsxy(i1o-1,i2o,i3o+3,0,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o+1,i2o,i3o-2,0,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o+1,i2o,i3o+1,0,1)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 1)+rsxy(i1o+1,i2o,i3o+3,0,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o+2,i2o,i3o-2,0,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o+2,i2o,i3o+1,0,1)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 1)+rsxy(i1o+2,i2o,i3o+3,0,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,1)+9.*rsxy(i1o+3,i2o,i3o-2,0,1)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,0,1)-9.*rsxy(i1o+3,i2o,i3o+2,0,1)+
     & rsxy(i1o+3,i2o,i3o+3,0,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_ryst = (-(-rsxy(i1o,i2o-3,i3o-3,0,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,1)-45.*rsxy(i1o,i2o-3,i3o-1,0,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,1)-9.*rsxy(i1o,i2o-3,i3o+2,0,1)+rsxy(
     & i1o,i2o-3,i3o+3,0,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,0,1)-45.*rsxy(i1o,i2o-2,i3o-1,0,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,1)-9.*rsxy(i1o,i2o-2,i3o+2,0,1)+
     & rsxy(i1o,i2o-2,i3o+3,0,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o-1,i3o-2,0,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o-1,i3o+1,0,1)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 1)+rsxy(i1o,i2o-1,i3o+3,0,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o+1,i3o-2,0,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o+1,i3o+1,0,1)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 1)+rsxy(i1o,i2o+1,i3o+3,0,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o+2,i3o-2,0,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o+2,i3o+1,0,1)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 1)+rsxy(i1o,i2o+2,i3o+3,0,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,1)+9.*rsxy(i1o,i2o+3,i3o-2,0,1)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,0,1)-9.*rsxy(i1o,i2o+3,i3o+2,0,1)+
     & rsxy(i1o,i2o+3,i3o+3,0,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_rytt = (2.*rsxy(i1o,i2o,i3o-3,0,1)-27.*rsxy(
     & i1o,i2o,i3o-2,0,1)+270.*rsxy(i1o,i2o,i3o-1,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o,i3o+1,0,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,1)+2.*rsxy(i1o,i2o,i3o+3,0,1))/(180.*dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-3,i2o,i3o,1,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,1)-45.*rsxy(i1o-1,i2o,i3o,1,1)+45.*rsxy(i1o+1,i2o,
     & i3o,1,1)-9.*rsxy(i1o+2,i2o,i3o,1,1)+rsxy(i1o+3,i2o,i3o,1,1))/(
     & 60.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-3,i3o,1,1)+9.*rsxy(i1o,
     & i2o-2,i3o,1,1)-45.*rsxy(i1o,i2o-1,i3o,1,1)+45.*rsxy(i1o,i2o+1,
     & i3o,1,1)-9.*rsxy(i1o,i2o+2,i3o,1,1)+rsxy(i1o,i2o+3,i3o,1,1))/(
     & 60.*dr(1))
                        aj_syt = (-rsxy(i1o,i2o,i3o-3,1,1)+9.*rsxy(i1o,
     & i2o,i3o-2,1,1)-45.*rsxy(i1o,i2o,i3o-1,1,1)+45.*rsxy(i1o,i2o,
     & i3o+1,1,1)-9.*rsxy(i1o,i2o,i3o+2,1,1)+rsxy(i1o,i2o,i3o+3,1,1))
     & /(60.*dr(2))
                        aj_syrr = (2.*rsxy(i1o-3,i2o,i3o,1,1)-27.*rsxy(
     & i1o-2,i2o,i3o,1,1)+270.*rsxy(i1o-1,i2o,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o+1,i2o,i3o,1,1)-27.*rsxy(i1o+2,i2o,
     & i3o,1,1)+2.*rsxy(i1o+3,i2o,i3o,1,1))/(180.*dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,1)-45.*rsxy(i1o-3,i2o-1,i3o,1,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,1)-9.*rsxy(i1o-3,i2o+2,i3o,1,1)+rsxy(
     & i1o-3,i2o+3,i3o,1,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,1,1)-45.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,1)-9.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & rsxy(i1o-2,i2o+3,i3o,1,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o-1,i2o-2,i3o,1,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o-1,i2o+1,i3o,1,1)-9.*rsxy(i1o-1,i2o+2,i3o,1,1)
     & +rsxy(i1o-1,i2o+3,i3o,1,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+1,i2o-2,i3o,1,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+1,i2o+1,i3o,1,1)-9.*rsxy(i1o+1,i2o+2,i3o,1,1)
     & +rsxy(i1o+1,i2o+3,i3o,1,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+2,i2o-2,i3o,1,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+2,i2o+1,i3o,1,1)-9.*rsxy(i1o+2,i2o+2,i3o,1,1)
     & +rsxy(i1o+2,i2o+3,i3o,1,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,1)+9.*rsxy(i1o+3,i2o-2,i3o,1,1)-45.*rsxy(i1o+3,i2o-1,i3o,1,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,1)-9.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & rsxy(i1o+3,i2o+3,i3o,1,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_syss = (2.*rsxy(i1o,i2o-3,i3o,1,1)-27.*rsxy(
     & i1o,i2o-2,i3o,1,1)+270.*rsxy(i1o,i2o-1,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o+1,i3o,1,1)-27.*rsxy(i1o,i2o+2,
     & i3o,1,1)+2.*rsxy(i1o,i2o+3,i3o,1,1))/(180.*dr(1)**2)
                        aj_syrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,1)-45.*rsxy(i1o-3,i2o,i3o-1,1,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,1)-9.*rsxy(i1o-3,i2o,i3o+2,1,1)+rsxy(
     & i1o-3,i2o,i3o+3,1,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,1,1)-45.*rsxy(i1o-2,i2o,i3o-1,1,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,1)-9.*rsxy(i1o-2,i2o,i3o+2,1,1)+
     & rsxy(i1o-2,i2o,i3o+3,1,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o-1,i2o,i3o-2,1,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o-1,i2o,i3o+1,1,1)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 1)+rsxy(i1o-1,i2o,i3o+3,1,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o+1,i2o,i3o-2,1,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o+1,i2o,i3o+1,1,1)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 1)+rsxy(i1o+1,i2o,i3o+3,1,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o+2,i2o,i3o-2,1,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o+2,i2o,i3o+1,1,1)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 1)+rsxy(i1o+2,i2o,i3o+3,1,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,1)+9.*rsxy(i1o+3,i2o,i3o-2,1,1)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,1,1)-9.*rsxy(i1o+3,i2o,i3o+2,1,1)+
     & rsxy(i1o+3,i2o,i3o+3,1,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_syst = (-(-rsxy(i1o,i2o-3,i3o-3,1,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,1)-45.*rsxy(i1o,i2o-3,i3o-1,1,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,1)-9.*rsxy(i1o,i2o-3,i3o+2,1,1)+rsxy(
     & i1o,i2o-3,i3o+3,1,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,1,1)-45.*rsxy(i1o,i2o-2,i3o-1,1,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,1)-9.*rsxy(i1o,i2o-2,i3o+2,1,1)+
     & rsxy(i1o,i2o-2,i3o+3,1,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o-1,i3o-2,1,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o-1,i3o+1,1,1)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 1)+rsxy(i1o,i2o-1,i3o+3,1,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o+1,i3o-2,1,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o+1,i3o+1,1,1)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 1)+rsxy(i1o,i2o+1,i3o+3,1,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o+2,i3o-2,1,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o+2,i3o+1,1,1)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 1)+rsxy(i1o,i2o+2,i3o+3,1,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,1)+9.*rsxy(i1o,i2o+3,i3o-2,1,1)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,1,1)-9.*rsxy(i1o,i2o+3,i3o+2,1,1)+
     & rsxy(i1o,i2o+3,i3o+3,1,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_sytt = (2.*rsxy(i1o,i2o,i3o-3,1,1)-27.*rsxy(
     & i1o,i2o,i3o-2,1,1)+270.*rsxy(i1o,i2o,i3o-1,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o,i3o+1,1,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,1)+2.*rsxy(i1o,i2o,i3o+3,1,1))/(180.*dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (-rsxy(i1o-3,i2o,i3o,2,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,1)-45.*rsxy(i1o-1,i2o,i3o,2,1)+45.*rsxy(i1o+1,i2o,
     & i3o,2,1)-9.*rsxy(i1o+2,i2o,i3o,2,1)+rsxy(i1o+3,i2o,i3o,2,1))/(
     & 60.*dr(0))
                        aj_tys = (-rsxy(i1o,i2o-3,i3o,2,1)+9.*rsxy(i1o,
     & i2o-2,i3o,2,1)-45.*rsxy(i1o,i2o-1,i3o,2,1)+45.*rsxy(i1o,i2o+1,
     & i3o,2,1)-9.*rsxy(i1o,i2o+2,i3o,2,1)+rsxy(i1o,i2o+3,i3o,2,1))/(
     & 60.*dr(1))
                        aj_tyt = (-rsxy(i1o,i2o,i3o-3,2,1)+9.*rsxy(i1o,
     & i2o,i3o-2,2,1)-45.*rsxy(i1o,i2o,i3o-1,2,1)+45.*rsxy(i1o,i2o,
     & i3o+1,2,1)-9.*rsxy(i1o,i2o,i3o+2,2,1)+rsxy(i1o,i2o,i3o+3,2,1))
     & /(60.*dr(2))
                        aj_tyrr = (2.*rsxy(i1o-3,i2o,i3o,2,1)-27.*rsxy(
     & i1o-2,i2o,i3o,2,1)+270.*rsxy(i1o-1,i2o,i3o,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o+1,i2o,i3o,2,1)-27.*rsxy(i1o+2,i2o,
     & i3o,2,1)+2.*rsxy(i1o+3,i2o,i3o,2,1))/(180.*dr(0)**2)
                        aj_tyrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,1)-45.*rsxy(i1o-3,i2o-1,i3o,2,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,1)-9.*rsxy(i1o-3,i2o+2,i3o,2,1)+rsxy(
     & i1o-3,i2o+3,i3o,2,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,2,1)-45.*rsxy(i1o-2,i2o-1,i3o,2,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,1)-9.*rsxy(i1o-2,i2o+2,i3o,2,1)+
     & rsxy(i1o-2,i2o+3,i3o,2,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o-1,i2o-2,i3o,2,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o-1,i2o+1,i3o,2,1)-9.*rsxy(i1o-1,i2o+2,i3o,2,1)
     & +rsxy(i1o-1,i2o+3,i3o,2,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o+1,i2o-2,i3o,2,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o+1,i2o+1,i3o,2,1)-9.*rsxy(i1o+1,i2o+2,i3o,2,1)
     & +rsxy(i1o+1,i2o+3,i3o,2,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o+2,i2o-2,i3o,2,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o+2,i2o+1,i3o,2,1)-9.*rsxy(i1o+2,i2o+2,i3o,2,1)
     & +rsxy(i1o+2,i2o+3,i3o,2,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,1)+9.*rsxy(i1o+3,i2o-2,i3o,2,1)-45.*rsxy(i1o+3,i2o-1,i3o,2,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,1)-9.*rsxy(i1o+3,i2o+2,i3o,2,1)+
     & rsxy(i1o+3,i2o+3,i3o,2,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_tyss = (2.*rsxy(i1o,i2o-3,i3o,2,1)-27.*rsxy(
     & i1o,i2o-2,i3o,2,1)+270.*rsxy(i1o,i2o-1,i3o,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o,i2o+1,i3o,2,1)-27.*rsxy(i1o,i2o+2,
     & i3o,2,1)+2.*rsxy(i1o,i2o+3,i3o,2,1))/(180.*dr(1)**2)
                        aj_tyrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,1)-45.*rsxy(i1o-3,i2o,i3o-1,2,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,1)-9.*rsxy(i1o-3,i2o,i3o+2,2,1)+rsxy(
     & i1o-3,i2o,i3o+3,2,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,2,1)-45.*rsxy(i1o-2,i2o,i3o-1,2,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,1)-9.*rsxy(i1o-2,i2o,i3o+2,2,1)+
     & rsxy(i1o-2,i2o,i3o+3,2,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o-1,i2o,i3o-2,2,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o-1,i2o,i3o+1,2,1)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 1)+rsxy(i1o-1,i2o,i3o+3,2,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o+1,i2o,i3o-2,2,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o+1,i2o,i3o+1,2,1)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 1)+rsxy(i1o+1,i2o,i3o+3,2,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o+2,i2o,i3o-2,2,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o+2,i2o,i3o+1,2,1)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 1)+rsxy(i1o+2,i2o,i3o+3,2,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,1)+9.*rsxy(i1o+3,i2o,i3o-2,2,1)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,2,1)-9.*rsxy(i1o+3,i2o,i3o+2,2,1)+
     & rsxy(i1o+3,i2o,i3o+3,2,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_tyst = (-(-rsxy(i1o,i2o-3,i3o-3,2,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,1)-45.*rsxy(i1o,i2o-3,i3o-1,2,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,1)-9.*rsxy(i1o,i2o-3,i3o+2,2,1)+rsxy(
     & i1o,i2o-3,i3o+3,2,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,2,1)-45.*rsxy(i1o,i2o-2,i3o-1,2,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,1)-9.*rsxy(i1o,i2o-2,i3o+2,2,1)+
     & rsxy(i1o,i2o-2,i3o+3,2,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o-1,i3o-2,2,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o-1,i3o+1,2,1)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 1)+rsxy(i1o,i2o-1,i3o+3,2,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o+1,i3o-2,2,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o+1,i3o+1,2,1)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 1)+rsxy(i1o,i2o+1,i3o+3,2,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o+2,i3o-2,2,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o+2,i3o+1,2,1)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 1)+rsxy(i1o,i2o+2,i3o+3,2,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,1)+9.*rsxy(i1o,i2o+3,i3o-2,2,1)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,2,1)-9.*rsxy(i1o,i2o+3,i3o+2,2,1)+
     & rsxy(i1o,i2o+3,i3o+3,2,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_tytt = (2.*rsxy(i1o,i2o,i3o-3,2,1)-27.*rsxy(
     & i1o,i2o,i3o-2,2,1)+270.*rsxy(i1o,i2o,i3o-1,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o,i2o,i3o+1,2,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,1)+2.*rsxy(i1o,i2o,i3o+3,2,1))/(180.*dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (-rsxy(i1o-3,i2o,i3o,0,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,2)-45.*rsxy(i1o-1,i2o,i3o,0,2)+45.*rsxy(i1o+1,i2o,
     & i3o,0,2)-9.*rsxy(i1o+2,i2o,i3o,0,2)+rsxy(i1o+3,i2o,i3o,0,2))/(
     & 60.*dr(0))
                        aj_rzs = (-rsxy(i1o,i2o-3,i3o,0,2)+9.*rsxy(i1o,
     & i2o-2,i3o,0,2)-45.*rsxy(i1o,i2o-1,i3o,0,2)+45.*rsxy(i1o,i2o+1,
     & i3o,0,2)-9.*rsxy(i1o,i2o+2,i3o,0,2)+rsxy(i1o,i2o+3,i3o,0,2))/(
     & 60.*dr(1))
                        aj_rzt = (-rsxy(i1o,i2o,i3o-3,0,2)+9.*rsxy(i1o,
     & i2o,i3o-2,0,2)-45.*rsxy(i1o,i2o,i3o-1,0,2)+45.*rsxy(i1o,i2o,
     & i3o+1,0,2)-9.*rsxy(i1o,i2o,i3o+2,0,2)+rsxy(i1o,i2o,i3o+3,0,2))
     & /(60.*dr(2))
                        aj_rzrr = (2.*rsxy(i1o-3,i2o,i3o,0,2)-27.*rsxy(
     & i1o-2,i2o,i3o,0,2)+270.*rsxy(i1o-1,i2o,i3o,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o+1,i2o,i3o,0,2)-27.*rsxy(i1o+2,i2o,
     & i3o,0,2)+2.*rsxy(i1o+3,i2o,i3o,0,2))/(180.*dr(0)**2)
                        aj_rzrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,2)-45.*rsxy(i1o-3,i2o-1,i3o,0,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,2)-9.*rsxy(i1o-3,i2o+2,i3o,0,2)+rsxy(
     & i1o-3,i2o+3,i3o,0,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,0,2)-45.*rsxy(i1o-2,i2o-1,i3o,0,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,2)-9.*rsxy(i1o-2,i2o+2,i3o,0,2)+
     & rsxy(i1o-2,i2o+3,i3o,0,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o-1,i2o-2,i3o,0,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o-1,i2o+1,i3o,0,2)-9.*rsxy(i1o-1,i2o+2,i3o,0,2)
     & +rsxy(i1o-1,i2o+3,i3o,0,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o+1,i2o-2,i3o,0,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o+1,i2o+1,i3o,0,2)-9.*rsxy(i1o+1,i2o+2,i3o,0,2)
     & +rsxy(i1o+1,i2o+3,i3o,0,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o+2,i2o-2,i3o,0,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o+2,i2o+1,i3o,0,2)-9.*rsxy(i1o+2,i2o+2,i3o,0,2)
     & +rsxy(i1o+2,i2o+3,i3o,0,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,2)+9.*rsxy(i1o+3,i2o-2,i3o,0,2)-45.*rsxy(i1o+3,i2o-1,i3o,0,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,2)-9.*rsxy(i1o+3,i2o+2,i3o,0,2)+
     & rsxy(i1o+3,i2o+3,i3o,0,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_rzss = (2.*rsxy(i1o,i2o-3,i3o,0,2)-27.*rsxy(
     & i1o,i2o-2,i3o,0,2)+270.*rsxy(i1o,i2o-1,i3o,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o,i2o+1,i3o,0,2)-27.*rsxy(i1o,i2o+2,
     & i3o,0,2)+2.*rsxy(i1o,i2o+3,i3o,0,2))/(180.*dr(1)**2)
                        aj_rzrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,2)-45.*rsxy(i1o-3,i2o,i3o-1,0,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,2)-9.*rsxy(i1o-3,i2o,i3o+2,0,2)+rsxy(
     & i1o-3,i2o,i3o+3,0,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,0,2)-45.*rsxy(i1o-2,i2o,i3o-1,0,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,2)-9.*rsxy(i1o-2,i2o,i3o+2,0,2)+
     & rsxy(i1o-2,i2o,i3o+3,0,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o-1,i2o,i3o-2,0,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o-1,i2o,i3o+1,0,2)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 2)+rsxy(i1o-1,i2o,i3o+3,0,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o+1,i2o,i3o-2,0,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o+1,i2o,i3o+1,0,2)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 2)+rsxy(i1o+1,i2o,i3o+3,0,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o+2,i2o,i3o-2,0,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o+2,i2o,i3o+1,0,2)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 2)+rsxy(i1o+2,i2o,i3o+3,0,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,2)+9.*rsxy(i1o+3,i2o,i3o-2,0,2)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,0,2)-9.*rsxy(i1o+3,i2o,i3o+2,0,2)+
     & rsxy(i1o+3,i2o,i3o+3,0,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_rzst = (-(-rsxy(i1o,i2o-3,i3o-3,0,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,2)-45.*rsxy(i1o,i2o-3,i3o-1,0,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,2)-9.*rsxy(i1o,i2o-3,i3o+2,0,2)+rsxy(
     & i1o,i2o-3,i3o+3,0,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,0,2)-45.*rsxy(i1o,i2o-2,i3o-1,0,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,2)-9.*rsxy(i1o,i2o-2,i3o+2,0,2)+
     & rsxy(i1o,i2o-2,i3o+3,0,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o-1,i3o-2,0,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o-1,i3o+1,0,2)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 2)+rsxy(i1o,i2o-1,i3o+3,0,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o+1,i3o-2,0,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o+1,i3o+1,0,2)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 2)+rsxy(i1o,i2o+1,i3o+3,0,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o+2,i3o-2,0,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o+2,i3o+1,0,2)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 2)+rsxy(i1o,i2o+2,i3o+3,0,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,2)+9.*rsxy(i1o,i2o+3,i3o-2,0,2)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,0,2)-9.*rsxy(i1o,i2o+3,i3o+2,0,2)+
     & rsxy(i1o,i2o+3,i3o+3,0,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_rztt = (2.*rsxy(i1o,i2o,i3o-3,0,2)-27.*rsxy(
     & i1o,i2o,i3o-2,0,2)+270.*rsxy(i1o,i2o,i3o-1,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o,i2o,i3o+1,0,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,2)+2.*rsxy(i1o,i2o,i3o+3,0,2))/(180.*dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (-rsxy(i1o-3,i2o,i3o,1,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,2)-45.*rsxy(i1o-1,i2o,i3o,1,2)+45.*rsxy(i1o+1,i2o,
     & i3o,1,2)-9.*rsxy(i1o+2,i2o,i3o,1,2)+rsxy(i1o+3,i2o,i3o,1,2))/(
     & 60.*dr(0))
                        aj_szs = (-rsxy(i1o,i2o-3,i3o,1,2)+9.*rsxy(i1o,
     & i2o-2,i3o,1,2)-45.*rsxy(i1o,i2o-1,i3o,1,2)+45.*rsxy(i1o,i2o+1,
     & i3o,1,2)-9.*rsxy(i1o,i2o+2,i3o,1,2)+rsxy(i1o,i2o+3,i3o,1,2))/(
     & 60.*dr(1))
                        aj_szt = (-rsxy(i1o,i2o,i3o-3,1,2)+9.*rsxy(i1o,
     & i2o,i3o-2,1,2)-45.*rsxy(i1o,i2o,i3o-1,1,2)+45.*rsxy(i1o,i2o,
     & i3o+1,1,2)-9.*rsxy(i1o,i2o,i3o+2,1,2)+rsxy(i1o,i2o,i3o+3,1,2))
     & /(60.*dr(2))
                        aj_szrr = (2.*rsxy(i1o-3,i2o,i3o,1,2)-27.*rsxy(
     & i1o-2,i2o,i3o,1,2)+270.*rsxy(i1o-1,i2o,i3o,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o+1,i2o,i3o,1,2)-27.*rsxy(i1o+2,i2o,
     & i3o,1,2)+2.*rsxy(i1o+3,i2o,i3o,1,2))/(180.*dr(0)**2)
                        aj_szrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,2)-45.*rsxy(i1o-3,i2o-1,i3o,1,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,2)-9.*rsxy(i1o-3,i2o+2,i3o,1,2)+rsxy(
     & i1o-3,i2o+3,i3o,1,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,1,2)-45.*rsxy(i1o-2,i2o-1,i3o,1,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,2)-9.*rsxy(i1o-2,i2o+2,i3o,1,2)+
     & rsxy(i1o-2,i2o+3,i3o,1,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o-1,i2o-2,i3o,1,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o-1,i2o+1,i3o,1,2)-9.*rsxy(i1o-1,i2o+2,i3o,1,2)
     & +rsxy(i1o-1,i2o+3,i3o,1,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o+1,i2o-2,i3o,1,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o+1,i2o+1,i3o,1,2)-9.*rsxy(i1o+1,i2o+2,i3o,1,2)
     & +rsxy(i1o+1,i2o+3,i3o,1,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o+2,i2o-2,i3o,1,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o+2,i2o+1,i3o,1,2)-9.*rsxy(i1o+2,i2o+2,i3o,1,2)
     & +rsxy(i1o+2,i2o+3,i3o,1,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,2)+9.*rsxy(i1o+3,i2o-2,i3o,1,2)-45.*rsxy(i1o+3,i2o-1,i3o,1,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,2)-9.*rsxy(i1o+3,i2o+2,i3o,1,2)+
     & rsxy(i1o+3,i2o+3,i3o,1,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_szss = (2.*rsxy(i1o,i2o-3,i3o,1,2)-27.*rsxy(
     & i1o,i2o-2,i3o,1,2)+270.*rsxy(i1o,i2o-1,i3o,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o,i2o+1,i3o,1,2)-27.*rsxy(i1o,i2o+2,
     & i3o,1,2)+2.*rsxy(i1o,i2o+3,i3o,1,2))/(180.*dr(1)**2)
                        aj_szrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,2)-45.*rsxy(i1o-3,i2o,i3o-1,1,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,2)-9.*rsxy(i1o-3,i2o,i3o+2,1,2)+rsxy(
     & i1o-3,i2o,i3o+3,1,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,1,2)-45.*rsxy(i1o-2,i2o,i3o-1,1,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,2)-9.*rsxy(i1o-2,i2o,i3o+2,1,2)+
     & rsxy(i1o-2,i2o,i3o+3,1,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o-1,i2o,i3o-2,1,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o-1,i2o,i3o+1,1,2)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 2)+rsxy(i1o-1,i2o,i3o+3,1,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o+1,i2o,i3o-2,1,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o+1,i2o,i3o+1,1,2)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 2)+rsxy(i1o+1,i2o,i3o+3,1,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o+2,i2o,i3o-2,1,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o+2,i2o,i3o+1,1,2)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 2)+rsxy(i1o+2,i2o,i3o+3,1,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,2)+9.*rsxy(i1o+3,i2o,i3o-2,1,2)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,1,2)-9.*rsxy(i1o+3,i2o,i3o+2,1,2)+
     & rsxy(i1o+3,i2o,i3o+3,1,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_szst = (-(-rsxy(i1o,i2o-3,i3o-3,1,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,2)-45.*rsxy(i1o,i2o-3,i3o-1,1,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,2)-9.*rsxy(i1o,i2o-3,i3o+2,1,2)+rsxy(
     & i1o,i2o-3,i3o+3,1,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,1,2)-45.*rsxy(i1o,i2o-2,i3o-1,1,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,2)-9.*rsxy(i1o,i2o-2,i3o+2,1,2)+
     & rsxy(i1o,i2o-2,i3o+3,1,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o-1,i3o-2,1,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o-1,i3o+1,1,2)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 2)+rsxy(i1o,i2o-1,i3o+3,1,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o+1,i3o-2,1,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o+1,i3o+1,1,2)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 2)+rsxy(i1o,i2o+1,i3o+3,1,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o+2,i3o-2,1,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o+2,i3o+1,1,2)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 2)+rsxy(i1o,i2o+2,i3o+3,1,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,2)+9.*rsxy(i1o,i2o+3,i3o-2,1,2)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,1,2)-9.*rsxy(i1o,i2o+3,i3o+2,1,2)+
     & rsxy(i1o,i2o+3,i3o+3,1,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_sztt = (2.*rsxy(i1o,i2o,i3o-3,1,2)-27.*rsxy(
     & i1o,i2o,i3o-2,1,2)+270.*rsxy(i1o,i2o,i3o-1,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o,i2o,i3o+1,1,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,2)+2.*rsxy(i1o,i2o,i3o+3,1,2))/(180.*dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (-rsxy(i1o-3,i2o,i3o,2,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,2)-45.*rsxy(i1o-1,i2o,i3o,2,2)+45.*rsxy(i1o+1,i2o,
     & i3o,2,2)-9.*rsxy(i1o+2,i2o,i3o,2,2)+rsxy(i1o+3,i2o,i3o,2,2))/(
     & 60.*dr(0))
                        aj_tzs = (-rsxy(i1o,i2o-3,i3o,2,2)+9.*rsxy(i1o,
     & i2o-2,i3o,2,2)-45.*rsxy(i1o,i2o-1,i3o,2,2)+45.*rsxy(i1o,i2o+1,
     & i3o,2,2)-9.*rsxy(i1o,i2o+2,i3o,2,2)+rsxy(i1o,i2o+3,i3o,2,2))/(
     & 60.*dr(1))
                        aj_tzt = (-rsxy(i1o,i2o,i3o-3,2,2)+9.*rsxy(i1o,
     & i2o,i3o-2,2,2)-45.*rsxy(i1o,i2o,i3o-1,2,2)+45.*rsxy(i1o,i2o,
     & i3o+1,2,2)-9.*rsxy(i1o,i2o,i3o+2,2,2)+rsxy(i1o,i2o,i3o+3,2,2))
     & /(60.*dr(2))
                        aj_tzrr = (2.*rsxy(i1o-3,i2o,i3o,2,2)-27.*rsxy(
     & i1o-2,i2o,i3o,2,2)+270.*rsxy(i1o-1,i2o,i3o,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o+1,i2o,i3o,2,2)-27.*rsxy(i1o+2,i2o,
     & i3o,2,2)+2.*rsxy(i1o+3,i2o,i3o,2,2))/(180.*dr(0)**2)
                        aj_tzrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,2)-45.*rsxy(i1o-3,i2o-1,i3o,2,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,2)-9.*rsxy(i1o-3,i2o+2,i3o,2,2)+rsxy(
     & i1o-3,i2o+3,i3o,2,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,2,2)-45.*rsxy(i1o-2,i2o-1,i3o,2,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,2)-9.*rsxy(i1o-2,i2o+2,i3o,2,2)+
     & rsxy(i1o-2,i2o+3,i3o,2,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o-1,i2o-2,i3o,2,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o-1,i2o+1,i3o,2,2)-9.*rsxy(i1o-1,i2o+2,i3o,2,2)
     & +rsxy(i1o-1,i2o+3,i3o,2,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o+1,i2o-2,i3o,2,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o+1,i2o+1,i3o,2,2)-9.*rsxy(i1o+1,i2o+2,i3o,2,2)
     & +rsxy(i1o+1,i2o+3,i3o,2,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o+2,i2o-2,i3o,2,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o+2,i2o+1,i3o,2,2)-9.*rsxy(i1o+2,i2o+2,i3o,2,2)
     & +rsxy(i1o+2,i2o+3,i3o,2,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,2)+9.*rsxy(i1o+3,i2o-2,i3o,2,2)-45.*rsxy(i1o+3,i2o-1,i3o,2,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,2)-9.*rsxy(i1o+3,i2o+2,i3o,2,2)+
     & rsxy(i1o+3,i2o+3,i3o,2,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_tzss = (2.*rsxy(i1o,i2o-3,i3o,2,2)-27.*rsxy(
     & i1o,i2o-2,i3o,2,2)+270.*rsxy(i1o,i2o-1,i3o,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o,i2o+1,i3o,2,2)-27.*rsxy(i1o,i2o+2,
     & i3o,2,2)+2.*rsxy(i1o,i2o+3,i3o,2,2))/(180.*dr(1)**2)
                        aj_tzrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,2)-45.*rsxy(i1o-3,i2o,i3o-1,2,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,2)-9.*rsxy(i1o-3,i2o,i3o+2,2,2)+rsxy(
     & i1o-3,i2o,i3o+3,2,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,2,2)-45.*rsxy(i1o-2,i2o,i3o-1,2,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,2)-9.*rsxy(i1o-2,i2o,i3o+2,2,2)+
     & rsxy(i1o-2,i2o,i3o+3,2,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o-1,i2o,i3o-2,2,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o-1,i2o,i3o+1,2,2)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 2)+rsxy(i1o-1,i2o,i3o+3,2,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o+1,i2o,i3o-2,2,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o+1,i2o,i3o+1,2,2)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 2)+rsxy(i1o+1,i2o,i3o+3,2,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o+2,i2o,i3o-2,2,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o+2,i2o,i3o+1,2,2)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 2)+rsxy(i1o+2,i2o,i3o+3,2,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,2)+9.*rsxy(i1o+3,i2o,i3o-2,2,2)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,2,2)-9.*rsxy(i1o+3,i2o,i3o+2,2,2)+
     & rsxy(i1o+3,i2o,i3o+3,2,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_tzst = (-(-rsxy(i1o,i2o-3,i3o-3,2,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,2)-45.*rsxy(i1o,i2o-3,i3o-1,2,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,2)-9.*rsxy(i1o,i2o-3,i3o+2,2,2)+rsxy(
     & i1o,i2o-3,i3o+3,2,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,2,2)-45.*rsxy(i1o,i2o-2,i3o-1,2,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,2)-9.*rsxy(i1o,i2o-2,i3o+2,2,2)+
     & rsxy(i1o,i2o-2,i3o+3,2,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o-1,i3o-2,2,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o-1,i3o+1,2,2)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 2)+rsxy(i1o,i2o-1,i3o+3,2,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o+1,i3o-2,2,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o+1,i3o+1,2,2)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 2)+rsxy(i1o,i2o+1,i3o+3,2,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o+2,i3o-2,2,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o+2,i3o+1,2,2)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 2)+rsxy(i1o,i2o+2,i3o+3,2,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,2)+9.*rsxy(i1o,i2o+3,i3o-2,2,2)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,2,2)-9.*rsxy(i1o,i2o+3,i3o+2,2,2)+
     & rsxy(i1o,i2o+3,i3o+3,2,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_tztt = (2.*rsxy(i1o,i2o,i3o-3,2,2)-27.*rsxy(
     & i1o,i2o,i3o-2,2,2)+270.*rsxy(i1o,i2o,i3o-1,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o,i2o,i3o+1,2,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,2)+2.*rsxy(i1o,i2o,i3o+3,2,2))/(180.*dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.8) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (3.*rsxy(i1o-4,i2o,i3o,0,0)-32.*rsxy(
     & i1o-3,i2o,i3o,0,0)+168.*rsxy(i1o-2,i2o,i3o,0,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+672.*rsxy(i1o+1,i2o,i3o,0,0)-168.*rsxy(i1o+2,
     & i2o,i3o,0,0)+32.*rsxy(i1o+3,i2o,i3o,0,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,0))/(840.*dr(0))
                        aj_rxs = (3.*rsxy(i1o,i2o-4,i3o,0,0)-32.*rsxy(
     & i1o,i2o-3,i3o,0,0)+168.*rsxy(i1o,i2o-2,i3o,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o,i2o+1,i3o,0,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,0)+32.*rsxy(i1o,i2o+3,i3o,0,0)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 0))/(840.*dr(1))
                        aj_rxt = (3.*rsxy(i1o,i2o,i3o-4,0,0)-32.*rsxy(
     & i1o,i2o,i3o-3,0,0)+168.*rsxy(i1o,i2o,i3o-2,0,0)-672.*rsxy(i1o,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o,i2o,i3o+1,0,0)-168.*rsxy(i1o,i2o,
     & i3o+2,0,0)+32.*rsxy(i1o,i2o,i3o+3,0,0)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 0))/(840.*dr(2))
                        aj_rxrr = (-9.*rsxy(i1o-4,i2o,i3o,0,0)+128.*
     & rsxy(i1o-3,i2o,i3o,0,0)-1008.*rsxy(i1o-2,i2o,i3o,0,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,0)-1008.*rsxy(i1o+2,i2o,i3o,0,0)+128.*
     & rsxy(i1o+3,i2o,i3o,0,0)-9.*rsxy(i1o+4,i2o,i3o,0,0))/(5040.*dr(
     & 0)**2)
                        aj_rxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,0)+168.*rsxy(i1o-4,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,0)+672.*rsxy(i1o-4,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,0)+32.*rsxy(i1o-4,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o-3,i2o-3,i3o,0,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o-3,i2o-1,i3o,0,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o-3,i2o+2,i3o,0,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o-3,i2o+4,i3o,0,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,0)-32.*rsxy(i1o-2,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,0)-672.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,0)-168.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,0)-3.*rsxy(i1o-2,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o-1,i2o-2,i3o,0,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o-1,i2o+1,i3o,0,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o-1,i2o+3,i3o,0,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,0)+168.*rsxy(i1o+1,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,0)+672.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,0)+32.*rsxy(i1o+1,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o+2,i2o-3,i3o,0,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o+2,i2o-1,i3o,0,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o+2,i2o+2,i3o,0,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o+2,i2o+4,i3o,0,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,0)-32.*rsxy(i1o+3,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,0)-672.*rsxy(i1o+3,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,0)-168.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,0)-3.*rsxy(i1o+3,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o+4,i2o-2,i3o,0,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o+4,i2o+1,i3o,0,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o+4,i2o+3,i3o,0,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_rxss = (-9.*rsxy(i1o,i2o-4,i3o,0,0)+128.*
     & rsxy(i1o,i2o-3,i3o,0,0)-1008.*rsxy(i1o,i2o-2,i3o,0,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,0)-1008.*rsxy(i1o,i2o+2,i3o,0,0)+128.*
     & rsxy(i1o,i2o+3,i3o,0,0)-9.*rsxy(i1o,i2o+4,i3o,0,0))/(5040.*dr(
     & 1)**2)
                        aj_rxrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,0)+168.*rsxy(i1o-4,i2o,i3o-2,0,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,0)+672.*rsxy(i1o-4,i2o,i3o+1,0,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,0)+32.*rsxy(i1o-4,i2o,i3o+3,0,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,0)-32.*rsxy(i1o-3,i2o,i3o-3,0,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,0)-672.*rsxy(i1o-3,i2o,i3o-1,0,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,0)-168.*rsxy(i1o-3,i2o,i3o+2,0,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,0)-3.*rsxy(i1o-3,i2o,i3o+4,0,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,0)-32.*rsxy(i1o-2,i2o,i3o-3,0,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,0)-672.*rsxy(i1o-2,i2o,i3o-1,0,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,0)-168.*rsxy(i1o-2,i2o,i3o+2,0,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,0)-3.*rsxy(i1o-2,i2o,i3o+4,0,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,0)+168.*rsxy(i1o-1,i2o,i3o-2,0,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o-1,i2o,i3o+1,0,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,0)+32.*rsxy(i1o-1,i2o,i3o+3,0,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,0)+168.*rsxy(i1o+1,i2o,i3o-2,0,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,0)+672.*rsxy(i1o+1,i2o,i3o+1,0,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,0)+32.*rsxy(i1o+1,i2o,i3o+3,0,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,0)-32.*rsxy(i1o+2,i2o,i3o-3,0,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,0)-672.*rsxy(i1o+2,i2o,i3o-1,0,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,0)-168.*rsxy(i1o+2,i2o,i3o+2,0,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,0)-3.*rsxy(i1o+2,i2o,i3o+4,0,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,0)-32.*rsxy(i1o+3,i2o,i3o-3,0,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,0)-672.*rsxy(i1o+3,i2o,i3o-1,0,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,0)-168.*rsxy(i1o+3,i2o,i3o+2,0,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,0)-3.*rsxy(i1o+3,i2o,i3o+4,0,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,0)+168.*rsxy(i1o+4,i2o,i3o-2,0,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o+4,i2o,i3o+1,0,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,0)+32.*rsxy(i1o+4,i2o,i3o+3,0,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_rxst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,0)+168.*rsxy(i1o,i2o-4,i3o-2,0,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,0)+672.*rsxy(i1o,i2o-4,i3o+1,0,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,0)+32.*rsxy(i1o,i2o-4,i3o+3,0,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,0)-32.*rsxy(i1o,i2o-3,i3o-3,0,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,0)-672.*rsxy(i1o,i2o-3,i3o-1,0,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,0)-168.*rsxy(i1o,i2o-3,i3o+2,0,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,0)-3.*rsxy(i1o,i2o-3,i3o+4,0,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,0)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,0,0)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,0,0)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,0,0)-3.*rsxy(i1o,i2o-2,i3o+4,0,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,0)+168.*rsxy(i1o,i2o-1,i3o-2,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,0)+672.*rsxy(i1o,i2o-1,i3o+1,0,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,0)+32.*rsxy(i1o,i2o-1,i3o+3,0,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,0)+168.*rsxy(i1o,i2o+1,i3o-2,0,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,0)+672.*rsxy(i1o,i2o+1,i3o+1,0,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,0)+32.*rsxy(i1o,i2o+1,i3o+3,0,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,0)-32.*rsxy(i1o,i2o+2,i3o-3,0,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,0)-672.*rsxy(i1o,i2o+2,i3o-1,0,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,0)-168.*rsxy(i1o,i2o+2,i3o+2,0,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,0)-3.*rsxy(i1o,i2o+2,i3o+4,0,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,0)-32.*rsxy(i1o,i2o+3,i3o-3,0,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,0)-672.*rsxy(i1o,i2o+3,i3o-1,0,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,0)-168.*rsxy(i1o,i2o+3,i3o+2,0,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,0)-3.*rsxy(i1o,i2o+3,i3o+4,0,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,0)+168.*rsxy(i1o,i2o+4,i3o-2,0,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,0)+672.*rsxy(i1o,i2o+4,i3o+1,0,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,0)+32.*rsxy(i1o,i2o+4,i3o+3,0,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_rxtt = (-9.*rsxy(i1o,i2o,i3o-4,0,0)+128.*
     & rsxy(i1o,i2o,i3o-3,0,0)-1008.*rsxy(i1o,i2o,i3o-2,0,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,0)-1008.*rsxy(i1o,i2o,i3o+2,0,0)+128.*
     & rsxy(i1o,i2o,i3o+3,0,0)-9.*rsxy(i1o,i2o,i3o+4,0,0))/(5040.*dr(
     & 2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (3.*rsxy(i1o-4,i2o,i3o,1,0)-32.*rsxy(
     & i1o-3,i2o,i3o,1,0)+168.*rsxy(i1o-2,i2o,i3o,1,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+672.*rsxy(i1o+1,i2o,i3o,1,0)-168.*rsxy(i1o+2,
     & i2o,i3o,1,0)+32.*rsxy(i1o+3,i2o,i3o,1,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,0))/(840.*dr(0))
                        aj_sxs = (3.*rsxy(i1o,i2o-4,i3o,1,0)-32.*rsxy(
     & i1o,i2o-3,i3o,1,0)+168.*rsxy(i1o,i2o-2,i3o,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o,i2o+1,i3o,1,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,0)+32.*rsxy(i1o,i2o+3,i3o,1,0)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 0))/(840.*dr(1))
                        aj_sxt = (3.*rsxy(i1o,i2o,i3o-4,1,0)-32.*rsxy(
     & i1o,i2o,i3o-3,1,0)+168.*rsxy(i1o,i2o,i3o-2,1,0)-672.*rsxy(i1o,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o,i2o,i3o+1,1,0)-168.*rsxy(i1o,i2o,
     & i3o+2,1,0)+32.*rsxy(i1o,i2o,i3o+3,1,0)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 0))/(840.*dr(2))
                        aj_sxrr = (-9.*rsxy(i1o-4,i2o,i3o,1,0)+128.*
     & rsxy(i1o-3,i2o,i3o,1,0)-1008.*rsxy(i1o-2,i2o,i3o,1,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,0)-1008.*rsxy(i1o+2,i2o,i3o,1,0)+128.*
     & rsxy(i1o+3,i2o,i3o,1,0)-9.*rsxy(i1o+4,i2o,i3o,1,0))/(5040.*dr(
     & 0)**2)
                        aj_sxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,0)+168.*rsxy(i1o-4,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,0)+672.*rsxy(i1o-4,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,0)+32.*rsxy(i1o-4,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o-3,i2o-3,i3o,1,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o-3,i2o-1,i3o,1,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o-3,i2o+2,i3o,1,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o-3,i2o+4,i3o,1,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,0)-32.*rsxy(i1o-2,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,0)-672.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,0)-168.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,0)-3.*rsxy(i1o-2,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o-1,i2o-2,i3o,1,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o-1,i2o+1,i3o,1,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o-1,i2o+3,i3o,1,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,0)+168.*rsxy(i1o+1,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,0)+672.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,0)+32.*rsxy(i1o+1,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o+2,i2o-3,i3o,1,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o+2,i2o-1,i3o,1,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o+2,i2o+2,i3o,1,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o+2,i2o+4,i3o,1,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,0)-32.*rsxy(i1o+3,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,0)-672.*rsxy(i1o+3,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,0)-168.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,0)-3.*rsxy(i1o+3,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o+4,i2o-2,i3o,1,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o+4,i2o+1,i3o,1,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o+4,i2o+3,i3o,1,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_sxss = (-9.*rsxy(i1o,i2o-4,i3o,1,0)+128.*
     & rsxy(i1o,i2o-3,i3o,1,0)-1008.*rsxy(i1o,i2o-2,i3o,1,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,0)-1008.*rsxy(i1o,i2o+2,i3o,1,0)+128.*
     & rsxy(i1o,i2o+3,i3o,1,0)-9.*rsxy(i1o,i2o+4,i3o,1,0))/(5040.*dr(
     & 1)**2)
                        aj_sxrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,0)+168.*rsxy(i1o-4,i2o,i3o-2,1,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,0)+672.*rsxy(i1o-4,i2o,i3o+1,1,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,0)+32.*rsxy(i1o-4,i2o,i3o+3,1,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,0)-32.*rsxy(i1o-3,i2o,i3o-3,1,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,0)-672.*rsxy(i1o-3,i2o,i3o-1,1,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,0)-168.*rsxy(i1o-3,i2o,i3o+2,1,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,0)-3.*rsxy(i1o-3,i2o,i3o+4,1,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,0)-32.*rsxy(i1o-2,i2o,i3o-3,1,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,0)-672.*rsxy(i1o-2,i2o,i3o-1,1,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,0)-168.*rsxy(i1o-2,i2o,i3o+2,1,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,0)-3.*rsxy(i1o-2,i2o,i3o+4,1,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,0)+168.*rsxy(i1o-1,i2o,i3o-2,1,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o-1,i2o,i3o+1,1,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,0)+32.*rsxy(i1o-1,i2o,i3o+3,1,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,0)+168.*rsxy(i1o+1,i2o,i3o-2,1,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,0)+672.*rsxy(i1o+1,i2o,i3o+1,1,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,0)+32.*rsxy(i1o+1,i2o,i3o+3,1,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,0)-32.*rsxy(i1o+2,i2o,i3o-3,1,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,0)-672.*rsxy(i1o+2,i2o,i3o-1,1,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,0)-168.*rsxy(i1o+2,i2o,i3o+2,1,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,0)-3.*rsxy(i1o+2,i2o,i3o+4,1,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,0)-32.*rsxy(i1o+3,i2o,i3o-3,1,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,0)-672.*rsxy(i1o+3,i2o,i3o-1,1,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,0)-168.*rsxy(i1o+3,i2o,i3o+2,1,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,0)-3.*rsxy(i1o+3,i2o,i3o+4,1,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,0)+168.*rsxy(i1o+4,i2o,i3o-2,1,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o+4,i2o,i3o+1,1,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,0)+32.*rsxy(i1o+4,i2o,i3o+3,1,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_sxst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,0)+168.*rsxy(i1o,i2o-4,i3o-2,1,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,0)+672.*rsxy(i1o,i2o-4,i3o+1,1,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,0)+32.*rsxy(i1o,i2o-4,i3o+3,1,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,0)-32.*rsxy(i1o,i2o-3,i3o-3,1,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,0)-672.*rsxy(i1o,i2o-3,i3o-1,1,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,0)-168.*rsxy(i1o,i2o-3,i3o+2,1,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,0)-3.*rsxy(i1o,i2o-3,i3o+4,1,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,0)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,1,0)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,1,0)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,1,0)-3.*rsxy(i1o,i2o-2,i3o+4,1,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,0)+168.*rsxy(i1o,i2o-1,i3o-2,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,0)+672.*rsxy(i1o,i2o-1,i3o+1,1,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,0)+32.*rsxy(i1o,i2o-1,i3o+3,1,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,0)+168.*rsxy(i1o,i2o+1,i3o-2,1,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,0)+672.*rsxy(i1o,i2o+1,i3o+1,1,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,0)+32.*rsxy(i1o,i2o+1,i3o+3,1,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,0)-32.*rsxy(i1o,i2o+2,i3o-3,1,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,0)-672.*rsxy(i1o,i2o+2,i3o-1,1,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,0)-168.*rsxy(i1o,i2o+2,i3o+2,1,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,0)-3.*rsxy(i1o,i2o+2,i3o+4,1,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,0)-32.*rsxy(i1o,i2o+3,i3o-3,1,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,0)-672.*rsxy(i1o,i2o+3,i3o-1,1,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,0)-168.*rsxy(i1o,i2o+3,i3o+2,1,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,0)-3.*rsxy(i1o,i2o+3,i3o+4,1,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,0)+168.*rsxy(i1o,i2o+4,i3o-2,1,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,0)+672.*rsxy(i1o,i2o+4,i3o+1,1,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,0)+32.*rsxy(i1o,i2o+4,i3o+3,1,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_sxtt = (-9.*rsxy(i1o,i2o,i3o-4,1,0)+128.*
     & rsxy(i1o,i2o,i3o-3,1,0)-1008.*rsxy(i1o,i2o,i3o-2,1,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,0)-1008.*rsxy(i1o,i2o,i3o+2,1,0)+128.*
     & rsxy(i1o,i2o,i3o+3,1,0)-9.*rsxy(i1o,i2o,i3o+4,1,0))/(5040.*dr(
     & 2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (3.*rsxy(i1o-4,i2o,i3o,2,0)-32.*rsxy(
     & i1o-3,i2o,i3o,2,0)+168.*rsxy(i1o-2,i2o,i3o,2,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,0)+672.*rsxy(i1o+1,i2o,i3o,2,0)-168.*rsxy(i1o+2,
     & i2o,i3o,2,0)+32.*rsxy(i1o+3,i2o,i3o,2,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,0))/(840.*dr(0))
                        aj_txs = (3.*rsxy(i1o,i2o-4,i3o,2,0)-32.*rsxy(
     & i1o,i2o-3,i3o,2,0)+168.*rsxy(i1o,i2o-2,i3o,2,0)-672.*rsxy(i1o,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o,i2o+1,i3o,2,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,0)+32.*rsxy(i1o,i2o+3,i3o,2,0)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 0))/(840.*dr(1))
                        aj_txt = (3.*rsxy(i1o,i2o,i3o-4,2,0)-32.*rsxy(
     & i1o,i2o,i3o-3,2,0)+168.*rsxy(i1o,i2o,i3o-2,2,0)-672.*rsxy(i1o,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o,i2o,i3o+1,2,0)-168.*rsxy(i1o,i2o,
     & i3o+2,2,0)+32.*rsxy(i1o,i2o,i3o+3,2,0)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 0))/(840.*dr(2))
                        aj_txrr = (-9.*rsxy(i1o-4,i2o,i3o,2,0)+128.*
     & rsxy(i1o-3,i2o,i3o,2,0)-1008.*rsxy(i1o-2,i2o,i3o,2,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,0)-1008.*rsxy(i1o+2,i2o,i3o,2,0)+128.*
     & rsxy(i1o+3,i2o,i3o,2,0)-9.*rsxy(i1o+4,i2o,i3o,2,0))/(5040.*dr(
     & 0)**2)
                        aj_txrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,0)+168.*rsxy(i1o-4,i2o-2,i3o,2,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,0)+672.*rsxy(i1o-4,i2o+1,i3o,2,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,0)+32.*rsxy(i1o-4,i2o+3,i3o,2,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,0)-32.*rsxy(i1o-3,i2o-3,i3o,2,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,0)-672.*rsxy(i1o-3,i2o-1,i3o,2,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,0)-168.*rsxy(i1o-3,i2o+2,i3o,2,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,0)-3.*rsxy(i1o-3,i2o+4,i3o,2,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,0)-32.*rsxy(i1o-2,i2o-3,i3o,2,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,0)-672.*rsxy(i1o-2,i2o-1,i3o,2,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,0)-168.*rsxy(i1o-2,i2o+2,i3o,2,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,0)-3.*rsxy(i1o-2,i2o+4,i3o,2,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,0)+168.*rsxy(i1o-1,i2o-2,i3o,2,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o-1,i2o+1,i3o,2,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,0)+32.*rsxy(i1o-1,i2o+3,i3o,2,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,0)+168.*rsxy(i1o+1,i2o-2,i3o,2,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,0)+672.*rsxy(i1o+1,i2o+1,i3o,2,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,0)+32.*rsxy(i1o+1,i2o+3,i3o,2,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,0)-32.*rsxy(i1o+2,i2o-3,i3o,2,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,0)-672.*rsxy(i1o+2,i2o-1,i3o,2,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,0)-168.*rsxy(i1o+2,i2o+2,i3o,2,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,0)-3.*rsxy(i1o+2,i2o+4,i3o,2,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,0)-32.*rsxy(i1o+3,i2o-3,i3o,2,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,0)-672.*rsxy(i1o+3,i2o-1,i3o,2,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,0)-168.*rsxy(i1o+3,i2o+2,i3o,2,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,0)-3.*rsxy(i1o+3,i2o+4,i3o,2,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,0)+168.*rsxy(i1o+4,i2o-2,i3o,2,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o+4,i2o+1,i3o,2,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,0)+32.*rsxy(i1o+4,i2o+3,i3o,2,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_txss = (-9.*rsxy(i1o,i2o-4,i3o,2,0)+128.*
     & rsxy(i1o,i2o-3,i3o,2,0)-1008.*rsxy(i1o,i2o-2,i3o,2,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,0)-1008.*rsxy(i1o,i2o+2,i3o,2,0)+128.*
     & rsxy(i1o,i2o+3,i3o,2,0)-9.*rsxy(i1o,i2o+4,i3o,2,0))/(5040.*dr(
     & 1)**2)
                        aj_txrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,0)+168.*rsxy(i1o-4,i2o,i3o-2,2,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,0)+672.*rsxy(i1o-4,i2o,i3o+1,2,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,0)+32.*rsxy(i1o-4,i2o,i3o+3,2,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,0)-32.*rsxy(i1o-3,i2o,i3o-3,2,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,0)-672.*rsxy(i1o-3,i2o,i3o-1,2,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,0)-168.*rsxy(i1o-3,i2o,i3o+2,2,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,0)-3.*rsxy(i1o-3,i2o,i3o+4,2,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,0)-32.*rsxy(i1o-2,i2o,i3o-3,2,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,0)-672.*rsxy(i1o-2,i2o,i3o-1,2,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,0)-168.*rsxy(i1o-2,i2o,i3o+2,2,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,0)-3.*rsxy(i1o-2,i2o,i3o+4,2,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,0)+168.*rsxy(i1o-1,i2o,i3o-2,2,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o-1,i2o,i3o+1,2,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,0)+32.*rsxy(i1o-1,i2o,i3o+3,2,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,0)+168.*rsxy(i1o+1,i2o,i3o-2,2,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,0)+672.*rsxy(i1o+1,i2o,i3o+1,2,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,0)+32.*rsxy(i1o+1,i2o,i3o+3,2,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,0)-32.*rsxy(i1o+2,i2o,i3o-3,2,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,0)-672.*rsxy(i1o+2,i2o,i3o-1,2,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,0)-168.*rsxy(i1o+2,i2o,i3o+2,2,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,0)-3.*rsxy(i1o+2,i2o,i3o+4,2,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,0)-32.*rsxy(i1o+3,i2o,i3o-3,2,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,0)-672.*rsxy(i1o+3,i2o,i3o-1,2,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,0)-168.*rsxy(i1o+3,i2o,i3o+2,2,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,0)-3.*rsxy(i1o+3,i2o,i3o+4,2,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,0)+168.*rsxy(i1o+4,i2o,i3o-2,2,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o+4,i2o,i3o+1,2,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,0)+32.*rsxy(i1o+4,i2o,i3o+3,2,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_txst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,0)+168.*rsxy(i1o,i2o-4,i3o-2,2,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,0)+672.*rsxy(i1o,i2o-4,i3o+1,2,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,0)+32.*rsxy(i1o,i2o-4,i3o+3,2,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,0)-32.*rsxy(i1o,i2o-3,i3o-3,2,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,0)-672.*rsxy(i1o,i2o-3,i3o-1,2,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,0)-168.*rsxy(i1o,i2o-3,i3o+2,2,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,0)-3.*rsxy(i1o,i2o-3,i3o+4,2,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,0)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,2,0)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,2,0)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,2,0)-3.*rsxy(i1o,i2o-2,i3o+4,2,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,0)+168.*rsxy(i1o,i2o-1,i3o-2,2,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,0)+672.*rsxy(i1o,i2o-1,i3o+1,2,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,0)+32.*rsxy(i1o,i2o-1,i3o+3,2,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,0)+168.*rsxy(i1o,i2o+1,i3o-2,2,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,0)+672.*rsxy(i1o,i2o+1,i3o+1,2,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,0)+32.*rsxy(i1o,i2o+1,i3o+3,2,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,0)-32.*rsxy(i1o,i2o+2,i3o-3,2,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,0)-672.*rsxy(i1o,i2o+2,i3o-1,2,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,0)-168.*rsxy(i1o,i2o+2,i3o+2,2,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,0)-3.*rsxy(i1o,i2o+2,i3o+4,2,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,0)-32.*rsxy(i1o,i2o+3,i3o-3,2,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,0)-672.*rsxy(i1o,i2o+3,i3o-1,2,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,0)-168.*rsxy(i1o,i2o+3,i3o+2,2,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,0)-3.*rsxy(i1o,i2o+3,i3o+4,2,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,0)+168.*rsxy(i1o,i2o+4,i3o-2,2,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,0)+672.*rsxy(i1o,i2o+4,i3o+1,2,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,0)+32.*rsxy(i1o,i2o+4,i3o+3,2,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_txtt = (-9.*rsxy(i1o,i2o,i3o-4,2,0)+128.*
     & rsxy(i1o,i2o,i3o-3,2,0)-1008.*rsxy(i1o,i2o,i3o-2,2,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,0)-1008.*rsxy(i1o,i2o,i3o+2,2,0)+128.*
     & rsxy(i1o,i2o,i3o+3,2,0)-9.*rsxy(i1o,i2o,i3o+4,2,0))/(5040.*dr(
     & 2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (3.*rsxy(i1o-4,i2o,i3o,0,1)-32.*rsxy(
     & i1o-3,i2o,i3o,0,1)+168.*rsxy(i1o-2,i2o,i3o,0,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+672.*rsxy(i1o+1,i2o,i3o,0,1)-168.*rsxy(i1o+2,
     & i2o,i3o,0,1)+32.*rsxy(i1o+3,i2o,i3o,0,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,1))/(840.*dr(0))
                        aj_rys = (3.*rsxy(i1o,i2o-4,i3o,0,1)-32.*rsxy(
     & i1o,i2o-3,i3o,0,1)+168.*rsxy(i1o,i2o-2,i3o,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o,i2o+1,i3o,0,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,1)+32.*rsxy(i1o,i2o+3,i3o,0,1)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 1))/(840.*dr(1))
                        aj_ryt = (3.*rsxy(i1o,i2o,i3o-4,0,1)-32.*rsxy(
     & i1o,i2o,i3o-3,0,1)+168.*rsxy(i1o,i2o,i3o-2,0,1)-672.*rsxy(i1o,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o,i2o,i3o+1,0,1)-168.*rsxy(i1o,i2o,
     & i3o+2,0,1)+32.*rsxy(i1o,i2o,i3o+3,0,1)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 1))/(840.*dr(2))
                        aj_ryrr = (-9.*rsxy(i1o-4,i2o,i3o,0,1)+128.*
     & rsxy(i1o-3,i2o,i3o,0,1)-1008.*rsxy(i1o-2,i2o,i3o,0,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,1)-1008.*rsxy(i1o+2,i2o,i3o,0,1)+128.*
     & rsxy(i1o+3,i2o,i3o,0,1)-9.*rsxy(i1o+4,i2o,i3o,0,1))/(5040.*dr(
     & 0)**2)
                        aj_ryrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,1)+168.*rsxy(i1o-4,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,1)+672.*rsxy(i1o-4,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,1)+32.*rsxy(i1o-4,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o-3,i2o-3,i3o,0,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o-3,i2o-1,i3o,0,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o-3,i2o+2,i3o,0,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o-3,i2o+4,i3o,0,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,1)-32.*rsxy(i1o-2,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,1)-672.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,1)-168.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,1)-3.*rsxy(i1o-2,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o-1,i2o-2,i3o,0,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o-1,i2o+1,i3o,0,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o-1,i2o+3,i3o,0,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,1)+168.*rsxy(i1o+1,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,1)+672.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,1)+32.*rsxy(i1o+1,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o+2,i2o-3,i3o,0,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o+2,i2o-1,i3o,0,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o+2,i2o+2,i3o,0,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o+2,i2o+4,i3o,0,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,1)-32.*rsxy(i1o+3,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,1)-672.*rsxy(i1o+3,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,1)-168.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,1)-3.*rsxy(i1o+3,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o+4,i2o-2,i3o,0,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o+4,i2o+1,i3o,0,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o+4,i2o+3,i3o,0,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_ryss = (-9.*rsxy(i1o,i2o-4,i3o,0,1)+128.*
     & rsxy(i1o,i2o-3,i3o,0,1)-1008.*rsxy(i1o,i2o-2,i3o,0,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,1)-1008.*rsxy(i1o,i2o+2,i3o,0,1)+128.*
     & rsxy(i1o,i2o+3,i3o,0,1)-9.*rsxy(i1o,i2o+4,i3o,0,1))/(5040.*dr(
     & 1)**2)
                        aj_ryrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,1)+168.*rsxy(i1o-4,i2o,i3o-2,0,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,1)+672.*rsxy(i1o-4,i2o,i3o+1,0,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,1)+32.*rsxy(i1o-4,i2o,i3o+3,0,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,1)-32.*rsxy(i1o-3,i2o,i3o-3,0,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,1)-672.*rsxy(i1o-3,i2o,i3o-1,0,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,1)-168.*rsxy(i1o-3,i2o,i3o+2,0,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,1)-3.*rsxy(i1o-3,i2o,i3o+4,0,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,1)-32.*rsxy(i1o-2,i2o,i3o-3,0,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,1)-672.*rsxy(i1o-2,i2o,i3o-1,0,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,1)-168.*rsxy(i1o-2,i2o,i3o+2,0,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,1)-3.*rsxy(i1o-2,i2o,i3o+4,0,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,1)+168.*rsxy(i1o-1,i2o,i3o-2,0,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o-1,i2o,i3o+1,0,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,1)+32.*rsxy(i1o-1,i2o,i3o+3,0,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,1)+168.*rsxy(i1o+1,i2o,i3o-2,0,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,1)+672.*rsxy(i1o+1,i2o,i3o+1,0,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,1)+32.*rsxy(i1o+1,i2o,i3o+3,0,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,1)-32.*rsxy(i1o+2,i2o,i3o-3,0,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,1)-672.*rsxy(i1o+2,i2o,i3o-1,0,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,1)-168.*rsxy(i1o+2,i2o,i3o+2,0,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,1)-3.*rsxy(i1o+2,i2o,i3o+4,0,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,1)-32.*rsxy(i1o+3,i2o,i3o-3,0,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,1)-672.*rsxy(i1o+3,i2o,i3o-1,0,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,1)-168.*rsxy(i1o+3,i2o,i3o+2,0,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,1)-3.*rsxy(i1o+3,i2o,i3o+4,0,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,1)+168.*rsxy(i1o+4,i2o,i3o-2,0,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o+4,i2o,i3o+1,0,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,1)+32.*rsxy(i1o+4,i2o,i3o+3,0,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_ryst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,1)+168.*rsxy(i1o,i2o-4,i3o-2,0,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,1)+672.*rsxy(i1o,i2o-4,i3o+1,0,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,1)+32.*rsxy(i1o,i2o-4,i3o+3,0,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,1)-32.*rsxy(i1o,i2o-3,i3o-3,0,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,1)-672.*rsxy(i1o,i2o-3,i3o-1,0,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,1)-168.*rsxy(i1o,i2o-3,i3o+2,0,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,1)-3.*rsxy(i1o,i2o-3,i3o+4,0,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,1)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,0,1)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,0,1)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,0,1)-3.*rsxy(i1o,i2o-2,i3o+4,0,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,1)+168.*rsxy(i1o,i2o-1,i3o-2,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,1)+672.*rsxy(i1o,i2o-1,i3o+1,0,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,1)+32.*rsxy(i1o,i2o-1,i3o+3,0,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,1)+168.*rsxy(i1o,i2o+1,i3o-2,0,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,1)+672.*rsxy(i1o,i2o+1,i3o+1,0,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,1)+32.*rsxy(i1o,i2o+1,i3o+3,0,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,1)-32.*rsxy(i1o,i2o+2,i3o-3,0,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,1)-672.*rsxy(i1o,i2o+2,i3o-1,0,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,1)-168.*rsxy(i1o,i2o+2,i3o+2,0,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,1)-3.*rsxy(i1o,i2o+2,i3o+4,0,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,1)-32.*rsxy(i1o,i2o+3,i3o-3,0,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,1)-672.*rsxy(i1o,i2o+3,i3o-1,0,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,1)-168.*rsxy(i1o,i2o+3,i3o+2,0,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,1)-3.*rsxy(i1o,i2o+3,i3o+4,0,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,1)+168.*rsxy(i1o,i2o+4,i3o-2,0,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,1)+672.*rsxy(i1o,i2o+4,i3o+1,0,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,1)+32.*rsxy(i1o,i2o+4,i3o+3,0,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_rytt = (-9.*rsxy(i1o,i2o,i3o-4,0,1)+128.*
     & rsxy(i1o,i2o,i3o-3,0,1)-1008.*rsxy(i1o,i2o,i3o-2,0,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,1)-1008.*rsxy(i1o,i2o,i3o+2,0,1)+128.*
     & rsxy(i1o,i2o,i3o+3,0,1)-9.*rsxy(i1o,i2o,i3o+4,0,1))/(5040.*dr(
     & 2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (3.*rsxy(i1o-4,i2o,i3o,1,1)-32.*rsxy(
     & i1o-3,i2o,i3o,1,1)+168.*rsxy(i1o-2,i2o,i3o,1,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+672.*rsxy(i1o+1,i2o,i3o,1,1)-168.*rsxy(i1o+2,
     & i2o,i3o,1,1)+32.*rsxy(i1o+3,i2o,i3o,1,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,1))/(840.*dr(0))
                        aj_sys = (3.*rsxy(i1o,i2o-4,i3o,1,1)-32.*rsxy(
     & i1o,i2o-3,i3o,1,1)+168.*rsxy(i1o,i2o-2,i3o,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o,i2o+1,i3o,1,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,1)+32.*rsxy(i1o,i2o+3,i3o,1,1)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 1))/(840.*dr(1))
                        aj_syt = (3.*rsxy(i1o,i2o,i3o-4,1,1)-32.*rsxy(
     & i1o,i2o,i3o-3,1,1)+168.*rsxy(i1o,i2o,i3o-2,1,1)-672.*rsxy(i1o,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o,i2o,i3o+1,1,1)-168.*rsxy(i1o,i2o,
     & i3o+2,1,1)+32.*rsxy(i1o,i2o,i3o+3,1,1)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 1))/(840.*dr(2))
                        aj_syrr = (-9.*rsxy(i1o-4,i2o,i3o,1,1)+128.*
     & rsxy(i1o-3,i2o,i3o,1,1)-1008.*rsxy(i1o-2,i2o,i3o,1,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,1)-1008.*rsxy(i1o+2,i2o,i3o,1,1)+128.*
     & rsxy(i1o+3,i2o,i3o,1,1)-9.*rsxy(i1o+4,i2o,i3o,1,1))/(5040.*dr(
     & 0)**2)
                        aj_syrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,1)+168.*rsxy(i1o-4,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,1)+672.*rsxy(i1o-4,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,1)+32.*rsxy(i1o-4,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o-3,i2o-3,i3o,1,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o-3,i2o-1,i3o,1,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o-3,i2o+2,i3o,1,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o-3,i2o+4,i3o,1,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,1)-32.*rsxy(i1o-2,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,1)-672.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,1)-168.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,1)-3.*rsxy(i1o-2,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o-1,i2o-2,i3o,1,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o-1,i2o+1,i3o,1,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o-1,i2o+3,i3o,1,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,1)+168.*rsxy(i1o+1,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,1)+672.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,1)+32.*rsxy(i1o+1,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o+2,i2o-3,i3o,1,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o+2,i2o-1,i3o,1,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o+2,i2o+2,i3o,1,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o+2,i2o+4,i3o,1,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,1)-32.*rsxy(i1o+3,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,1)-672.*rsxy(i1o+3,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,1)-168.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,1)-3.*rsxy(i1o+3,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o+4,i2o-2,i3o,1,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o+4,i2o+1,i3o,1,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o+4,i2o+3,i3o,1,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_syss = (-9.*rsxy(i1o,i2o-4,i3o,1,1)+128.*
     & rsxy(i1o,i2o-3,i3o,1,1)-1008.*rsxy(i1o,i2o-2,i3o,1,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,1)-1008.*rsxy(i1o,i2o+2,i3o,1,1)+128.*
     & rsxy(i1o,i2o+3,i3o,1,1)-9.*rsxy(i1o,i2o+4,i3o,1,1))/(5040.*dr(
     & 1)**2)
                        aj_syrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,1)+168.*rsxy(i1o-4,i2o,i3o-2,1,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,1)+672.*rsxy(i1o-4,i2o,i3o+1,1,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,1)+32.*rsxy(i1o-4,i2o,i3o+3,1,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,1)-32.*rsxy(i1o-3,i2o,i3o-3,1,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,1)-672.*rsxy(i1o-3,i2o,i3o-1,1,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,1)-168.*rsxy(i1o-3,i2o,i3o+2,1,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,1)-3.*rsxy(i1o-3,i2o,i3o+4,1,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,1)-32.*rsxy(i1o-2,i2o,i3o-3,1,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,1)-672.*rsxy(i1o-2,i2o,i3o-1,1,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,1)-168.*rsxy(i1o-2,i2o,i3o+2,1,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,1)-3.*rsxy(i1o-2,i2o,i3o+4,1,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,1)+168.*rsxy(i1o-1,i2o,i3o-2,1,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o-1,i2o,i3o+1,1,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,1)+32.*rsxy(i1o-1,i2o,i3o+3,1,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,1)+168.*rsxy(i1o+1,i2o,i3o-2,1,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,1)+672.*rsxy(i1o+1,i2o,i3o+1,1,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,1)+32.*rsxy(i1o+1,i2o,i3o+3,1,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,1)-32.*rsxy(i1o+2,i2o,i3o-3,1,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,1)-672.*rsxy(i1o+2,i2o,i3o-1,1,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,1)-168.*rsxy(i1o+2,i2o,i3o+2,1,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,1)-3.*rsxy(i1o+2,i2o,i3o+4,1,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,1)-32.*rsxy(i1o+3,i2o,i3o-3,1,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,1)-672.*rsxy(i1o+3,i2o,i3o-1,1,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,1)-168.*rsxy(i1o+3,i2o,i3o+2,1,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,1)-3.*rsxy(i1o+3,i2o,i3o+4,1,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,1)+168.*rsxy(i1o+4,i2o,i3o-2,1,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o+4,i2o,i3o+1,1,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,1)+32.*rsxy(i1o+4,i2o,i3o+3,1,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_syst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,1)+168.*rsxy(i1o,i2o-4,i3o-2,1,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,1)+672.*rsxy(i1o,i2o-4,i3o+1,1,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,1)+32.*rsxy(i1o,i2o-4,i3o+3,1,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,1)-32.*rsxy(i1o,i2o-3,i3o-3,1,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,1)-672.*rsxy(i1o,i2o-3,i3o-1,1,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,1)-168.*rsxy(i1o,i2o-3,i3o+2,1,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,1)-3.*rsxy(i1o,i2o-3,i3o+4,1,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,1)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,1,1)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,1,1)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,1,1)-3.*rsxy(i1o,i2o-2,i3o+4,1,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,1)+168.*rsxy(i1o,i2o-1,i3o-2,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,1)+672.*rsxy(i1o,i2o-1,i3o+1,1,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,1)+32.*rsxy(i1o,i2o-1,i3o+3,1,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,1)+168.*rsxy(i1o,i2o+1,i3o-2,1,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,1)+672.*rsxy(i1o,i2o+1,i3o+1,1,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,1)+32.*rsxy(i1o,i2o+1,i3o+3,1,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,1)-32.*rsxy(i1o,i2o+2,i3o-3,1,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,1)-672.*rsxy(i1o,i2o+2,i3o-1,1,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,1)-168.*rsxy(i1o,i2o+2,i3o+2,1,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,1)-3.*rsxy(i1o,i2o+2,i3o+4,1,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,1)-32.*rsxy(i1o,i2o+3,i3o-3,1,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,1)-672.*rsxy(i1o,i2o+3,i3o-1,1,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,1)-168.*rsxy(i1o,i2o+3,i3o+2,1,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,1)-3.*rsxy(i1o,i2o+3,i3o+4,1,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,1)+168.*rsxy(i1o,i2o+4,i3o-2,1,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,1)+672.*rsxy(i1o,i2o+4,i3o+1,1,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,1)+32.*rsxy(i1o,i2o+4,i3o+3,1,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_sytt = (-9.*rsxy(i1o,i2o,i3o-4,1,1)+128.*
     & rsxy(i1o,i2o,i3o-3,1,1)-1008.*rsxy(i1o,i2o,i3o-2,1,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,1)-1008.*rsxy(i1o,i2o,i3o+2,1,1)+128.*
     & rsxy(i1o,i2o,i3o+3,1,1)-9.*rsxy(i1o,i2o,i3o+4,1,1))/(5040.*dr(
     & 2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (3.*rsxy(i1o-4,i2o,i3o,2,1)-32.*rsxy(
     & i1o-3,i2o,i3o,2,1)+168.*rsxy(i1o-2,i2o,i3o,2,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,1)+672.*rsxy(i1o+1,i2o,i3o,2,1)-168.*rsxy(i1o+2,
     & i2o,i3o,2,1)+32.*rsxy(i1o+3,i2o,i3o,2,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,1))/(840.*dr(0))
                        aj_tys = (3.*rsxy(i1o,i2o-4,i3o,2,1)-32.*rsxy(
     & i1o,i2o-3,i3o,2,1)+168.*rsxy(i1o,i2o-2,i3o,2,1)-672.*rsxy(i1o,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o,i2o+1,i3o,2,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,1)+32.*rsxy(i1o,i2o+3,i3o,2,1)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 1))/(840.*dr(1))
                        aj_tyt = (3.*rsxy(i1o,i2o,i3o-4,2,1)-32.*rsxy(
     & i1o,i2o,i3o-3,2,1)+168.*rsxy(i1o,i2o,i3o-2,2,1)-672.*rsxy(i1o,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o,i2o,i3o+1,2,1)-168.*rsxy(i1o,i2o,
     & i3o+2,2,1)+32.*rsxy(i1o,i2o,i3o+3,2,1)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 1))/(840.*dr(2))
                        aj_tyrr = (-9.*rsxy(i1o-4,i2o,i3o,2,1)+128.*
     & rsxy(i1o-3,i2o,i3o,2,1)-1008.*rsxy(i1o-2,i2o,i3o,2,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,1)-1008.*rsxy(i1o+2,i2o,i3o,2,1)+128.*
     & rsxy(i1o+3,i2o,i3o,2,1)-9.*rsxy(i1o+4,i2o,i3o,2,1))/(5040.*dr(
     & 0)**2)
                        aj_tyrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,1)+168.*rsxy(i1o-4,i2o-2,i3o,2,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,1)+672.*rsxy(i1o-4,i2o+1,i3o,2,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,1)+32.*rsxy(i1o-4,i2o+3,i3o,2,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,1)-32.*rsxy(i1o-3,i2o-3,i3o,2,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,1)-672.*rsxy(i1o-3,i2o-1,i3o,2,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,1)-168.*rsxy(i1o-3,i2o+2,i3o,2,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,1)-3.*rsxy(i1o-3,i2o+4,i3o,2,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,1)-32.*rsxy(i1o-2,i2o-3,i3o,2,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,1)-672.*rsxy(i1o-2,i2o-1,i3o,2,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,1)-168.*rsxy(i1o-2,i2o+2,i3o,2,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,1)-3.*rsxy(i1o-2,i2o+4,i3o,2,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,1)+168.*rsxy(i1o-1,i2o-2,i3o,2,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o-1,i2o+1,i3o,2,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,1)+32.*rsxy(i1o-1,i2o+3,i3o,2,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,1)+168.*rsxy(i1o+1,i2o-2,i3o,2,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,1)+672.*rsxy(i1o+1,i2o+1,i3o,2,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,1)+32.*rsxy(i1o+1,i2o+3,i3o,2,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,1)-32.*rsxy(i1o+2,i2o-3,i3o,2,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,1)-672.*rsxy(i1o+2,i2o-1,i3o,2,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,1)-168.*rsxy(i1o+2,i2o+2,i3o,2,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,1)-3.*rsxy(i1o+2,i2o+4,i3o,2,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,1)-32.*rsxy(i1o+3,i2o-3,i3o,2,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,1)-672.*rsxy(i1o+3,i2o-1,i3o,2,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,1)-168.*rsxy(i1o+3,i2o+2,i3o,2,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,1)-3.*rsxy(i1o+3,i2o+4,i3o,2,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,1)+168.*rsxy(i1o+4,i2o-2,i3o,2,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o+4,i2o+1,i3o,2,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,1)+32.*rsxy(i1o+4,i2o+3,i3o,2,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_tyss = (-9.*rsxy(i1o,i2o-4,i3o,2,1)+128.*
     & rsxy(i1o,i2o-3,i3o,2,1)-1008.*rsxy(i1o,i2o-2,i3o,2,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,1)-1008.*rsxy(i1o,i2o+2,i3o,2,1)+128.*
     & rsxy(i1o,i2o+3,i3o,2,1)-9.*rsxy(i1o,i2o+4,i3o,2,1))/(5040.*dr(
     & 1)**2)
                        aj_tyrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,1)+168.*rsxy(i1o-4,i2o,i3o-2,2,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,1)+672.*rsxy(i1o-4,i2o,i3o+1,2,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,1)+32.*rsxy(i1o-4,i2o,i3o+3,2,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,1)-32.*rsxy(i1o-3,i2o,i3o-3,2,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,1)-672.*rsxy(i1o-3,i2o,i3o-1,2,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,1)-168.*rsxy(i1o-3,i2o,i3o+2,2,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,1)-3.*rsxy(i1o-3,i2o,i3o+4,2,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,1)-32.*rsxy(i1o-2,i2o,i3o-3,2,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,1)-672.*rsxy(i1o-2,i2o,i3o-1,2,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,1)-168.*rsxy(i1o-2,i2o,i3o+2,2,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,1)-3.*rsxy(i1o-2,i2o,i3o+4,2,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,1)+168.*rsxy(i1o-1,i2o,i3o-2,2,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o-1,i2o,i3o+1,2,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,1)+32.*rsxy(i1o-1,i2o,i3o+3,2,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,1)+168.*rsxy(i1o+1,i2o,i3o-2,2,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,1)+672.*rsxy(i1o+1,i2o,i3o+1,2,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,1)+32.*rsxy(i1o+1,i2o,i3o+3,2,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,1)-32.*rsxy(i1o+2,i2o,i3o-3,2,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,1)-672.*rsxy(i1o+2,i2o,i3o-1,2,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,1)-168.*rsxy(i1o+2,i2o,i3o+2,2,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,1)-3.*rsxy(i1o+2,i2o,i3o+4,2,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,1)-32.*rsxy(i1o+3,i2o,i3o-3,2,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,1)-672.*rsxy(i1o+3,i2o,i3o-1,2,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,1)-168.*rsxy(i1o+3,i2o,i3o+2,2,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,1)-3.*rsxy(i1o+3,i2o,i3o+4,2,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,1)+168.*rsxy(i1o+4,i2o,i3o-2,2,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o+4,i2o,i3o+1,2,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,1)+32.*rsxy(i1o+4,i2o,i3o+3,2,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_tyst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,1)+168.*rsxy(i1o,i2o-4,i3o-2,2,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,1)+672.*rsxy(i1o,i2o-4,i3o+1,2,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,1)+32.*rsxy(i1o,i2o-4,i3o+3,2,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,1)-32.*rsxy(i1o,i2o-3,i3o-3,2,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,1)-672.*rsxy(i1o,i2o-3,i3o-1,2,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,1)-168.*rsxy(i1o,i2o-3,i3o+2,2,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,1)-3.*rsxy(i1o,i2o-3,i3o+4,2,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,1)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,2,1)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,2,1)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,2,1)-3.*rsxy(i1o,i2o-2,i3o+4,2,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,1)+168.*rsxy(i1o,i2o-1,i3o-2,2,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,1)+672.*rsxy(i1o,i2o-1,i3o+1,2,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,1)+32.*rsxy(i1o,i2o-1,i3o+3,2,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,1)+168.*rsxy(i1o,i2o+1,i3o-2,2,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,1)+672.*rsxy(i1o,i2o+1,i3o+1,2,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,1)+32.*rsxy(i1o,i2o+1,i3o+3,2,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,1)-32.*rsxy(i1o,i2o+2,i3o-3,2,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,1)-672.*rsxy(i1o,i2o+2,i3o-1,2,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,1)-168.*rsxy(i1o,i2o+2,i3o+2,2,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,1)-3.*rsxy(i1o,i2o+2,i3o+4,2,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,1)-32.*rsxy(i1o,i2o+3,i3o-3,2,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,1)-672.*rsxy(i1o,i2o+3,i3o-1,2,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,1)-168.*rsxy(i1o,i2o+3,i3o+2,2,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,1)-3.*rsxy(i1o,i2o+3,i3o+4,2,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,1)+168.*rsxy(i1o,i2o+4,i3o-2,2,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,1)+672.*rsxy(i1o,i2o+4,i3o+1,2,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,1)+32.*rsxy(i1o,i2o+4,i3o+3,2,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_tytt = (-9.*rsxy(i1o,i2o,i3o-4,2,1)+128.*
     & rsxy(i1o,i2o,i3o-3,2,1)-1008.*rsxy(i1o,i2o,i3o-2,2,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,1)-1008.*rsxy(i1o,i2o,i3o+2,2,1)+128.*
     & rsxy(i1o,i2o,i3o+3,2,1)-9.*rsxy(i1o,i2o,i3o+4,2,1))/(5040.*dr(
     & 2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (3.*rsxy(i1o-4,i2o,i3o,0,2)-32.*rsxy(
     & i1o-3,i2o,i3o,0,2)+168.*rsxy(i1o-2,i2o,i3o,0,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,2)+672.*rsxy(i1o+1,i2o,i3o,0,2)-168.*rsxy(i1o+2,
     & i2o,i3o,0,2)+32.*rsxy(i1o+3,i2o,i3o,0,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,2))/(840.*dr(0))
                        aj_rzs = (3.*rsxy(i1o,i2o-4,i3o,0,2)-32.*rsxy(
     & i1o,i2o-3,i3o,0,2)+168.*rsxy(i1o,i2o-2,i3o,0,2)-672.*rsxy(i1o,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o,i2o+1,i3o,0,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,2)+32.*rsxy(i1o,i2o+3,i3o,0,2)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 2))/(840.*dr(1))
                        aj_rzt = (3.*rsxy(i1o,i2o,i3o-4,0,2)-32.*rsxy(
     & i1o,i2o,i3o-3,0,2)+168.*rsxy(i1o,i2o,i3o-2,0,2)-672.*rsxy(i1o,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o,i2o,i3o+1,0,2)-168.*rsxy(i1o,i2o,
     & i3o+2,0,2)+32.*rsxy(i1o,i2o,i3o+3,0,2)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 2))/(840.*dr(2))
                        aj_rzrr = (-9.*rsxy(i1o-4,i2o,i3o,0,2)+128.*
     & rsxy(i1o-3,i2o,i3o,0,2)-1008.*rsxy(i1o-2,i2o,i3o,0,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,2)-1008.*rsxy(i1o+2,i2o,i3o,0,2)+128.*
     & rsxy(i1o+3,i2o,i3o,0,2)-9.*rsxy(i1o+4,i2o,i3o,0,2))/(5040.*dr(
     & 0)**2)
                        aj_rzrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,2)+168.*rsxy(i1o-4,i2o-2,i3o,0,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,2)+672.*rsxy(i1o-4,i2o+1,i3o,0,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,2)+32.*rsxy(i1o-4,i2o+3,i3o,0,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,2)-32.*rsxy(i1o-3,i2o-3,i3o,0,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,2)-672.*rsxy(i1o-3,i2o-1,i3o,0,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,2)-168.*rsxy(i1o-3,i2o+2,i3o,0,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,2)-3.*rsxy(i1o-3,i2o+4,i3o,0,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,2)-32.*rsxy(i1o-2,i2o-3,i3o,0,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,2)-672.*rsxy(i1o-2,i2o-1,i3o,0,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,2)-168.*rsxy(i1o-2,i2o+2,i3o,0,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,2)-3.*rsxy(i1o-2,i2o+4,i3o,0,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,2)+168.*rsxy(i1o-1,i2o-2,i3o,0,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o-1,i2o+1,i3o,0,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,2)+32.*rsxy(i1o-1,i2o+3,i3o,0,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,2)+168.*rsxy(i1o+1,i2o-2,i3o,0,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,2)+672.*rsxy(i1o+1,i2o+1,i3o,0,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,2)+32.*rsxy(i1o+1,i2o+3,i3o,0,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,2)-32.*rsxy(i1o+2,i2o-3,i3o,0,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,2)-672.*rsxy(i1o+2,i2o-1,i3o,0,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,2)-168.*rsxy(i1o+2,i2o+2,i3o,0,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,2)-3.*rsxy(i1o+2,i2o+4,i3o,0,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,2)-32.*rsxy(i1o+3,i2o-3,i3o,0,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,2)-672.*rsxy(i1o+3,i2o-1,i3o,0,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,2)-168.*rsxy(i1o+3,i2o+2,i3o,0,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,2)-3.*rsxy(i1o+3,i2o+4,i3o,0,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,2)+168.*rsxy(i1o+4,i2o-2,i3o,0,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o+4,i2o+1,i3o,0,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,2)+32.*rsxy(i1o+4,i2o+3,i3o,0,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_rzss = (-9.*rsxy(i1o,i2o-4,i3o,0,2)+128.*
     & rsxy(i1o,i2o-3,i3o,0,2)-1008.*rsxy(i1o,i2o-2,i3o,0,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,2)-1008.*rsxy(i1o,i2o+2,i3o,0,2)+128.*
     & rsxy(i1o,i2o+3,i3o,0,2)-9.*rsxy(i1o,i2o+4,i3o,0,2))/(5040.*dr(
     & 1)**2)
                        aj_rzrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,2)+168.*rsxy(i1o-4,i2o,i3o-2,0,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,2)+672.*rsxy(i1o-4,i2o,i3o+1,0,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,2)+32.*rsxy(i1o-4,i2o,i3o+3,0,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,2)-32.*rsxy(i1o-3,i2o,i3o-3,0,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,2)-672.*rsxy(i1o-3,i2o,i3o-1,0,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,2)-168.*rsxy(i1o-3,i2o,i3o+2,0,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,2)-3.*rsxy(i1o-3,i2o,i3o+4,0,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,2)-32.*rsxy(i1o-2,i2o,i3o-3,0,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,2)-672.*rsxy(i1o-2,i2o,i3o-1,0,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,2)-168.*rsxy(i1o-2,i2o,i3o+2,0,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,2)-3.*rsxy(i1o-2,i2o,i3o+4,0,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,2)+168.*rsxy(i1o-1,i2o,i3o-2,0,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o-1,i2o,i3o+1,0,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,2)+32.*rsxy(i1o-1,i2o,i3o+3,0,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,2)+168.*rsxy(i1o+1,i2o,i3o-2,0,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,2)+672.*rsxy(i1o+1,i2o,i3o+1,0,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,2)+32.*rsxy(i1o+1,i2o,i3o+3,0,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,2)-32.*rsxy(i1o+2,i2o,i3o-3,0,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,2)-672.*rsxy(i1o+2,i2o,i3o-1,0,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,2)-168.*rsxy(i1o+2,i2o,i3o+2,0,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,2)-3.*rsxy(i1o+2,i2o,i3o+4,0,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,2)-32.*rsxy(i1o+3,i2o,i3o-3,0,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,2)-672.*rsxy(i1o+3,i2o,i3o-1,0,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,2)-168.*rsxy(i1o+3,i2o,i3o+2,0,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,2)-3.*rsxy(i1o+3,i2o,i3o+4,0,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,2)+168.*rsxy(i1o+4,i2o,i3o-2,0,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o+4,i2o,i3o+1,0,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,2)+32.*rsxy(i1o+4,i2o,i3o+3,0,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_rzst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,2)+168.*rsxy(i1o,i2o-4,i3o-2,0,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,2)+672.*rsxy(i1o,i2o-4,i3o+1,0,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,2)+32.*rsxy(i1o,i2o-4,i3o+3,0,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,2)-32.*rsxy(i1o,i2o-3,i3o-3,0,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,2)-672.*rsxy(i1o,i2o-3,i3o-1,0,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,2)-168.*rsxy(i1o,i2o-3,i3o+2,0,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,2)-3.*rsxy(i1o,i2o-3,i3o+4,0,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,2)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,0,2)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,0,2)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,0,2)-3.*rsxy(i1o,i2o-2,i3o+4,0,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,2)+168.*rsxy(i1o,i2o-1,i3o-2,0,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,2)+672.*rsxy(i1o,i2o-1,i3o+1,0,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,2)+32.*rsxy(i1o,i2o-1,i3o+3,0,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,2)+168.*rsxy(i1o,i2o+1,i3o-2,0,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,2)+672.*rsxy(i1o,i2o+1,i3o+1,0,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,2)+32.*rsxy(i1o,i2o+1,i3o+3,0,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,2)-32.*rsxy(i1o,i2o+2,i3o-3,0,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,2)-672.*rsxy(i1o,i2o+2,i3o-1,0,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,2)-168.*rsxy(i1o,i2o+2,i3o+2,0,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,2)-3.*rsxy(i1o,i2o+2,i3o+4,0,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,2)-32.*rsxy(i1o,i2o+3,i3o-3,0,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,2)-672.*rsxy(i1o,i2o+3,i3o-1,0,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,2)-168.*rsxy(i1o,i2o+3,i3o+2,0,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,2)-3.*rsxy(i1o,i2o+3,i3o+4,0,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,2)+168.*rsxy(i1o,i2o+4,i3o-2,0,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,2)+672.*rsxy(i1o,i2o+4,i3o+1,0,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,2)+32.*rsxy(i1o,i2o+4,i3o+3,0,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_rztt = (-9.*rsxy(i1o,i2o,i3o-4,0,2)+128.*
     & rsxy(i1o,i2o,i3o-3,0,2)-1008.*rsxy(i1o,i2o,i3o-2,0,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,2)-1008.*rsxy(i1o,i2o,i3o+2,0,2)+128.*
     & rsxy(i1o,i2o,i3o+3,0,2)-9.*rsxy(i1o,i2o,i3o+4,0,2))/(5040.*dr(
     & 2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (3.*rsxy(i1o-4,i2o,i3o,1,2)-32.*rsxy(
     & i1o-3,i2o,i3o,1,2)+168.*rsxy(i1o-2,i2o,i3o,1,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,2)+672.*rsxy(i1o+1,i2o,i3o,1,2)-168.*rsxy(i1o+2,
     & i2o,i3o,1,2)+32.*rsxy(i1o+3,i2o,i3o,1,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,2))/(840.*dr(0))
                        aj_szs = (3.*rsxy(i1o,i2o-4,i3o,1,2)-32.*rsxy(
     & i1o,i2o-3,i3o,1,2)+168.*rsxy(i1o,i2o-2,i3o,1,2)-672.*rsxy(i1o,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o,i2o+1,i3o,1,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,2)+32.*rsxy(i1o,i2o+3,i3o,1,2)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 2))/(840.*dr(1))
                        aj_szt = (3.*rsxy(i1o,i2o,i3o-4,1,2)-32.*rsxy(
     & i1o,i2o,i3o-3,1,2)+168.*rsxy(i1o,i2o,i3o-2,1,2)-672.*rsxy(i1o,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o,i2o,i3o+1,1,2)-168.*rsxy(i1o,i2o,
     & i3o+2,1,2)+32.*rsxy(i1o,i2o,i3o+3,1,2)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 2))/(840.*dr(2))
                        aj_szrr = (-9.*rsxy(i1o-4,i2o,i3o,1,2)+128.*
     & rsxy(i1o-3,i2o,i3o,1,2)-1008.*rsxy(i1o-2,i2o,i3o,1,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,2)-1008.*rsxy(i1o+2,i2o,i3o,1,2)+128.*
     & rsxy(i1o+3,i2o,i3o,1,2)-9.*rsxy(i1o+4,i2o,i3o,1,2))/(5040.*dr(
     & 0)**2)
                        aj_szrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,2)+168.*rsxy(i1o-4,i2o-2,i3o,1,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,2)+672.*rsxy(i1o-4,i2o+1,i3o,1,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,2)+32.*rsxy(i1o-4,i2o+3,i3o,1,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,2)-32.*rsxy(i1o-3,i2o-3,i3o,1,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,2)-672.*rsxy(i1o-3,i2o-1,i3o,1,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,2)-168.*rsxy(i1o-3,i2o+2,i3o,1,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,2)-3.*rsxy(i1o-3,i2o+4,i3o,1,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,2)-32.*rsxy(i1o-2,i2o-3,i3o,1,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,2)-672.*rsxy(i1o-2,i2o-1,i3o,1,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,2)-168.*rsxy(i1o-2,i2o+2,i3o,1,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,2)-3.*rsxy(i1o-2,i2o+4,i3o,1,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,2)+168.*rsxy(i1o-1,i2o-2,i3o,1,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o-1,i2o+1,i3o,1,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,2)+32.*rsxy(i1o-1,i2o+3,i3o,1,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,2)+168.*rsxy(i1o+1,i2o-2,i3o,1,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,2)+672.*rsxy(i1o+1,i2o+1,i3o,1,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,2)+32.*rsxy(i1o+1,i2o+3,i3o,1,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,2)-32.*rsxy(i1o+2,i2o-3,i3o,1,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,2)-672.*rsxy(i1o+2,i2o-1,i3o,1,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,2)-168.*rsxy(i1o+2,i2o+2,i3o,1,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,2)-3.*rsxy(i1o+2,i2o+4,i3o,1,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,2)-32.*rsxy(i1o+3,i2o-3,i3o,1,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,2)-672.*rsxy(i1o+3,i2o-1,i3o,1,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,2)-168.*rsxy(i1o+3,i2o+2,i3o,1,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,2)-3.*rsxy(i1o+3,i2o+4,i3o,1,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,2)+168.*rsxy(i1o+4,i2o-2,i3o,1,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o+4,i2o+1,i3o,1,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,2)+32.*rsxy(i1o+4,i2o+3,i3o,1,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_szss = (-9.*rsxy(i1o,i2o-4,i3o,1,2)+128.*
     & rsxy(i1o,i2o-3,i3o,1,2)-1008.*rsxy(i1o,i2o-2,i3o,1,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,2)-1008.*rsxy(i1o,i2o+2,i3o,1,2)+128.*
     & rsxy(i1o,i2o+3,i3o,1,2)-9.*rsxy(i1o,i2o+4,i3o,1,2))/(5040.*dr(
     & 1)**2)
                        aj_szrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,2)+168.*rsxy(i1o-4,i2o,i3o-2,1,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,2)+672.*rsxy(i1o-4,i2o,i3o+1,1,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,2)+32.*rsxy(i1o-4,i2o,i3o+3,1,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,2)-32.*rsxy(i1o-3,i2o,i3o-3,1,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,2)-672.*rsxy(i1o-3,i2o,i3o-1,1,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,2)-168.*rsxy(i1o-3,i2o,i3o+2,1,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,2)-3.*rsxy(i1o-3,i2o,i3o+4,1,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,2)-32.*rsxy(i1o-2,i2o,i3o-3,1,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,2)-672.*rsxy(i1o-2,i2o,i3o-1,1,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,2)-168.*rsxy(i1o-2,i2o,i3o+2,1,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,2)-3.*rsxy(i1o-2,i2o,i3o+4,1,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,2)+168.*rsxy(i1o-1,i2o,i3o-2,1,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o-1,i2o,i3o+1,1,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,2)+32.*rsxy(i1o-1,i2o,i3o+3,1,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,2)+168.*rsxy(i1o+1,i2o,i3o-2,1,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,2)+672.*rsxy(i1o+1,i2o,i3o+1,1,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,2)+32.*rsxy(i1o+1,i2o,i3o+3,1,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,2)-32.*rsxy(i1o+2,i2o,i3o-3,1,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,2)-672.*rsxy(i1o+2,i2o,i3o-1,1,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,2)-168.*rsxy(i1o+2,i2o,i3o+2,1,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,2)-3.*rsxy(i1o+2,i2o,i3o+4,1,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,2)-32.*rsxy(i1o+3,i2o,i3o-3,1,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,2)-672.*rsxy(i1o+3,i2o,i3o-1,1,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,2)-168.*rsxy(i1o+3,i2o,i3o+2,1,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,2)-3.*rsxy(i1o+3,i2o,i3o+4,1,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,2)+168.*rsxy(i1o+4,i2o,i3o-2,1,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o+4,i2o,i3o+1,1,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,2)+32.*rsxy(i1o+4,i2o,i3o+3,1,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_szst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,2)+168.*rsxy(i1o,i2o-4,i3o-2,1,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,2)+672.*rsxy(i1o,i2o-4,i3o+1,1,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,2)+32.*rsxy(i1o,i2o-4,i3o+3,1,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,2)-32.*rsxy(i1o,i2o-3,i3o-3,1,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,2)-672.*rsxy(i1o,i2o-3,i3o-1,1,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,2)-168.*rsxy(i1o,i2o-3,i3o+2,1,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,2)-3.*rsxy(i1o,i2o-3,i3o+4,1,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,2)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,1,2)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,1,2)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,1,2)-3.*rsxy(i1o,i2o-2,i3o+4,1,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,2)+168.*rsxy(i1o,i2o-1,i3o-2,1,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,2)+672.*rsxy(i1o,i2o-1,i3o+1,1,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,2)+32.*rsxy(i1o,i2o-1,i3o+3,1,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,2)+168.*rsxy(i1o,i2o+1,i3o-2,1,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,2)+672.*rsxy(i1o,i2o+1,i3o+1,1,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,2)+32.*rsxy(i1o,i2o+1,i3o+3,1,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,2)-32.*rsxy(i1o,i2o+2,i3o-3,1,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,2)-672.*rsxy(i1o,i2o+2,i3o-1,1,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,2)-168.*rsxy(i1o,i2o+2,i3o+2,1,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,2)-3.*rsxy(i1o,i2o+2,i3o+4,1,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,2)-32.*rsxy(i1o,i2o+3,i3o-3,1,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,2)-672.*rsxy(i1o,i2o+3,i3o-1,1,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,2)-168.*rsxy(i1o,i2o+3,i3o+2,1,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,2)-3.*rsxy(i1o,i2o+3,i3o+4,1,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,2)+168.*rsxy(i1o,i2o+4,i3o-2,1,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,2)+672.*rsxy(i1o,i2o+4,i3o+1,1,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,2)+32.*rsxy(i1o,i2o+4,i3o+3,1,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_sztt = (-9.*rsxy(i1o,i2o,i3o-4,1,2)+128.*
     & rsxy(i1o,i2o,i3o-3,1,2)-1008.*rsxy(i1o,i2o,i3o-2,1,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,2)-1008.*rsxy(i1o,i2o,i3o+2,1,2)+128.*
     & rsxy(i1o,i2o,i3o+3,1,2)-9.*rsxy(i1o,i2o,i3o+4,1,2))/(5040.*dr(
     & 2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (3.*rsxy(i1o-4,i2o,i3o,2,2)-32.*rsxy(
     & i1o-3,i2o,i3o,2,2)+168.*rsxy(i1o-2,i2o,i3o,2,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,2)+672.*rsxy(i1o+1,i2o,i3o,2,2)-168.*rsxy(i1o+2,
     & i2o,i3o,2,2)+32.*rsxy(i1o+3,i2o,i3o,2,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,2))/(840.*dr(0))
                        aj_tzs = (3.*rsxy(i1o,i2o-4,i3o,2,2)-32.*rsxy(
     & i1o,i2o-3,i3o,2,2)+168.*rsxy(i1o,i2o-2,i3o,2,2)-672.*rsxy(i1o,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o,i2o+1,i3o,2,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,2)+32.*rsxy(i1o,i2o+3,i3o,2,2)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 2))/(840.*dr(1))
                        aj_tzt = (3.*rsxy(i1o,i2o,i3o-4,2,2)-32.*rsxy(
     & i1o,i2o,i3o-3,2,2)+168.*rsxy(i1o,i2o,i3o-2,2,2)-672.*rsxy(i1o,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o,i2o,i3o+1,2,2)-168.*rsxy(i1o,i2o,
     & i3o+2,2,2)+32.*rsxy(i1o,i2o,i3o+3,2,2)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 2))/(840.*dr(2))
                        aj_tzrr = (-9.*rsxy(i1o-4,i2o,i3o,2,2)+128.*
     & rsxy(i1o-3,i2o,i3o,2,2)-1008.*rsxy(i1o-2,i2o,i3o,2,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,2)-1008.*rsxy(i1o+2,i2o,i3o,2,2)+128.*
     & rsxy(i1o+3,i2o,i3o,2,2)-9.*rsxy(i1o+4,i2o,i3o,2,2))/(5040.*dr(
     & 0)**2)
                        aj_tzrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,2)+168.*rsxy(i1o-4,i2o-2,i3o,2,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,2)+672.*rsxy(i1o-4,i2o+1,i3o,2,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,2)+32.*rsxy(i1o-4,i2o+3,i3o,2,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,2)-32.*rsxy(i1o-3,i2o-3,i3o,2,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,2)-672.*rsxy(i1o-3,i2o-1,i3o,2,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,2)-168.*rsxy(i1o-3,i2o+2,i3o,2,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,2)-3.*rsxy(i1o-3,i2o+4,i3o,2,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,2)-32.*rsxy(i1o-2,i2o-3,i3o,2,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,2)-672.*rsxy(i1o-2,i2o-1,i3o,2,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,2)-168.*rsxy(i1o-2,i2o+2,i3o,2,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,2)-3.*rsxy(i1o-2,i2o+4,i3o,2,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,2)+168.*rsxy(i1o-1,i2o-2,i3o,2,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o-1,i2o+1,i3o,2,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,2)+32.*rsxy(i1o-1,i2o+3,i3o,2,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,2)+168.*rsxy(i1o+1,i2o-2,i3o,2,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,2)+672.*rsxy(i1o+1,i2o+1,i3o,2,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,2)+32.*rsxy(i1o+1,i2o+3,i3o,2,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,2)-32.*rsxy(i1o+2,i2o-3,i3o,2,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,2)-672.*rsxy(i1o+2,i2o-1,i3o,2,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,2)-168.*rsxy(i1o+2,i2o+2,i3o,2,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,2)-3.*rsxy(i1o+2,i2o+4,i3o,2,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,2)-32.*rsxy(i1o+3,i2o-3,i3o,2,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,2)-672.*rsxy(i1o+3,i2o-1,i3o,2,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,2)-168.*rsxy(i1o+3,i2o+2,i3o,2,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,2)-3.*rsxy(i1o+3,i2o+4,i3o,2,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,2)+168.*rsxy(i1o+4,i2o-2,i3o,2,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o+4,i2o+1,i3o,2,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,2)+32.*rsxy(i1o+4,i2o+3,i3o,2,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_tzss = (-9.*rsxy(i1o,i2o-4,i3o,2,2)+128.*
     & rsxy(i1o,i2o-3,i3o,2,2)-1008.*rsxy(i1o,i2o-2,i3o,2,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,2)-1008.*rsxy(i1o,i2o+2,i3o,2,2)+128.*
     & rsxy(i1o,i2o+3,i3o,2,2)-9.*rsxy(i1o,i2o+4,i3o,2,2))/(5040.*dr(
     & 1)**2)
                        aj_tzrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,2)+168.*rsxy(i1o-4,i2o,i3o-2,2,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,2)+672.*rsxy(i1o-4,i2o,i3o+1,2,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,2)+32.*rsxy(i1o-4,i2o,i3o+3,2,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,2)-32.*rsxy(i1o-3,i2o,i3o-3,2,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,2)-672.*rsxy(i1o-3,i2o,i3o-1,2,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,2)-168.*rsxy(i1o-3,i2o,i3o+2,2,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,2)-3.*rsxy(i1o-3,i2o,i3o+4,2,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,2)-32.*rsxy(i1o-2,i2o,i3o-3,2,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,2)-672.*rsxy(i1o-2,i2o,i3o-1,2,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,2)-168.*rsxy(i1o-2,i2o,i3o+2,2,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,2)-3.*rsxy(i1o-2,i2o,i3o+4,2,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,2)+168.*rsxy(i1o-1,i2o,i3o-2,2,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o-1,i2o,i3o+1,2,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,2)+32.*rsxy(i1o-1,i2o,i3o+3,2,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,2)+168.*rsxy(i1o+1,i2o,i3o-2,2,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,2)+672.*rsxy(i1o+1,i2o,i3o+1,2,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,2)+32.*rsxy(i1o+1,i2o,i3o+3,2,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,2)-32.*rsxy(i1o+2,i2o,i3o-3,2,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,2)-672.*rsxy(i1o+2,i2o,i3o-1,2,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,2)-168.*rsxy(i1o+2,i2o,i3o+2,2,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,2)-3.*rsxy(i1o+2,i2o,i3o+4,2,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,2)-32.*rsxy(i1o+3,i2o,i3o-3,2,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,2)-672.*rsxy(i1o+3,i2o,i3o-1,2,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,2)-168.*rsxy(i1o+3,i2o,i3o+2,2,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,2)-3.*rsxy(i1o+3,i2o,i3o+4,2,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,2)+168.*rsxy(i1o+4,i2o,i3o-2,2,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o+4,i2o,i3o+1,2,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,2)+32.*rsxy(i1o+4,i2o,i3o+3,2,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_tzst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,2)+168.*rsxy(i1o,i2o-4,i3o-2,2,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,2)+672.*rsxy(i1o,i2o-4,i3o+1,2,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,2)+32.*rsxy(i1o,i2o-4,i3o+3,2,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,2)-32.*rsxy(i1o,i2o-3,i3o-3,2,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,2)-672.*rsxy(i1o,i2o-3,i3o-1,2,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,2)-168.*rsxy(i1o,i2o-3,i3o+2,2,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,2)-3.*rsxy(i1o,i2o-3,i3o+4,2,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,2)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,2,2)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,2,2)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,2,2)-3.*rsxy(i1o,i2o-2,i3o+4,2,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,2)+168.*rsxy(i1o,i2o-1,i3o-2,2,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,2)+672.*rsxy(i1o,i2o-1,i3o+1,2,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,2)+32.*rsxy(i1o,i2o-1,i3o+3,2,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,2)+168.*rsxy(i1o,i2o+1,i3o-2,2,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,2)+672.*rsxy(i1o,i2o+1,i3o+1,2,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,2)+32.*rsxy(i1o,i2o+1,i3o+3,2,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,2)-32.*rsxy(i1o,i2o+2,i3o-3,2,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,2)-672.*rsxy(i1o,i2o+2,i3o-1,2,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,2)-168.*rsxy(i1o,i2o+2,i3o+2,2,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,2)-3.*rsxy(i1o,i2o+2,i3o+4,2,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,2)-32.*rsxy(i1o,i2o+3,i3o-3,2,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,2)-672.*rsxy(i1o,i2o+3,i3o-1,2,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,2)-168.*rsxy(i1o,i2o+3,i3o+2,2,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,2)-3.*rsxy(i1o,i2o+3,i3o+4,2,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,2)+168.*rsxy(i1o,i2o+4,i3o-2,2,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,2)+672.*rsxy(i1o,i2o+4,i3o+1,2,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,2)+32.*rsxy(i1o,i2o+4,i3o+3,2,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_tztt = (-9.*rsxy(i1o,i2o,i3o-4,2,2)+128.*
     & rsxy(i1o,i2o,i3o-3,2,2)-1008.*rsxy(i1o,i2o,i3o-2,2,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,2)-1008.*rsxy(i1o,i2o,i3o+2,2,2)+128.*
     & rsxy(i1o,i2o,i3o+3,2,2)-9.*rsxy(i1o,i2o,i3o+4,2,2))/(5040.*dr(
     & 2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     endif ! order of accuracy
                  endif  ! number of dimensions
                  rx( io,0,0) = aj_rx
                  rxx(io,0,0) = aj_rxx
                  rxr(io,0,0) = aj_rxr
                  rx( io,1,0) = aj_sx
                  rxx(io,1,0) = aj_sxx
                  rxr(io,1,0) = aj_sxs
                  rx( io,0,1) = aj_ry
                  rxx(io,0,1) = aj_ryy
                  rxr(io,0,1) = aj_ryr
                  rx( io,1,1) = aj_sy
                  rxx(io,1,1) = aj_syy
                  rxr(io,1,1) = aj_sys
                  if (nd.eq.3) then
                     rx( io,0,2) = aj_rz
                     rxx(io,0,2) = aj_rzz
                     rxr(io,0,2) = aj_rzr
                     rx( io,1,2) = aj_sz
                     rxx(io,1,2) = aj_szz
                     rxr(io,1,2) = aj_szs
                     rx( io,2,0) = aj_tx
                     rxx(io,2,0) = aj_txx
                     rxr(io,2,0) = aj_txt
                     rx( io,2,1) = aj_ty
                     rxx(io,2,1) = aj_tyy
                     rxr(io,2,1) = aj_tyt
                     rx( io,2,2) = aj_tz
                     rxx(io,2,2) = aj_tzz
                     rxr(io,2,2) = aj_tzt
                  endif
                  else                               ! use one-sided derivatives near boundaries
                     do id=0,nd-1
                     do ic=0,nd-1
                        rx(io,id,ic) = rsxy(i1o,i2o,i3o,id,ic)
                     enddo
                     enddo
                     if ( order.ge.4 .or. .true.) then
                        do ic=0,nd-1
                        do id=0,nd-1
                           !! d( dr(id)/dx(ic) )/dr(id2)
                        id2 = 0 !! rxr, ryr, rzr, sxr, syr, szr, txr, tyr, tzr
                        if ( (i1o.le.(dims(0,id2)+1)) ) then
                           rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o+1,i2o,i3o,id,ic) + (
     & -3D0) * rsxy(i1o+2,i2o,i3o,id,ic) + (4D0/3D0) * rsxy(i1o+3,i2o,
     & i3o,id,ic) + (-1D0/4D0) * rsxy(i1o+4,i2o,i3o,id,ic))
                        else if ( (i1o.ge.dims(1,id2)-1) ) then
                           rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o-1,i2o,i3o,id,ic) + 
     & (3D0) * rsxy(i1o-2,i2o,i3o,id,ic) + (-4D0/3D0) * rsxy(i1o-3,
     & i2o,i3o,id,ic) + (1D0/4D0) * rsxy(i1o-4,i2o,i3o,id,ic))
                        else
                           rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*rsxy(
     & i1o-2,i2o,i3o,id,ic) + (-2D0/3D0)*rsxy(i1o-1,i2o,i3o,id,ic) +  
     & (2D0/3D0)*rsxy(i1o+1,i2o,i3o,id,ic)-(1D0/12D0)*rsxy(i1o+2,i2o,
     & i3o,id,ic)  )
                        endif
                        id2 = 1 !! rxs, rys, rzs, sxs, sys, szs, txs, tys, tzs
                        if ( (i2o.le.(dims(0,id2)+1)) ) then
                           rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o,i2o+1,i3o,id,ic) + (
     & -3D0) * rsxy(i1o,i2o+2,i3o,id,ic) + (4D0/3D0) * rsxy(i1o,i2o+3,
     & i3o,id,ic) + (-1D0/4D0) * rsxy(i1o,i2o+4,i3o,id,ic))
                        else if ( (i2o.ge.dims(1,id2)-1) ) then
                           rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o,i2o-1,i3o,id,ic) + 
     & (3D0) * rsxy(i1o,i2o-2,i3o,id,ic) + (-4D0/3D0) * rsxy(i1o,i2o-
     & 3,i3o,id,ic) + (1D0/4D0) * rsxy(i1o,i2o-4,i3o,id,ic))
                        else
                           rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*rsxy(
     & i1o,i2o-2,i3o,id,ic) + (-2D0/3D0)*rsxy(i1o,i2o-1,i3o,id,ic) +  
     & (2D0/3D0)*rsxy(i1o,i2o+1,i3o,id,ic)-(1D0/12D0)*rsxy(i1o,i2o+2,
     & i3o,id,ic)  )
                        endif
                        if ( nd.eq.3 ) then
                           id2 = 2 !!rxt, ryt, rzt, sxt, syt, szt, txt, tyt, tzt
                           if ( (i3o.le.(dims(0,id2)+1)) ) then
                              rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) *
     &  rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o,i2o,i3o+1,id,ic) + 
     & (-3D0) * rsxy(i1o,i2o,i3o+2,id,ic) + (4D0/3D0) * rsxy(i1o,i2o,
     & i3o+3,id,ic) + (-1D0/4D0) * rsxy(i1o,i2o,i3o+4,id,ic))
                           else if ( (i3o.ge.dims(1,id2)-1) ) then
                              rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o,i2o,i3o-1,id,ic) + 
     & (3D0) * rsxy(i1o,i2o,i3o-2,id,ic) + (-4D0/3D0) * rsxy(i1o,i2o,
     & i3o-3,id,ic) + (1D0/4D0) * rsxy(i1o,i2o,i3o-4,id,ic))
                           else
                              rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*
     & rsxy(i1o,i2o,i3o-2,id,ic) + (-2D0/3D0)*rsxy(i1o,i2o,i3o-1,id,
     & ic) +  (2D0/3D0)*rsxy(i1o,i2o,i3o+1,id,ic)-(1D0/12D0)*rsxy(i1o,
     & i2o,i3o+2,id,ic)  )
                           endif
                        endif
                        enddo
                        enddo
                     else ! 2nd order accurate
                        do ic=0,nd-1
                        do id=0,nd-1
                           !! d( dr(id)/dx(ic) )/dr(id2)
                        id2 = 0 !! rxr, ryr, rzr, sxr, syr, szr, txr, tyr, tzr
                        if ( (i1o.le.dims(0,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o+1,i2o,i3o,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o+2,i2o,i3o,id,ic) )
                        else if ( (i1o.ge.dims(1,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o-1,i2o,i3o,id,ic) + (
     & 1D0/2D0)*rsxy(i1o-2,i2o,i3o,id,ic) )
                        else
                           rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*rsxy(
     & i1o-1,i2o,i3o,id,ic) +  (1D0/2D0)*rsxy(i1o+1,i2o,i3o,id,ic) )
                        endif
                        id2 = 1 !! rxs, rys, rzs, sxs, sys, szs, txs, tys, tzs
                        if ( (i2o.le.(dims(0,id2))) ) then
                           rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o,i2o+1,i3o,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o,i2o+2,i3o,id,ic) )
                        else if ( (i2o.ge.dims(1,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o,i2o-1,i3o,id,ic) + (
     & 1D0/2D0)*rsxy(i1o,i2o-2,i3o,id,ic) )
                        else
                           rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*rsxy(
     & i1o,i2o-1,i3o,id,ic) +  (1D0/2D0)*rsxy(i1o,i2o+1,i3o,id,ic) )
                        endif
                        if ( nd.eq.3 ) then
                           id2 = 2 !!rxt, ryt, rzt, sxt, syt, szt, txt, tyt, tzt
                           if ( (i3o.le.dims(0,id2) )) then
                              rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*
     & rsxy(i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o,i2o,i3o+1,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o,i2o,i3o+2,id,ic) )
                           else if ( i3o.ge.dims(1,id2) ) then
                              rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*
     & rsxy(i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o,i2o,i3o-1,id,ic) + (
     & 1D0/2D0)*rsxy(i1o,i2o,i3o-2,id,ic) )
                           else
                              rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*
     & rsxy(i1o,i2o,i3o-1,id,ic) +  (1D0/2D0)*rsxy(i1o,i2o,i3o+1,id,
     & ic) )
                           endif
                        endif
                        enddo
                        enddo
                     endif ! order of accuracy
                     do id=0,nd-1
                     do ic=0,nd-1
                        rxr(io,id,ic) = rxs(id,ic,id)
                        rxx(io,id,ic) = rx(io,0,ic)*rxs(id,ic,0) + rx(
     & io,1,ic)*rxs(id,ic,1) + rx(io,2,ic)*rxs(id,ic,2)
                     enddo
                     enddo
                  endif
               enddo ! do loop (io) over stencil
               endif                     ! if not rectangular

         !!!x here we assume there is always space for the first upper and lower diagonals
         dl1(i1,i2,i3) = px_coeff(-1)
         d(i1,i2,i3)   = px_coeff( 0)
         du1(i1,i2,i3) = px_coeff( 1)
         if ( is_penta ) then
            dl2(i1,i2,i3) = px_coeff(-2)
            du2(i1,i2,i3) = px_coeff( 2)
         endif

         !!! fill in the variable coefficient at each point to be used in later loops over discretization coefficients
         if ( mode.ne.get_explicit ) then
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
               a_ik(io) = 0d0
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               do id=0,nd-1
                  a_ik(io) = a_ik(io) + u(i1o,i2o,i3o,uc+id)*rx(io,dir,
     & id) - nu_eq*rxx(io,dir,id)
!!linear                  a_ik(io) = a_ik(io) + rx(io,dir,id) - nu_eq*rxx(io,dir,id)
               enddo

               a_ik(io) = a_ik(io)*advection_coefficient
!               if ( i1.eq.0 .and. i2.eq.i1 ) print *,i1o,i2o,i3o,u(i1o,i2o,i3o,uc),u(i1o,i2o,i3o,vc),rx(io,dir,0),rx(io,dir,1),a_ik(io)
!               if ( i1.eq.2 .and. i2.eq.i1 .and. cc.eq.2 ) print *,i1o,i2o,ul(i1o,i2o,i3o,uc),ul(i1o,i2o,i3o,vc),rx(io,dir,0),rx(io,dir,1),a_ik(io)
            enddo
         endif !mode.ne.get_explicit

         if ( mode.eq.solve_rhs ) then
            rhs(i1,i2,i3) = 0d0
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
               !!!                                 (P  - (dt/2) D_r a_ik) U^* 
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               rhs(i1,i2,i3) = rhs(i1,i2,i3) + (px_coeff(io) - dto2*
     & drid*dx_coeff(io)*a_ik(io))*ul(i1o,i2o,i3o,cc)
            enddo

         else if ( mode.eq.solve_lhs ) then
            rhs(i1,i2,i3) = 0d0
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
               !!!                                 P U^{*}
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               rhs(i1,i2,i3) = rhs(i1,i2,i3) + px_coeff(io)*ul(i1o,i2o,
     & i3o,cc)
            enddo
               !!!                                 (P + (dt/2) D_r a_ik) U^{**}_i
            io = -1
            dl1(i1,i2,i3)    = dl1(i1,i2,i3) + dto2*drid*dx_coeff(io)*
     & a_ik(io)
            io = 0
            d(i1,i2,i3)      = d(i1,i2,i3)   + dto2*drid*dx_coeff(io)*
     & a_ik(io)
            io = 1
            du1(i1,i2,i3)    = du1(i1,i2,i3) + dto2*drid*dx_coeff(io)*
     & a_ik(io)
            if ( is_penta ) then
               io = -2
               dl2(i1,i2,i3) = dl2(i1,i2,i3) + dto2*drid*dx_coeff(io)*
     & a_ik(io)
               io =  2
               du2(i1,i2,i3) = du2(i1,i2,i3) + dto2*drid*dx_coeff(io)*
     & a_ik(io)
            endif
         else ! mode .eq. get_explicit
            ! this is a basic compact scheme for the pressure, the contribution will be scaled and added to the appropriate equation
            !   outside this subroutine
            !! dp/dx_i = sum_{j=0}^{ndim-1} dr_j/dx_i dp/dr_j
            !! dr_j/dx_i dp/dr_j = dr_j/dx_i P^{-1} D p
            ! note we filled in the diagonals above and the bcs are taken care of below...
            rhs(i1,i2,i3) = 0d0
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               rhs(i1,i2,i3) = rhs(i1,i2,i3) + dx_coeff(io)*u(i1o,i2o,
     & i3o,pc)*drid
            enddo

         endif ! if mode .eq. solve_rhs or solve_lhs

      endif ! if mask gt 0

      enddo ! i1l
      enddo ! i2l
      enddo ! i3l

      if (mode.eq.get_explicit ) then
         if ( disc_approx.eq.compact ) then
                  do side=0,1
                  call get_os_op_coeffs(half_width,1,side,order,
     & disc_approx,px_coeff,dx_coeff)
                  do i3l=bc_range(side,0,2),bc_range(side,1,2)
                  do i2l=bc_range(side,0,1),bc_range(side,1,1)
                  do i1l=bc_range(side,0,0),bc_range(side,1,0)
                           i1mm = i1l-2*is1
                           i2mm = i2l-2*is2
                           i3mm = i3l-2*is3
                           i1m = i1l-is1
                           i2m = i2l-is2
                           i3m = i3l-is3
                           i1  = i1l
                           i2  = i2l
                           i3  = i3l
                           i1p = i1l+is1
                           i2p = i2l+is2
                           i3p = i3l+is3
                           i1pp = i1l+2*is1
                           i2pp = i2l+2*is2
                           i3pp = i3l+2*is3
                     if ( side.eq.0 ) then
                        d(i1,i2,i3) = px_coeff(-half_width+0)
                        du1(i1,i2,i3) = px_coeff(-half_width+1)
                        if ( .not. is_penta ) then
                           dl1(i1,i2,i3) = px_coeff(-half_width+2)
                        else
                           du2(i1,i2,i3) = px_coeff(-half_width+2)
                           dl2(i1,i2,i3) = px_coeff(-half_width+3)
                           dl1(i1,i2,i3) = px_coeff(-half_width+4)
                        endif
                     else
                        d(i1,i2,i3) = px_coeff(-half_width+2*
     & half_width)
                        dl1(i1,i2,i3) = px_coeff(-half_width+2*
     & half_width-1)
                        if ( .not. is_penta ) then
                           du1(i1,i2,i3) = px_coeff(-half_width+2*
     & half_width-2)
                        else
                           dl2(i1,i2,i3) = px_coeff(-half_width+2*
     & half_width-2)
                           du2(i1,i2,i3) = px_coeff(-half_width+2*
     & half_width-3)
                           du1(i1,i2,i3) = px_coeff(-half_width+0)
                        endif
                     endif
                     rhs(i1,i2,i3) = 0d0
                     do io=0,2*half_width
                              i1o = i1l + (1-2*side)*io*is1
                              i2o = i2l + (1-2*side)*io*is2
                              i3o = i3l + (1-2*side)*io*is3
                        rhs(i1,i2,i3) = rhs(i1,i2,i3) + u(i1o,i2o,i3o,
     & pc)*dx_coeff(-half_width + side*2*half_width + (1-2*side)*io)*
     & drid
                     enddo
                  enddo
                  enddo
                  enddo
                  enddo
c            EXTRAPOLATE_GHOST()
         endif
      else
c         if ( advection_coefficient .gt. 1e-10 ) then
                  if ( .not. is_periodic ) then
            ! fixup the matrix and rhs at the ends of each line
                  do side=0,1
                     is_dirichlet_bc = ((bc(side,dir)
     & .eq.dirichletBoundaryCondition).or.(bc(side,dir)
     & .eq.inflowWithVelocityGiven).or.(bc(side,dir).eq.noSlipWall))
     & .or.(bc(side,dir).eq.slipWall.and.dir.eq.(cc-uc)).and.(bc(side,
     & dir).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*
     & 2),side,dir,grid).ne.0d0)))
                     is_neumann_bc = ((bc(side,dir)
     & .eq.neumannBoundaryCondition))
                     is_outflow_bc = bc(side,dir).eq.outflow
                     if ( is_dirichlet_bc ) then
            !cc            print *,"dbg: ","dirichlet : ",dir,side,cc-uc,mode
                        do i3l=bc_range(side,0,2),bc_range(side,1,2)
                        do i2l=bc_range(side,0,1),bc_range(side,1,1)
                        do i1l=bc_range(side,0,0),bc_range(side,1,0)
                                 i1mm = i1l-2*is1
                                 i2mm = i2l-2*is2
                                 i3mm = i3l-2*is3
                                 i1m = i1l-is1
                                 i2m = i2l-is2
                                 i3m = i3l-is3
                                 i1  = i1l
                                 i2  = i2l
                                 i3  = i3l
                                 i1p = i1l+is1
                                 i2p = i2l+is2
                                 i3p = i3l+is3
                                 i1pp = i1l+2*is1
                                 i2pp = i2l+2*is2
                                 i3pp = i3l+2*is3
                           if ( mask(i1,i2,i3).gt.0 ) then
                           if ( have_ghost_points ) then
                              io = 1-2*side
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              if ( .false. ) then
                                            ! the ghost point equation is interior equation at the boundary point
                                 if ( .not. is_penta ) then
                                    if ( side.eq.0) then
                                       d(i1,i2,i3)    = dl1(i1o,i2o,
     & i3o)
                                       du1(i1,i2,i3)  = d(i1o,i2o,i3o)
                                       dl1(i1,i2,i3)  = du1(i1o,i2o,
     & i3o)
                                    else
                                       d(i1,i2,i3)    = du1(i1o,i2o,
     & i3o)
                                       dl1(i1,i2,i3)  = d(i1o,i2o,i3o)
                                       du1(i1,i2,i3)  = dl1(i1o,i2o,
     & i3o)
                                    endif
                                 else
                                    stop 99400
                                 endif
            !     if ( dir.eq.0 ) print *,"bc at ",i1,i2,i3
                                 rhs(i1,i2,i3) = rhs(i1o,i2o,i3o)
                              else
                              ! extrapolate the ghost point
                                 rhs(i1l,i2l,i3l) = 0d0
                                 if ( .not. rhs_only ) then
                                    d(i1l,i2l,i3l) = 1d0
                                    if ( .not. is_penta ) then
                                       if ( side.eq.0 ) then
                                          dl1(i1l,i2l,i3l) =  1d0
                                          du1(i1l,i2l,i3l) = -2d0
                                       else
                                          du1(i1l,i2l,i3l) =  1d0
                                          dl1(i1l,i2l,i3l) = -2d0
                                       endif
                                    else
                                       if ( side.eq.0 ) then
                                          du1(i1l,i2l,i3l) = -4d0
                                          du2(i1l,i2l,i3l) =  6d0
                                          dl1(i1l,i2l,i3l) = -4d0
                                          dl2(i1l,i2l,i3l) =  1d0
                                       else
                                          dl1(i1l,i2l,i3l) = -4d0
                                          dl2(i1l,i2l,i3l) =  6d0
                                          du2(i1l,i2l,i3l) = -4d0
                                          du1(i1l,i2l,i3l) =  1d0
                                       endif
                                    endif
                                 endif
                              endif
                           else
                              io = 0
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                           endif ! have ghost points
            !c dirichlet everywhere               d(i1,i2,i3) = 1d0
                           if ( mode.ne.get_explicit ) then
            !                  if ( dir.eq.0 ) print *,i1,i2,ul(i1o,i2o,i3o,cc)
                              rhs(i1o,i2o,i3o) = ul(i1o,i2o,i3o,cc)
            !c dirichlet everywhere                  rhs(i1,i2,i3) = ul(i1,i2,i3,cc)
                           else
               ! the explicit contribution should add the difference of the old and new time level bc values
                              rhs(i1o,i2o,i3o) = 0d0
            !c dirichlet everywhere                  rhs(i1,i2,i3) = 0d0
                           endif
                           if ( .not. rhs_only ) then
                              d(i1o,i2o,i3o) = 1d0
                              dl1(i1o,i2o,i3o) = 0d0
                              du1(i1o,i2o,i3o) = 0d0
            !     c dirichlet everywhere               dl1(i1,i2,i3) = 0d0
            !     c dirichlet everywhere               du1(i1,i2,i3) = 0d0
                              if ( is_penta ) then
                                 dl2(i1o,i2o,i3o) = 0d0
                                 du2(i1o,i2o,i3o) = 0d0
            !     c dirichlet everywhere                  dl2(i1,i2,i3) = 0d0
            !     c dirichlet everywhere                  du2(i1,i2,i3) = 0d0
                              endif
                           endif !not rhs_only
                           endif ! mask
                        enddo ! i1l
                        enddo ! i2l
                        enddo ! i3l
                     elseif (is_neumann_bc ) then !!.or. is_outflow_bc) then
            !cc            print *,"dbg: ","neumann : ",dir,side,cc-uc,mode
                        call get_os_mop_coeffs(half_width,1,side,order,
     & compact,px_coeff,dx_coeff)
                        do i3l=bc_range(side,0,2),bc_range(side,1,2)
                        do i2l=bc_range(side,0,1),bc_range(side,1,1)
                        do i1l=bc_range(side,0,0),bc_range(side,1,0)
                                 i1mm = i1l-2*is1
                                 i2mm = i2l-2*is2
                                 i3mm = i3l-2*is3
                                 i1m = i1l-is1
                                 i2m = i2l-is2
                                 i3m = i3l-is3
                                 i1  = i1l
                                 i2  = i2l
                                 i3  = i3l
                                 i1p = i1l+is1
                                 i2p = i2l+is2
                                 i3p = i3l+is3
                                 i1pp = i1l+2*is1
                                 i2pp = i2l+2*is2
                                 i3pp = i3l+2*is3
                           if ( mode.eq.solve_lhs ) then
                              if ( side.eq.0 ) then
                                 d(i1,i2,i3) = dx_coeff(-half_width+0)*
     & dxid
                                 du1(i1,i2,i3) = dx_coeff(-half_width+
     & 1)*dxid
                                 if ( .not. is_penta ) then
                                    dl1(i1,i2,i3) = dx_coeff(-
     & half_width+2)*dxid
                                 else
                                    du2(i1,i2,i3) = dx_coeff(-
     & half_width+2)*dxid
                                    dl2(i1,i2,i3) = dx_coeff(-
     & half_width+3)*dxid
                                    dl1(i1,i2,i3) = dx_coeff(-
     & half_width+4)*dxid
                                 endif
                              else
                                 d(i1,i2,i3) = dx_coeff(half_width)*
     & dxid
                                 dl1(i1,i2,i3) = dx_coeff(half_width-1)
     & *dxid
                                 if ( .not. is_penta ) then
                                    du1(i1,i2,i3) = dx_coeff(
     & half_width-2)*dxid
                                 else
                                    dl2(i1,i2,i3) = dx_coeff(
     & half_width-2)*dxid
                                    du2(i1,i2,i3) = dx_coeff(
     & half_width-3)*dxid
                                    du1(i1,i2,i3) = dx_coeff(
     & half_width-4)*dxid
                                 endif
                              endif
                           else if ( mode.eq.solve_rhs ) then
                              d(i1,i2,i3) = 1d0
                              du1(i1,i2,i3) = 0d0
                              dl1(i1,i2,i3) = 0d0
                              if ( is_penta ) then
                                 du2(i1,i2,i3) = 0d0
                                 dl2(i1,i2,i3) = 0d0
                              endif
                              rhs(i1,i2,i3) = 0d0
                              do io=0,2*half_width
                                       i1o = i1l + (1-2*side)*io*is1
                                       i2o = i2l + (1-2*side)*io*is2
                                       i3o = i3l + (1-2*side)*io*is3
                                 rhs(i1,i2,i3) = rhs(i1,i2,i3) + ul(
     & i1o,i2o,i3o,cc)*dx_coeff(-half_width + side*2*half_width + (1-
     & 2*side)*io)*dxid
                              enddo
                           endif            ! mode
                        enddo !i1l
                        enddo !i2l
                        enddo !i3l
                     elseif (.true..and.is_outflow_bc) then
                        if ( .true. ) then
                        do i3l=bc_range(side,0,2),bc_range(side,1,2)
                        do i2l=bc_range(side,0,1),bc_range(side,1,1)
                        do i1l=bc_range(side,0,0),bc_range(side,1,0)
                                 i1mm = i1l-2*is1
                                 i2mm = i2l-2*is2
                                 i3mm = i3l-2*is3
                                 i1m = i1l-is1
                                 i2m = i2l-is2
                                 i3m = i3l-is3
                                 i1  = i1l
                                 i2  = i2l
                                 i3  = i3l
                                 i1p = i1l+is1
                                 i2p = i2l+is2
                                 i3p = i3l+is3
                                 i1pp = i1l+2*is1
                                 i2pp = i2l+2*is2
                                 i3pp = i3l+2*is3
                           if ( mask(i1,i2,i3).gt.0 ) then
                           rhs(i1l,i2l,i3l) = 0d0
                           if ( .true. .or. mode.eq.solve_lhs ) then
                              if ( .not. rhs_only ) then
                              d(i1l,i2l,i3l) = 1d0
                              if ( extrap_all_1 .or. .not. is_penta ) 
     & then
                                 if ( side.eq.0 ) then
                                    dl1(i1l,i2l,i3l) = 0d0 !1d0
                                    du1(i1l,i2l,i3l) = -1d0 !-2d0
                                 else
                                    du1(i1l,i2l,i3l) = 0d0 ! 1d0
                                    dl1(i1l,i2l,i3l) = -1d0 !-2d0
                                 endif
                                 if ( is_penta ) then
                                    du2(i1l,i2l,i3l) = 0d0
                                    dl2(i1l,i2l,i3l) = 0d0
                                 endif
                              elseif ( is_penta ) then
                                 if ( side.eq.0 ) then
                                    du1(i1l,i2l,i3l) = -4d0
                                    du2(i1l,i2l,i3l) =  6d0
                                    dl2(i1l,i2l,i3l) = -4d0
                                    dl1(i1l,i2l,i3l) =  1d0
                                 else
                                    dl1(i1l,i2l,i3l) = -4d0
                                    dl2(i1l,i2l,i3l) =  6d0
                                    du2(i1l,i2l,i3l) = -4d0
                                    du1(i1l,i2l,i3l) =  1d0
                                 endif
                              endif
                              endif !not rhs_only
                           else if ( mode.eq.solve_rhs) then
                              if ( .not. rhs_only)  then
                              d(i1l,i2l,i3l) = 1d0
                              du1(i1l,i2l,i3l) = 0d0
                              dl1(i1l,i2l,i3l) = 0d0
                              if ( is_penta ) then
                                 du2(i1l,i2l,i3l) = 0d0
                                 dl2(i1l,i2l,i3l) = 0d0
                              endif
                              endif !not rhs_only
                              if ( extrap_all_1 .or. .not. is_penta ) 
     & then
                                 io = 1-2*side
                                       i1o = i1l + io*is1
                                       i2o = i2l + io*is2
                                       i3o = i3l + io*is3
                                 rhs(i1l,i2l,i3l) = (ul(i1o,i2o,i3o,cc)
     & )
                              elseif (is_penta) then
                                 io = 1-2*side
                                       i1o = i1l + io*is1
                                       i2o = i2l + io*is2
                                       i3o = i3l + io*is3
                                 rhs(i1l,i2l,i3l) = 4d0*ul(i1o,i2o,i3o,
     & cc)
                                 io = 2*(1-2*side)
                                       i1o = i1l + io*is1
                                       i2o = i2l + io*is2
                                       i3o = i3l + io*is3
                                 rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)-
     & 6d0*ul(i1o,i2o,i3o,cc)
                                 io = 3*(1-2*side)
                                       i1o = i1l + io*is1
                                       i2o = i2l + io*is2
                                       i3o = i3l + io*is3
                                 rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)+
     & 4d0*ul(i1o,i2o,i3o,cc)
                                 io = 4*(1-2*side)
                                       i1o = i1l + io*is1
                                       i2o = i2l + io*is2
                                       i3o = i3l + io*is3
                                 rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)-
     & 1d0*ul(i1o,i2o,i3o,cc)
                                 rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)
            !!                     rhs(i1l,i2l,i3l) = (1-2*side)*rhs(i1l,i2l,i3l)
                              endif
                           endif
                           endif !mask
                        enddo
                        enddo
                        enddo
                        endif
                     elseif(.not.(cc.eq.tc .and. bcData(tc+tc*2,SIDE,
     & dir,grid).ne.0d0)) then
                     elseif (bc(side,dir).gt.0 .and. 
     & .not.is_outflow_bc .and. bc(side,dir).ne.slipwall ) then
                        print *,"ins_factors: 
     & APPLY_BOUNDARY_CONDITIONS macro: unknown bc : ",bc(side,dir)
            !"
                        stop 99999
                     endif ! type of boundary condition
                  enddo ! side
                  endif ! not periodic
            ! now fixup entire lines that sit on boundaries
            if ( .true. ) then
                  if ( dir.eq.0 ) then
                     if ( (((bc(0,1).eq.dirichletBoundaryCondition)
     & .or.(bc(0,1).eq.inflowWithVelocityGiven).or.(bc(0,1)
     & .eq.noSlipWall)).or.(bc(0,1).eq.slipWall.and.1.eq.(cc-uc))
     & .and.(bc(0,1).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,1,grid).ne.0d0)))) ) then
                                      i2l = index_range(0,2-1)
                                    do i3l=i3s,i3e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( (((bc(1,1).eq.dirichletBoundaryCondition)
     & .or.(bc(1,1).eq.inflowWithVelocityGiven).or.(bc(1,1)
     & .eq.noSlipWall)).or.(bc(1,1).eq.slipWall.and.1.eq.(cc-uc))
     & .and.(bc(1,1).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,1,grid).ne.0d0)))) ) then
                                      i2l = index_range(1,2-1)
                                    do i3l=i3s,i3e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( nd.gt.2 ) then
                        if ( (((bc(0,2).eq.dirichletBoundaryCondition)
     & .or.(bc(0,2).eq.inflowWithVelocityGiven).or.(bc(0,2)
     & .eq.noSlipWall)).or.(bc(0,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(0,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,2,grid).ne.0d0)))) ) then
                                         i3l = index_range(0,3-1)
                                       do i2l=i2s,i2e
                                       do i1l=i1s,i1e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                        endif
                        if ( (((bc(1,2).eq.dirichletBoundaryCondition)
     & .or.(bc(1,2).eq.inflowWithVelocityGiven).or.(bc(1,2)
     & .eq.noSlipWall)).or.(bc(1,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(1,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,2,grid).ne.0d0)))) ) then
                                         i3l = index_range(1,3-1)
                                       do i2l=i2s,i2e
                                       do i1l=i1s,i1e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                        endif
                     endif
                  else if ( dir.eq.1 ) then
                     if ( (((bc(0,0).eq.dirichletBoundaryCondition)
     & .or.(bc(0,0).eq.inflowWithVelocityGiven).or.(bc(0,0)
     & .eq.noSlipWall)).or.(bc(0,0).eq.slipWall.and.0.eq.(cc-uc))
     & .and.(bc(0,0).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,0,grid).ne.0d0)))) ) then
                                      i1l = index_range(0,1-1)
                                    do i3l=i3s,i3e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( (((bc(1,0).eq.dirichletBoundaryCondition)
     & .or.(bc(1,0).eq.inflowWithVelocityGiven).or.(bc(1,0)
     & .eq.noSlipWall)).or.(bc(1,0).eq.slipWall.and.0.eq.(cc-uc))
     & .and.(bc(1,0).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,0,grid).ne.0d0)))) ) then
                                      i1l = index_range(1,1-1)
                                    do i3l=i3s,i3e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( nd.gt.2 ) then
                        if ( (((bc(0,2).eq.dirichletBoundaryCondition)
     & .or.(bc(0,2).eq.inflowWithVelocityGiven).or.(bc(0,2)
     & .eq.noSlipWall)).or.(bc(0,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(0,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,2,grid).ne.0d0)))) ) then
                                         i3l = index_range(0,3-1)
                                       do i1l=i1s,i1e
                                       do i2l=i2s,i2e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                        endif
                        if ( (((bc(1,2).eq.dirichletBoundaryCondition)
     & .or.(bc(1,2).eq.inflowWithVelocityGiven).or.(bc(1,2)
     & .eq.noSlipWall)).or.(bc(1,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(1,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,2,grid).ne.0d0)))) ) then
                                         i3l = index_range(1,3-1)
                                       do i1l=i1s,i1e
                                       do i2l=i2s,i2e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                        endif
                     endif
                  else if ( dir.eq.2) then
                     if ( (((bc(0,0).eq.dirichletBoundaryCondition)
     & .or.(bc(0,0).eq.inflowWithVelocityGiven).or.(bc(0,0)
     & .eq.noSlipWall)).or.(bc(0,0).eq.slipWall.and.0.eq.(cc-uc))
     & .and.(bc(0,0).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,0,grid).ne.0d0)))) ) then
                                         i1l = index_range(0,1-1)
                                       do i3l=i3s,i3e
                                       do i2l=i2s,i2e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                     endif
                     if ( (((bc(1,0).eq.dirichletBoundaryCondition)
     & .or.(bc(1,0).eq.inflowWithVelocityGiven).or.(bc(1,0)
     & .eq.noSlipWall)).or.(bc(1,0).eq.slipWall.and.0.eq.(cc-uc))
     & .and.(bc(1,0).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,0,grid).ne.0d0)))) ) then
                                         i1l = index_range(1,1-1)
                                       do i3l=i3s,i3e
                                       do i2l=i2s,i2e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                     endif
                     if ( (((bc(0,1).eq.dirichletBoundaryCondition)
     & .or.(bc(0,1).eq.inflowWithVelocityGiven).or.(bc(0,1)
     & .eq.noSlipWall)).or.(bc(0,1).eq.slipWall.and.1.eq.(cc-uc))
     & .and.(bc(0,1).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,1,grid).ne.0d0)))) ) then
                                         i2l = index_range(0,2-1)
                                       do i3l=i3s,i3e
                                       do i1l=i1s,i1e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                     endif
                     if ( (((bc(1,1).eq.dirichletBoundaryCondition)
     & .or.(bc(1,1).eq.inflowWithVelocityGiven).or.(bc(1,1)
     & .eq.noSlipWall)).or.(bc(1,1).eq.slipWall.and.1.eq.(cc-uc))
     & .and.(bc(1,1).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,1,grid).ne.0d0)))) ) then
                                         i2l = index_range(1,2-1)
                                       do i3l=i3s,i3e
                                       do i1l=i1s,i1e
                                          if ( .not. rhs_only ) then
                                          dl1(i1l,i2l,i3l) = 0d0
                                          d(i1l,i2l,i3l) = 1d0
                                          du1(i1l,i2l,i3l) = 0d0
                                          if ( is_penta ) then
                                             dl2(i1l,i2l,i3l) = 0d0
                                             du2(i1l,i2l,i3l) = 0d0
                                          endif
                                          endif ! not rhs_only
                                          if ( mode .ne. get_explicit )
     &  then
                                             rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                          else
                                             rhs(i1l,i2l,i3l) = 0d0
                                          endif
                                       enddo
                                       enddo
                     endif
                  endif
            endif
c         else
c            IDENTITY_GHOST()
c         endif
      endif

      end ! subroutine ins_rfactor
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! subroutine ins_rrfactor
      subroutine ins_rrfactor(nd,nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,nd4a,
     & nd4b,mask, rsxy, u, ul, gv, bc, boundaryCondition, ndbcd1a,
     & ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,ndbcd4b,bcData,
     &  ipar, rpar, pdb, mode, dir, cc,dl2,dl1,d,du1,du2, rhs, ierr )
!     Incompressible Navier Stokes factor for an approximate factorization scheme
!     
!     INPUT::
!     nd : number of dimensions
!     mask : mask array
!     rsxy : mapping jacobian matrix
!     u : current solution
!     ul : solution to be used for the rhs
!     gv : grid velocity
!     mode : 0 means solve for the rhs temporary af variable, 1 means solve for the lhs, 2 add any explicit contribution
!     dir  : grid direction for the line sweep
!     cc : component to solve for
!
!     OUTPUT::
!     dl2,dl1,d,du1,du2 : arrays for the tri(penta)-diagonal blocks 
!                 note that dl1, d, and dl2 are used for tri-systems and dl2,dl1,d,du1,du2 for pentas
!                 name naming goes DLO or DUO meaning Diagonal Lower/Upper Offset so that dl2 is the lower diagonal with offset 2
!                 d is the diagonal
!     rhs : right hand side vector for the solve
!     ierr : error flag
!
!
      implicit none
            integer compact,finite_difference
            parameter(finite_difference=0,compact=1)
            integer solve_rhs,solve_lhs,get_explicit
            parameter(solve_rhs=0,solve_lhs=1,get_explicit=2)
            integer max_width,half_width
            parameter(max_width=5,half_width=2)
            integer max_dim
            parameter(max_dim=3)
            integer pdeModel,standardModel,BoussinesqModel,
     & viscoPlasticModel,twoPhaseFlowModel
            parameter( standardModel=0,BoussinesqModel=1,
     & viscoPlasticModel=2,twoPhaseFlowModel=3 )
            integer noSlipWall, inflowWithVelocityGiven, slipWall, 
     & outflow, convectiveOutflow, tractionFree, inflowWithPandTV, 
     & dirichletBoundaryCondition, symmetry, axisymmetric, 
     & interfaceBoundaryCondition,neumannBoundaryCondition, 
     & parallelbc, periodicbc
            parameter( noSlipWall=1,inflowWithVelocityGiven=2,
     & slipWall=4, outflow=5,convectiveOutflow=14,tractionFree=15, 
     & inflowWithPandTV=3, dirichletBoundaryCondition=12, symmetry=11,
     & axisymmetric=13,interfaceBoundaryCondition=17,
     & neumannBoundaryCondition=18,parallelbc=-31415,periodicbc=-1 )
      integer ipar(0:*)
      real rpar(0:*)
      integer nd, n1a,n1b,n2a,n2b,n3a,n3b,nd1a,nd1b,nd2a,nd2b,nd3a,
     & nd3b,nd4a,nd4b
      integer nde,nr1a,nr1b,nr2a,nr2b,nr3a,nr3b
      real u(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real ul(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real dl2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real dl1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real   d(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real rhs(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real gv(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real gvl(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real dw(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
!      real xy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
      real rsxy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1,0:nd-1)
!      real radiusInverse(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer mask(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer bc(0:1,0:2),boundaryCondition(0:1,0:2),indexRange(0:1,
     & 0:2),ierr
      integer ndbcd1a,ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,
     & ndbcd4b
      real bcData(ndbcd1a:ndbcd1b,ndbcd2a:ndbcd2b,ndbcd3a:ndbcd3b,
     & ndbcd4a:ndbcd4b)
      integer mode,dir,cc
      double precision pdb  ! pointer to data base
      !  declareParametricDerivativeVariables(v,DIM)
      !      declareJacobianDerivativeVariables(aj_m2_,3)
      !      declareJacobianDerivativeVariables(aj_m1_,3)
             real aj_rx,aj_rxr,aj_rxs,aj_rxt,aj_rxrr,aj_rxrs,aj_rxss,
     & aj_rxrt,aj_rxst,aj_rxtt,aj_rxrrr,aj_rxrrs,aj_rxrss,aj_rxsss,
     & aj_rxrrt,aj_rxrst,aj_rxsst,aj_rxrtt,aj_rxstt,aj_rxttt,
     & aj_rxrrrr,aj_rxrrrs,aj_rxrrss,aj_rxrsss,aj_rxssss,aj_rxrrrt,
     & aj_rxrrst,aj_rxrsst,aj_rxssst,aj_rxrrtt,aj_rxrstt,aj_rxsstt,
     & aj_rxrttt,aj_rxsttt,aj_rxtttt,aj_rxrrrrr,aj_rxrrrrs,aj_rxrrrss,
     & aj_rxrrsss,aj_rxrssss,aj_rxsssss,aj_rxrrrrt,aj_rxrrrst,
     & aj_rxrrsst,aj_rxrssst,aj_rxsssst,aj_rxrrrtt,aj_rxrrstt,
     & aj_rxrsstt,aj_rxssstt,aj_rxrrttt,aj_rxrsttt,aj_rxssttt,
     & aj_rxrtttt,aj_rxstttt,aj_rxttttt,aj_rxrrrrrr,aj_rxrrrrrs,
     & aj_rxrrrrss,aj_rxrrrsss,aj_rxrrssss,aj_rxrsssss,aj_rxssssss,
     & aj_rxrrrrrt,aj_rxrrrrst,aj_rxrrrsst,aj_rxrrssst,aj_rxrsssst,
     & aj_rxssssst,aj_rxrrrrtt,aj_rxrrrstt,aj_rxrrsstt,aj_rxrssstt,
     & aj_rxsssstt,aj_rxrrrttt,aj_rxrrsttt,aj_rxrssttt,aj_rxsssttt,
     & aj_rxrrtttt,aj_rxrstttt,aj_rxsstttt,aj_rxrttttt,aj_rxsttttt,
     & aj_rxtttttt
             real aj_sx,aj_sxr,aj_sxs,aj_sxt,aj_sxrr,aj_sxrs,aj_sxss,
     & aj_sxrt,aj_sxst,aj_sxtt,aj_sxrrr,aj_sxrrs,aj_sxrss,aj_sxsss,
     & aj_sxrrt,aj_sxrst,aj_sxsst,aj_sxrtt,aj_sxstt,aj_sxttt,
     & aj_sxrrrr,aj_sxrrrs,aj_sxrrss,aj_sxrsss,aj_sxssss,aj_sxrrrt,
     & aj_sxrrst,aj_sxrsst,aj_sxssst,aj_sxrrtt,aj_sxrstt,aj_sxsstt,
     & aj_sxrttt,aj_sxsttt,aj_sxtttt,aj_sxrrrrr,aj_sxrrrrs,aj_sxrrrss,
     & aj_sxrrsss,aj_sxrssss,aj_sxsssss,aj_sxrrrrt,aj_sxrrrst,
     & aj_sxrrsst,aj_sxrssst,aj_sxsssst,aj_sxrrrtt,aj_sxrrstt,
     & aj_sxrsstt,aj_sxssstt,aj_sxrrttt,aj_sxrsttt,aj_sxssttt,
     & aj_sxrtttt,aj_sxstttt,aj_sxttttt,aj_sxrrrrrr,aj_sxrrrrrs,
     & aj_sxrrrrss,aj_sxrrrsss,aj_sxrrssss,aj_sxrsssss,aj_sxssssss,
     & aj_sxrrrrrt,aj_sxrrrrst,aj_sxrrrsst,aj_sxrrssst,aj_sxrsssst,
     & aj_sxssssst,aj_sxrrrrtt,aj_sxrrrstt,aj_sxrrsstt,aj_sxrssstt,
     & aj_sxsssstt,aj_sxrrrttt,aj_sxrrsttt,aj_sxrssttt,aj_sxsssttt,
     & aj_sxrrtttt,aj_sxrstttt,aj_sxsstttt,aj_sxrttttt,aj_sxsttttt,
     & aj_sxtttttt
             real aj_ry,aj_ryr,aj_rys,aj_ryt,aj_ryrr,aj_ryrs,aj_ryss,
     & aj_ryrt,aj_ryst,aj_rytt,aj_ryrrr,aj_ryrrs,aj_ryrss,aj_rysss,
     & aj_ryrrt,aj_ryrst,aj_rysst,aj_ryrtt,aj_rystt,aj_ryttt,
     & aj_ryrrrr,aj_ryrrrs,aj_ryrrss,aj_ryrsss,aj_ryssss,aj_ryrrrt,
     & aj_ryrrst,aj_ryrsst,aj_ryssst,aj_ryrrtt,aj_ryrstt,aj_rysstt,
     & aj_ryrttt,aj_rysttt,aj_rytttt,aj_ryrrrrr,aj_ryrrrrs,aj_ryrrrss,
     & aj_ryrrsss,aj_ryrssss,aj_rysssss,aj_ryrrrrt,aj_ryrrrst,
     & aj_ryrrsst,aj_ryrssst,aj_rysssst,aj_ryrrrtt,aj_ryrrstt,
     & aj_ryrsstt,aj_ryssstt,aj_ryrrttt,aj_ryrsttt,aj_ryssttt,
     & aj_ryrtttt,aj_rystttt,aj_ryttttt,aj_ryrrrrrr,aj_ryrrrrrs,
     & aj_ryrrrrss,aj_ryrrrsss,aj_ryrrssss,aj_ryrsssss,aj_ryssssss,
     & aj_ryrrrrrt,aj_ryrrrrst,aj_ryrrrsst,aj_ryrrssst,aj_ryrsssst,
     & aj_ryssssst,aj_ryrrrrtt,aj_ryrrrstt,aj_ryrrsstt,aj_ryrssstt,
     & aj_rysssstt,aj_ryrrrttt,aj_ryrrsttt,aj_ryrssttt,aj_rysssttt,
     & aj_ryrrtttt,aj_ryrstttt,aj_rysstttt,aj_ryrttttt,aj_rysttttt,
     & aj_rytttttt
             real aj_sy,aj_syr,aj_sys,aj_syt,aj_syrr,aj_syrs,aj_syss,
     & aj_syrt,aj_syst,aj_sytt,aj_syrrr,aj_syrrs,aj_syrss,aj_sysss,
     & aj_syrrt,aj_syrst,aj_sysst,aj_syrtt,aj_systt,aj_syttt,
     & aj_syrrrr,aj_syrrrs,aj_syrrss,aj_syrsss,aj_syssss,aj_syrrrt,
     & aj_syrrst,aj_syrsst,aj_syssst,aj_syrrtt,aj_syrstt,aj_sysstt,
     & aj_syrttt,aj_systtt,aj_sytttt,aj_syrrrrr,aj_syrrrrs,aj_syrrrss,
     & aj_syrrsss,aj_syrssss,aj_sysssss,aj_syrrrrt,aj_syrrrst,
     & aj_syrrsst,aj_syrssst,aj_sysssst,aj_syrrrtt,aj_syrrstt,
     & aj_syrsstt,aj_syssstt,aj_syrrttt,aj_syrsttt,aj_syssttt,
     & aj_syrtttt,aj_systttt,aj_syttttt,aj_syrrrrrr,aj_syrrrrrs,
     & aj_syrrrrss,aj_syrrrsss,aj_syrrssss,aj_syrsssss,aj_syssssss,
     & aj_syrrrrrt,aj_syrrrrst,aj_syrrrsst,aj_syrrssst,aj_syrsssst,
     & aj_syssssst,aj_syrrrrtt,aj_syrrrstt,aj_syrrsstt,aj_syrssstt,
     & aj_sysssstt,aj_syrrrttt,aj_syrrsttt,aj_syrssttt,aj_sysssttt,
     & aj_syrrtttt,aj_syrstttt,aj_sysstttt,aj_syrttttt,aj_systtttt,
     & aj_sytttttt
             real aj_rxx,aj_rxy,aj_rxz,aj_rxxx,aj_rxxy,aj_rxyy,aj_rxxz,
     & aj_rxyz,aj_rxzz,aj_rxxxx,aj_rxxxy,aj_rxxyy,aj_rxyyy,aj_rxxxz,
     & aj_rxxyz,aj_rxyyz,aj_rxxzz,aj_rxyzz,aj_rxzzz,aj_rxxxxx,
     & aj_rxxxxy,aj_rxxxyy,aj_rxxyyy,aj_rxyyyy,aj_rxxxxz,aj_rxxxyz,
     & aj_rxxyyz,aj_rxyyyz,aj_rxxxzz,aj_rxxyzz,aj_rxyyzz,aj_rxxzzz,
     & aj_rxyzzz,aj_rxzzzz,aj_rxxxxxx,aj_rxxxxxy,aj_rxxxxyy,
     & aj_rxxxyyy,aj_rxxyyyy,aj_rxyyyyy,aj_rxxxxxz,aj_rxxxxyz,
     & aj_rxxxyyz,aj_rxxyyyz,aj_rxyyyyz,aj_rxxxxzz,aj_rxxxyzz,
     & aj_rxxyyzz,aj_rxyyyzz,aj_rxxxzzz,aj_rxxyzzz,aj_rxyyzzz,
     & aj_rxxzzzz,aj_rxyzzzz,aj_rxzzzzz,aj_rxxxxxxx,aj_rxxxxxxy,
     & aj_rxxxxxyy,aj_rxxxxyyy,aj_rxxxyyyy,aj_rxxyyyyy,aj_rxyyyyyy,
     & aj_rxxxxxxz,aj_rxxxxxyz,aj_rxxxxyyz,aj_rxxxyyyz,aj_rxxyyyyz,
     & aj_rxyyyyyz,aj_rxxxxxzz,aj_rxxxxyzz,aj_rxxxyyzz,aj_rxxyyyzz,
     & aj_rxyyyyzz,aj_rxxxxzzz,aj_rxxxyzzz,aj_rxxyyzzz,aj_rxyyyzzz,
     & aj_rxxxzzzz,aj_rxxyzzzz,aj_rxyyzzzz,aj_rxxzzzzz,aj_rxyzzzzz,
     & aj_rxzzzzzz
             real aj_sxx,aj_sxy,aj_sxz,aj_sxxx,aj_sxxy,aj_sxyy,aj_sxxz,
     & aj_sxyz,aj_sxzz,aj_sxxxx,aj_sxxxy,aj_sxxyy,aj_sxyyy,aj_sxxxz,
     & aj_sxxyz,aj_sxyyz,aj_sxxzz,aj_sxyzz,aj_sxzzz,aj_sxxxxx,
     & aj_sxxxxy,aj_sxxxyy,aj_sxxyyy,aj_sxyyyy,aj_sxxxxz,aj_sxxxyz,
     & aj_sxxyyz,aj_sxyyyz,aj_sxxxzz,aj_sxxyzz,aj_sxyyzz,aj_sxxzzz,
     & aj_sxyzzz,aj_sxzzzz,aj_sxxxxxx,aj_sxxxxxy,aj_sxxxxyy,
     & aj_sxxxyyy,aj_sxxyyyy,aj_sxyyyyy,aj_sxxxxxz,aj_sxxxxyz,
     & aj_sxxxyyz,aj_sxxyyyz,aj_sxyyyyz,aj_sxxxxzz,aj_sxxxyzz,
     & aj_sxxyyzz,aj_sxyyyzz,aj_sxxxzzz,aj_sxxyzzz,aj_sxyyzzz,
     & aj_sxxzzzz,aj_sxyzzzz,aj_sxzzzzz,aj_sxxxxxxx,aj_sxxxxxxy,
     & aj_sxxxxxyy,aj_sxxxxyyy,aj_sxxxyyyy,aj_sxxyyyyy,aj_sxyyyyyy,
     & aj_sxxxxxxz,aj_sxxxxxyz,aj_sxxxxyyz,aj_sxxxyyyz,aj_sxxyyyyz,
     & aj_sxyyyyyz,aj_sxxxxxzz,aj_sxxxxyzz,aj_sxxxyyzz,aj_sxxyyyzz,
     & aj_sxyyyyzz,aj_sxxxxzzz,aj_sxxxyzzz,aj_sxxyyzzz,aj_sxyyyzzz,
     & aj_sxxxzzzz,aj_sxxyzzzz,aj_sxyyzzzz,aj_sxxzzzzz,aj_sxyzzzzz,
     & aj_sxzzzzzz
             real aj_ryx,aj_ryy,aj_ryz,aj_ryxx,aj_ryxy,aj_ryyy,aj_ryxz,
     & aj_ryyz,aj_ryzz,aj_ryxxx,aj_ryxxy,aj_ryxyy,aj_ryyyy,aj_ryxxz,
     & aj_ryxyz,aj_ryyyz,aj_ryxzz,aj_ryyzz,aj_ryzzz,aj_ryxxxx,
     & aj_ryxxxy,aj_ryxxyy,aj_ryxyyy,aj_ryyyyy,aj_ryxxxz,aj_ryxxyz,
     & aj_ryxyyz,aj_ryyyyz,aj_ryxxzz,aj_ryxyzz,aj_ryyyzz,aj_ryxzzz,
     & aj_ryyzzz,aj_ryzzzz,aj_ryxxxxx,aj_ryxxxxy,aj_ryxxxyy,
     & aj_ryxxyyy,aj_ryxyyyy,aj_ryyyyyy,aj_ryxxxxz,aj_ryxxxyz,
     & aj_ryxxyyz,aj_ryxyyyz,aj_ryyyyyz,aj_ryxxxzz,aj_ryxxyzz,
     & aj_ryxyyzz,aj_ryyyyzz,aj_ryxxzzz,aj_ryxyzzz,aj_ryyyzzz,
     & aj_ryxzzzz,aj_ryyzzzz,aj_ryzzzzz,aj_ryxxxxxx,aj_ryxxxxxy,
     & aj_ryxxxxyy,aj_ryxxxyyy,aj_ryxxyyyy,aj_ryxyyyyy,aj_ryyyyyyy,
     & aj_ryxxxxxz,aj_ryxxxxyz,aj_ryxxxyyz,aj_ryxxyyyz,aj_ryxyyyyz,
     & aj_ryyyyyyz,aj_ryxxxxzz,aj_ryxxxyzz,aj_ryxxyyzz,aj_ryxyyyzz,
     & aj_ryyyyyzz,aj_ryxxxzzz,aj_ryxxyzzz,aj_ryxyyzzz,aj_ryyyyzzz,
     & aj_ryxxzzzz,aj_ryxyzzzz,aj_ryyyzzzz,aj_ryxzzzzz,aj_ryyzzzzz,
     & aj_ryzzzzzz
             real aj_syx,aj_syy,aj_syz,aj_syxx,aj_syxy,aj_syyy,aj_syxz,
     & aj_syyz,aj_syzz,aj_syxxx,aj_syxxy,aj_syxyy,aj_syyyy,aj_syxxz,
     & aj_syxyz,aj_syyyz,aj_syxzz,aj_syyzz,aj_syzzz,aj_syxxxx,
     & aj_syxxxy,aj_syxxyy,aj_syxyyy,aj_syyyyy,aj_syxxxz,aj_syxxyz,
     & aj_syxyyz,aj_syyyyz,aj_syxxzz,aj_syxyzz,aj_syyyzz,aj_syxzzz,
     & aj_syyzzz,aj_syzzzz,aj_syxxxxx,aj_syxxxxy,aj_syxxxyy,
     & aj_syxxyyy,aj_syxyyyy,aj_syyyyyy,aj_syxxxxz,aj_syxxxyz,
     & aj_syxxyyz,aj_syxyyyz,aj_syyyyyz,aj_syxxxzz,aj_syxxyzz,
     & aj_syxyyzz,aj_syyyyzz,aj_syxxzzz,aj_syxyzzz,aj_syyyzzz,
     & aj_syxzzzz,aj_syyzzzz,aj_syzzzzz,aj_syxxxxxx,aj_syxxxxxy,
     & aj_syxxxxyy,aj_syxxxyyy,aj_syxxyyyy,aj_syxyyyyy,aj_syyyyyyy,
     & aj_syxxxxxz,aj_syxxxxyz,aj_syxxxyyz,aj_syxxyyyz,aj_syxyyyyz,
     & aj_syyyyyyz,aj_syxxxxzz,aj_syxxxyzz,aj_syxxyyzz,aj_syxyyyzz,
     & aj_syyyyyzz,aj_syxxxzzz,aj_syxxyzzz,aj_syxyyzzz,aj_syyyyzzz,
     & aj_syxxzzzz,aj_syxyzzzz,aj_syyyzzzz,aj_syxzzzzz,aj_syyzzzzz,
     & aj_syzzzzzz
             real aj_rz,aj_rzr,aj_rzs,aj_rzt,aj_rzrr,aj_rzrs,aj_rzss,
     & aj_rzrt,aj_rzst,aj_rztt,aj_rzrrr,aj_rzrrs,aj_rzrss,aj_rzsss,
     & aj_rzrrt,aj_rzrst,aj_rzsst,aj_rzrtt,aj_rzstt,aj_rzttt,
     & aj_rzrrrr,aj_rzrrrs,aj_rzrrss,aj_rzrsss,aj_rzssss,aj_rzrrrt,
     & aj_rzrrst,aj_rzrsst,aj_rzssst,aj_rzrrtt,aj_rzrstt,aj_rzsstt,
     & aj_rzrttt,aj_rzsttt,aj_rztttt,aj_rzrrrrr,aj_rzrrrrs,aj_rzrrrss,
     & aj_rzrrsss,aj_rzrssss,aj_rzsssss,aj_rzrrrrt,aj_rzrrrst,
     & aj_rzrrsst,aj_rzrssst,aj_rzsssst,aj_rzrrrtt,aj_rzrrstt,
     & aj_rzrsstt,aj_rzssstt,aj_rzrrttt,aj_rzrsttt,aj_rzssttt,
     & aj_rzrtttt,aj_rzstttt,aj_rzttttt,aj_rzrrrrrr,aj_rzrrrrrs,
     & aj_rzrrrrss,aj_rzrrrsss,aj_rzrrssss,aj_rzrsssss,aj_rzssssss,
     & aj_rzrrrrrt,aj_rzrrrrst,aj_rzrrrsst,aj_rzrrssst,aj_rzrsssst,
     & aj_rzssssst,aj_rzrrrrtt,aj_rzrrrstt,aj_rzrrsstt,aj_rzrssstt,
     & aj_rzsssstt,aj_rzrrrttt,aj_rzrrsttt,aj_rzrssttt,aj_rzsssttt,
     & aj_rzrrtttt,aj_rzrstttt,aj_rzsstttt,aj_rzrttttt,aj_rzsttttt,
     & aj_rztttttt
             real aj_sz,aj_szr,aj_szs,aj_szt,aj_szrr,aj_szrs,aj_szss,
     & aj_szrt,aj_szst,aj_sztt,aj_szrrr,aj_szrrs,aj_szrss,aj_szsss,
     & aj_szrrt,aj_szrst,aj_szsst,aj_szrtt,aj_szstt,aj_szttt,
     & aj_szrrrr,aj_szrrrs,aj_szrrss,aj_szrsss,aj_szssss,aj_szrrrt,
     & aj_szrrst,aj_szrsst,aj_szssst,aj_szrrtt,aj_szrstt,aj_szsstt,
     & aj_szrttt,aj_szsttt,aj_sztttt,aj_szrrrrr,aj_szrrrrs,aj_szrrrss,
     & aj_szrrsss,aj_szrssss,aj_szsssss,aj_szrrrrt,aj_szrrrst,
     & aj_szrrsst,aj_szrssst,aj_szsssst,aj_szrrrtt,aj_szrrstt,
     & aj_szrsstt,aj_szssstt,aj_szrrttt,aj_szrsttt,aj_szssttt,
     & aj_szrtttt,aj_szstttt,aj_szttttt,aj_szrrrrrr,aj_szrrrrrs,
     & aj_szrrrrss,aj_szrrrsss,aj_szrrssss,aj_szrsssss,aj_szssssss,
     & aj_szrrrrrt,aj_szrrrrst,aj_szrrrsst,aj_szrrssst,aj_szrsssst,
     & aj_szssssst,aj_szrrrrtt,aj_szrrrstt,aj_szrrsstt,aj_szrssstt,
     & aj_szsssstt,aj_szrrrttt,aj_szrrsttt,aj_szrssttt,aj_szsssttt,
     & aj_szrrtttt,aj_szrstttt,aj_szsstttt,aj_szrttttt,aj_szsttttt,
     & aj_sztttttt
             real aj_tx,aj_txr,aj_txs,aj_txt,aj_txrr,aj_txrs,aj_txss,
     & aj_txrt,aj_txst,aj_txtt,aj_txrrr,aj_txrrs,aj_txrss,aj_txsss,
     & aj_txrrt,aj_txrst,aj_txsst,aj_txrtt,aj_txstt,aj_txttt,
     & aj_txrrrr,aj_txrrrs,aj_txrrss,aj_txrsss,aj_txssss,aj_txrrrt,
     & aj_txrrst,aj_txrsst,aj_txssst,aj_txrrtt,aj_txrstt,aj_txsstt,
     & aj_txrttt,aj_txsttt,aj_txtttt,aj_txrrrrr,aj_txrrrrs,aj_txrrrss,
     & aj_txrrsss,aj_txrssss,aj_txsssss,aj_txrrrrt,aj_txrrrst,
     & aj_txrrsst,aj_txrssst,aj_txsssst,aj_txrrrtt,aj_txrrstt,
     & aj_txrsstt,aj_txssstt,aj_txrrttt,aj_txrsttt,aj_txssttt,
     & aj_txrtttt,aj_txstttt,aj_txttttt,aj_txrrrrrr,aj_txrrrrrs,
     & aj_txrrrrss,aj_txrrrsss,aj_txrrssss,aj_txrsssss,aj_txssssss,
     & aj_txrrrrrt,aj_txrrrrst,aj_txrrrsst,aj_txrrssst,aj_txrsssst,
     & aj_txssssst,aj_txrrrrtt,aj_txrrrstt,aj_txrrsstt,aj_txrssstt,
     & aj_txsssstt,aj_txrrrttt,aj_txrrsttt,aj_txrssttt,aj_txsssttt,
     & aj_txrrtttt,aj_txrstttt,aj_txsstttt,aj_txrttttt,aj_txsttttt,
     & aj_txtttttt
             real aj_ty,aj_tyr,aj_tys,aj_tyt,aj_tyrr,aj_tyrs,aj_tyss,
     & aj_tyrt,aj_tyst,aj_tytt,aj_tyrrr,aj_tyrrs,aj_tyrss,aj_tysss,
     & aj_tyrrt,aj_tyrst,aj_tysst,aj_tyrtt,aj_tystt,aj_tyttt,
     & aj_tyrrrr,aj_tyrrrs,aj_tyrrss,aj_tyrsss,aj_tyssss,aj_tyrrrt,
     & aj_tyrrst,aj_tyrsst,aj_tyssst,aj_tyrrtt,aj_tyrstt,aj_tysstt,
     & aj_tyrttt,aj_tysttt,aj_tytttt,aj_tyrrrrr,aj_tyrrrrs,aj_tyrrrss,
     & aj_tyrrsss,aj_tyrssss,aj_tysssss,aj_tyrrrrt,aj_tyrrrst,
     & aj_tyrrsst,aj_tyrssst,aj_tysssst,aj_tyrrrtt,aj_tyrrstt,
     & aj_tyrsstt,aj_tyssstt,aj_tyrrttt,aj_tyrsttt,aj_tyssttt,
     & aj_tyrtttt,aj_tystttt,aj_tyttttt,aj_tyrrrrrr,aj_tyrrrrrs,
     & aj_tyrrrrss,aj_tyrrrsss,aj_tyrrssss,aj_tyrsssss,aj_tyssssss,
     & aj_tyrrrrrt,aj_tyrrrrst,aj_tyrrrsst,aj_tyrrssst,aj_tyrsssst,
     & aj_tyssssst,aj_tyrrrrtt,aj_tyrrrstt,aj_tyrrsstt,aj_tyrssstt,
     & aj_tysssstt,aj_tyrrrttt,aj_tyrrsttt,aj_tyrssttt,aj_tysssttt,
     & aj_tyrrtttt,aj_tyrstttt,aj_tysstttt,aj_tyrttttt,aj_tysttttt,
     & aj_tytttttt
             real aj_tz,aj_tzr,aj_tzs,aj_tzt,aj_tzrr,aj_tzrs,aj_tzss,
     & aj_tzrt,aj_tzst,aj_tztt,aj_tzrrr,aj_tzrrs,aj_tzrss,aj_tzsss,
     & aj_tzrrt,aj_tzrst,aj_tzsst,aj_tzrtt,aj_tzstt,aj_tzttt,
     & aj_tzrrrr,aj_tzrrrs,aj_tzrrss,aj_tzrsss,aj_tzssss,aj_tzrrrt,
     & aj_tzrrst,aj_tzrsst,aj_tzssst,aj_tzrrtt,aj_tzrstt,aj_tzsstt,
     & aj_tzrttt,aj_tzsttt,aj_tztttt,aj_tzrrrrr,aj_tzrrrrs,aj_tzrrrss,
     & aj_tzrrsss,aj_tzrssss,aj_tzsssss,aj_tzrrrrt,aj_tzrrrst,
     & aj_tzrrsst,aj_tzrssst,aj_tzsssst,aj_tzrrrtt,aj_tzrrstt,
     & aj_tzrsstt,aj_tzssstt,aj_tzrrttt,aj_tzrsttt,aj_tzssttt,
     & aj_tzrtttt,aj_tzstttt,aj_tzttttt,aj_tzrrrrrr,aj_tzrrrrrs,
     & aj_tzrrrrss,aj_tzrrrsss,aj_tzrrssss,aj_tzrsssss,aj_tzssssss,
     & aj_tzrrrrrt,aj_tzrrrrst,aj_tzrrrsst,aj_tzrrssst,aj_tzrsssst,
     & aj_tzssssst,aj_tzrrrrtt,aj_tzrrrstt,aj_tzrrsstt,aj_tzrssstt,
     & aj_tzsssstt,aj_tzrrrttt,aj_tzrrsttt,aj_tzrssttt,aj_tzsssttt,
     & aj_tzrrtttt,aj_tzrstttt,aj_tzsstttt,aj_tzrttttt,aj_tzsttttt,
     & aj_tztttttt
             real aj_rzx,aj_rzy,aj_rzz,aj_rzxx,aj_rzxy,aj_rzyy,aj_rzxz,
     & aj_rzyz,aj_rzzz,aj_rzxxx,aj_rzxxy,aj_rzxyy,aj_rzyyy,aj_rzxxz,
     & aj_rzxyz,aj_rzyyz,aj_rzxzz,aj_rzyzz,aj_rzzzz,aj_rzxxxx,
     & aj_rzxxxy,aj_rzxxyy,aj_rzxyyy,aj_rzyyyy,aj_rzxxxz,aj_rzxxyz,
     & aj_rzxyyz,aj_rzyyyz,aj_rzxxzz,aj_rzxyzz,aj_rzyyzz,aj_rzxzzz,
     & aj_rzyzzz,aj_rzzzzz,aj_rzxxxxx,aj_rzxxxxy,aj_rzxxxyy,
     & aj_rzxxyyy,aj_rzxyyyy,aj_rzyyyyy,aj_rzxxxxz,aj_rzxxxyz,
     & aj_rzxxyyz,aj_rzxyyyz,aj_rzyyyyz,aj_rzxxxzz,aj_rzxxyzz,
     & aj_rzxyyzz,aj_rzyyyzz,aj_rzxxzzz,aj_rzxyzzz,aj_rzyyzzz,
     & aj_rzxzzzz,aj_rzyzzzz,aj_rzzzzzz,aj_rzxxxxxx,aj_rzxxxxxy,
     & aj_rzxxxxyy,aj_rzxxxyyy,aj_rzxxyyyy,aj_rzxyyyyy,aj_rzyyyyyy,
     & aj_rzxxxxxz,aj_rzxxxxyz,aj_rzxxxyyz,aj_rzxxyyyz,aj_rzxyyyyz,
     & aj_rzyyyyyz,aj_rzxxxxzz,aj_rzxxxyzz,aj_rzxxyyzz,aj_rzxyyyzz,
     & aj_rzyyyyzz,aj_rzxxxzzz,aj_rzxxyzzz,aj_rzxyyzzz,aj_rzyyyzzz,
     & aj_rzxxzzzz,aj_rzxyzzzz,aj_rzyyzzzz,aj_rzxzzzzz,aj_rzyzzzzz,
     & aj_rzzzzzzz
             real aj_szx,aj_szy,aj_szz,aj_szxx,aj_szxy,aj_szyy,aj_szxz,
     & aj_szyz,aj_szzz,aj_szxxx,aj_szxxy,aj_szxyy,aj_szyyy,aj_szxxz,
     & aj_szxyz,aj_szyyz,aj_szxzz,aj_szyzz,aj_szzzz,aj_szxxxx,
     & aj_szxxxy,aj_szxxyy,aj_szxyyy,aj_szyyyy,aj_szxxxz,aj_szxxyz,
     & aj_szxyyz,aj_szyyyz,aj_szxxzz,aj_szxyzz,aj_szyyzz,aj_szxzzz,
     & aj_szyzzz,aj_szzzzz,aj_szxxxxx,aj_szxxxxy,aj_szxxxyy,
     & aj_szxxyyy,aj_szxyyyy,aj_szyyyyy,aj_szxxxxz,aj_szxxxyz,
     & aj_szxxyyz,aj_szxyyyz,aj_szyyyyz,aj_szxxxzz,aj_szxxyzz,
     & aj_szxyyzz,aj_szyyyzz,aj_szxxzzz,aj_szxyzzz,aj_szyyzzz,
     & aj_szxzzzz,aj_szyzzzz,aj_szzzzzz,aj_szxxxxxx,aj_szxxxxxy,
     & aj_szxxxxyy,aj_szxxxyyy,aj_szxxyyyy,aj_szxyyyyy,aj_szyyyyyy,
     & aj_szxxxxxz,aj_szxxxxyz,aj_szxxxyyz,aj_szxxyyyz,aj_szxyyyyz,
     & aj_szyyyyyz,aj_szxxxxzz,aj_szxxxyzz,aj_szxxyyzz,aj_szxyyyzz,
     & aj_szyyyyzz,aj_szxxxzzz,aj_szxxyzzz,aj_szxyyzzz,aj_szyyyzzz,
     & aj_szxxzzzz,aj_szxyzzzz,aj_szyyzzzz,aj_szxzzzzz,aj_szyzzzzz,
     & aj_szzzzzzz
             real aj_txx,aj_txy,aj_txz,aj_txxx,aj_txxy,aj_txyy,aj_txxz,
     & aj_txyz,aj_txzz,aj_txxxx,aj_txxxy,aj_txxyy,aj_txyyy,aj_txxxz,
     & aj_txxyz,aj_txyyz,aj_txxzz,aj_txyzz,aj_txzzz,aj_txxxxx,
     & aj_txxxxy,aj_txxxyy,aj_txxyyy,aj_txyyyy,aj_txxxxz,aj_txxxyz,
     & aj_txxyyz,aj_txyyyz,aj_txxxzz,aj_txxyzz,aj_txyyzz,aj_txxzzz,
     & aj_txyzzz,aj_txzzzz,aj_txxxxxx,aj_txxxxxy,aj_txxxxyy,
     & aj_txxxyyy,aj_txxyyyy,aj_txyyyyy,aj_txxxxxz,aj_txxxxyz,
     & aj_txxxyyz,aj_txxyyyz,aj_txyyyyz,aj_txxxxzz,aj_txxxyzz,
     & aj_txxyyzz,aj_txyyyzz,aj_txxxzzz,aj_txxyzzz,aj_txyyzzz,
     & aj_txxzzzz,aj_txyzzzz,aj_txzzzzz,aj_txxxxxxx,aj_txxxxxxy,
     & aj_txxxxxyy,aj_txxxxyyy,aj_txxxyyyy,aj_txxyyyyy,aj_txyyyyyy,
     & aj_txxxxxxz,aj_txxxxxyz,aj_txxxxyyz,aj_txxxyyyz,aj_txxyyyyz,
     & aj_txyyyyyz,aj_txxxxxzz,aj_txxxxyzz,aj_txxxyyzz,aj_txxyyyzz,
     & aj_txyyyyzz,aj_txxxxzzz,aj_txxxyzzz,aj_txxyyzzz,aj_txyyyzzz,
     & aj_txxxzzzz,aj_txxyzzzz,aj_txyyzzzz,aj_txxzzzzz,aj_txyzzzzz,
     & aj_txzzzzzz
             real aj_tyx,aj_tyy,aj_tyz,aj_tyxx,aj_tyxy,aj_tyyy,aj_tyxz,
     & aj_tyyz,aj_tyzz,aj_tyxxx,aj_tyxxy,aj_tyxyy,aj_tyyyy,aj_tyxxz,
     & aj_tyxyz,aj_tyyyz,aj_tyxzz,aj_tyyzz,aj_tyzzz,aj_tyxxxx,
     & aj_tyxxxy,aj_tyxxyy,aj_tyxyyy,aj_tyyyyy,aj_tyxxxz,aj_tyxxyz,
     & aj_tyxyyz,aj_tyyyyz,aj_tyxxzz,aj_tyxyzz,aj_tyyyzz,aj_tyxzzz,
     & aj_tyyzzz,aj_tyzzzz,aj_tyxxxxx,aj_tyxxxxy,aj_tyxxxyy,
     & aj_tyxxyyy,aj_tyxyyyy,aj_tyyyyyy,aj_tyxxxxz,aj_tyxxxyz,
     & aj_tyxxyyz,aj_tyxyyyz,aj_tyyyyyz,aj_tyxxxzz,aj_tyxxyzz,
     & aj_tyxyyzz,aj_tyyyyzz,aj_tyxxzzz,aj_tyxyzzz,aj_tyyyzzz,
     & aj_tyxzzzz,aj_tyyzzzz,aj_tyzzzzz,aj_tyxxxxxx,aj_tyxxxxxy,
     & aj_tyxxxxyy,aj_tyxxxyyy,aj_tyxxyyyy,aj_tyxyyyyy,aj_tyyyyyyy,
     & aj_tyxxxxxz,aj_tyxxxxyz,aj_tyxxxyyz,aj_tyxxyyyz,aj_tyxyyyyz,
     & aj_tyyyyyyz,aj_tyxxxxzz,aj_tyxxxyzz,aj_tyxxyyzz,aj_tyxyyyzz,
     & aj_tyyyyyzz,aj_tyxxxzzz,aj_tyxxyzzz,aj_tyxyyzzz,aj_tyyyyzzz,
     & aj_tyxxzzzz,aj_tyxyzzzz,aj_tyyyzzzz,aj_tyxzzzzz,aj_tyyzzzzz,
     & aj_tyzzzzzz
             real aj_tzx,aj_tzy,aj_tzz,aj_tzxx,aj_tzxy,aj_tzyy,aj_tzxz,
     & aj_tzyz,aj_tzzz,aj_tzxxx,aj_tzxxy,aj_tzxyy,aj_tzyyy,aj_tzxxz,
     & aj_tzxyz,aj_tzyyz,aj_tzxzz,aj_tzyzz,aj_tzzzz,aj_tzxxxx,
     & aj_tzxxxy,aj_tzxxyy,aj_tzxyyy,aj_tzyyyy,aj_tzxxxz,aj_tzxxyz,
     & aj_tzxyyz,aj_tzyyyz,aj_tzxxzz,aj_tzxyzz,aj_tzyyzz,aj_tzxzzz,
     & aj_tzyzzz,aj_tzzzzz,aj_tzxxxxx,aj_tzxxxxy,aj_tzxxxyy,
     & aj_tzxxyyy,aj_tzxyyyy,aj_tzyyyyy,aj_tzxxxxz,aj_tzxxxyz,
     & aj_tzxxyyz,aj_tzxyyyz,aj_tzyyyyz,aj_tzxxxzz,aj_tzxxyzz,
     & aj_tzxyyzz,aj_tzyyyzz,aj_tzxxzzz,aj_tzxyzzz,aj_tzyyzzz,
     & aj_tzxzzzz,aj_tzyzzzz,aj_tzzzzzz,aj_tzxxxxxx,aj_tzxxxxxy,
     & aj_tzxxxxyy,aj_tzxxxyyy,aj_tzxxyyyy,aj_tzxyyyyy,aj_tzyyyyyy,
     & aj_tzxxxxxz,aj_tzxxxxyz,aj_tzxxxyyz,aj_tzxxyyyz,aj_tzxyyyyz,
     & aj_tzyyyyyz,aj_tzxxxxzz,aj_tzxxxyzz,aj_tzxxyyzz,aj_tzxyyyzz,
     & aj_tzyyyyzz,aj_tzxxxzzz,aj_tzxxyzzz,aj_tzxyyzzz,aj_tzyyyzzz,
     & aj_tzxxzzzz,aj_tzxyzzzz,aj_tzyyzzzz,aj_tzxzzzzz,aj_tzyzzzzz,
     & aj_tzzzzzzz
      !      declareJacobianDerivativeVariables(aj_p1_,3)
      !      declareJacobianDerivativeVariables(aj_p2_,3)
            double precision t1,t14,t6
            integer i1s,i1e,i2s,i2e,i3s,i3e
            integer pc,uc,vc,wc,kc,sc,tc
            integer order,disc_approx
            logical is_periodic, is_dirichlet_bc, is_neumann_bc,
     & is_outflow_bc
            logical is_parallel,is_moving
            logical use_ad2,use_ad4
            integer index_range(0:1,0:2),dims(0:1,0:2),gir(0:1,0:2)
            integer debug,grid
            integer pde_model
            integer npghost
            integer processid
            double precision dr(0:max_dim-1),dx(0:max_dim-1)
            double precision dt
            double precision nu,kthermal
            double precision gravity(0:max_dim-1)
            double precision thermal_expansivity
            double precision advection_coefficient
            double precision ad21,ad22,ad41,ad42
            double precision adcBoussinesq
            logical is_rect, use_os_rxr,rhs_only
            logical is_penta, have_ghost_points, extrap_all_1
            integer isn(0:max_dim-1),is1,is2,is3
            integer ilo(0:max_dim-1),ilo1,ilo2,ilo3
            integer bc_range(0:1,0:1,0:2),side,bc_trange(0:1,0:1,0:2)
            integer i1,i2,i3,i1l,i2l,i3l,i1o,i2o,i3o
            integer i1p,i2p,i3p,i1m,i2m,i3m
            integer i1pp,i2pp,i3pp,i1mm,i2mm,i3mm
            integer id,id2,ic  !! loop variable over physical/parameter space dimension
            integer off
            double precision nu_eq,dri(0:max_dim-1),dxi(0:max_dim-1),
     & dto2,drid,dxid
            double precision uxnorm
      double precision px_coeff(-half_width:half_width)
      double precision pxx_coeff(-half_width:half_width)
      double precision dx_coeff(-half_width:half_width)
      double precision dxx_coeff(-half_width:half_width)
      double precision rx(-half_width:half_width,0:max_dim-1,0:max_dim-
     & 1) ! dr_i/dx_j
      double precision rxx(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dx^2_j
      double precision rxr(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dr_idx_j
      double precision rxs(0:max_dim-1,0:max_dim-1,0:max_dim-1)! d^2r_i/dr_jdx_k
      double precision b_ik(-half_width:half_width) !! this holds the variable pde coefficients at adjacent grid points
      integer io !! loop variable for looping over adjacent grid points in the stencil (i.e. from -half_width to half_width)

      !!!!!!!! extract parameters from ipar and rpar
            i1s = ipar(0)
            i1e = ipar(1)
            i2s = ipar(2)
            i2e = ipar(3)
            i3s = ipar(4)
            i3e = ipar(5)
            gir(0,0) = i1s
            gir(1,0) = i1e
            gir(0,1) = i2s
            gir(1,1) = i2e
            gir(0,2) = i3s
            gir(1,2) = i3e
            pc = ipar(6)
            uc = ipar(7)
            vc = ipar(8)
            wc = ipar(9)
            kc = ipar(10)
            sc = ipar(11)
            tc = ipar(12)
            grid = ipar(13)
            order = ipar(14)
            is_moving = ipar(15).ne.0
            disc_approx = ipar(16)
            is_rect = ipar(26).eq.1
            is_periodic = ipar(27).ne.0
            index_range(0,0) = ipar(38)
            index_range(1,0) = ipar(39)
            index_range(0,1) = ipar(40)
            index_range(1,1) = ipar(41)
            index_range(0,2) = ipar(42)
            index_range(1,2) = ipar(43)
            dims(0,0) = nd1a
            dims(1,0) = nd1b
            dims(0,1) = nd2a
            dims(1,1) = nd2b
            dims(0,2) = nd3a
            dims(1,2) = nd3b
            do side=0,1
               bc_range(side,0,0) = i1s
               bc_range(side,1,0) = i1e
               bc_range(side,0,1) = i2s
               bc_range(side,1,1) = i2e
               bc_range(side,0,2) = i3s
               bc_range(side,1,2) = i3e
               do id=0,max_dim-1
                  bc_trange(side,0,id) = bc_range(side,0,id)
                  bc_trange(side,0,id) = bc_range(side,1,id)
               enddo
            enddo
      !     here are the loop bounds for the boundary conditions
            bc_range(0,0,dir) = bc_range(0,0,dir)
            bc_range(0,1,dir) = bc_range(0,0,dir)
            bc_range(1,0,dir) = bc_range(1,1,dir)
            bc_range(1,1,dir) = bc_range(1,1,dir)
            debug = ipar(48)
            pde_model = ipar(49)
            use_ad2 = ipar(50).ne.0
            use_ad4 = ipar(51).ne.0
            is_parallel = ipar(52).eq.1
            npghost = ipar(54)
            rhs_only = ipar(55).ne.0
            processid = ipar(56)
            dr(0) = rpar(0)
            dr(1) = rpar(1)
            dr(2) = rpar(2)
            dx(0) = rpar(3)
            dx(1) = rpar(4)
            dx(2) = rpar(5)
            dt = rpar(6)
            nu = rpar(8)
            kthermal = rpar(9)
            gravity(0) = rpar(20)
            gravity(1) = rpar(21)
            gravity(2) = rpar(22)
            thermal_expansivity = rpar(23)
            advection_coefficient = rpar(24)
      ! *wdh* 2013/09/24      if ( .false. ) then
            if ( .true. ) then ! *wdh* 2013/09/24 try this
      !! effectively use backward euler for the artificial dissipation
            ad21 = 2d0*rpar(25)
            ad22 = 2d0*rpar(26)
            ad41 = 2d0*rpar(27)
            ad42 = 2d0*rpar(28)
            if ( .not.use_ad2 .or. mode.eq.solve_rhs ) then
               ad21 = 0d0
               ad22 = 0d0
            endif
            if ( .not. use_ad4 .or. mode.eq.solve_rhs ) then
               ad41 = 0d0
               ad42 = 0d0
            endif
            if ( mode.eq.solve_rhs) then
               use_ad4 = .false.
               use_ad2 = .false.
            endif
            else
               ad21 = rpar(25)
               ad22 = rpar(26)
               ad41 = rpar(27)
               ad42 = rpar(28)
               if ( .not.use_ad2 ) then
                  ad21 = 0d0
                  ad22 = 0d0
               endif
               if ( .not. use_ad4 )then
                  ad41 = 0d0
                  ad42 = 0d0
               endif
            endif
      !!!!!!!! setup additional local variables based on the data in ipar and rpar
      !! old way      is_penta = (order.eq.4 .and. disc_approx.eq.finite_difference).or.(order.gt.4 .and. disc_approx.eq.compact)
            is_penta = (order.gt.2 .and. disc_approx.eq.compact)
            if ( cc.eq.tc .and. pde_model.eq.BoussinesqModel ) then
               nu_eq = kthermal
               ! Set dissipation for the T equation *wdh* 2013/02/02
               adcBoussinesq = rpar(29)
               ! write(*,'("ins_factors: adcBoussinesq=",e12.2)') adcBoussinesq
               ad21=0.
               ad22=0.
               ad41=0.
               ad42=0.
               if ( use_ad2 ) then
                 ad21=adcBoussinesq
               end if
               if( use_ad4 )then
                 ad41=adcBoussinesq
               end if
            else
               nu_eq = nu
            endif
            dto2 = dt/2d0
            do id=0,max_dim-1
               dxi(id) = 1d0/dx(id)
               dri(id) = 1d0/dr(id)
               do io=-half_width,half_width
                  do id2=0,max_dim-1
                     rx(io,id,id2) = 0d0
                     rxx(io,id,id2) = 0d0
                     rxr(io,id,id2) = 0d0
                  enddo
               enddo
               do ic=0,max_dim-1
               do id2=0,max_dim-1
                  rxs(id,ic,id2) = 0d0
               enddo
               enddo
            enddo
            drid = dri(dir)
            dxid = dxi(dir)
            !!! initialize the metrics to the rectangular case
            aj_rx    = dr(0)/dx(0)
            aj_ry    = 0d0
            aj_sx    = 0d0
            aj_sy    = dr(1)/dx(1)
            if ( nd.eq.3 ) then
               aj_rz = 0d0
               aj_sz = 0d0
               aj_tx = 0d0
               aj_ty = 0d0
               aj_tz = dr(2)/dx(2)
            endif
            aj_rxx    = 0d0
            aj_sxx    = 0d0
            aj_txx    = 0d0
            aj_rxr    = 0d0
            aj_sxs    = 0d0
            aj_txt    = 0d0
            aj_ryy    = 0d0
            aj_syy    = 0d0
            aj_tyy    = 0d0
            aj_ryr    = 0d0
            aj_sys    = 0d0
            aj_tyt    = 0d0
            aj_rzz    = 0d0
            aj_szz    = 0d0
            aj_tzz    = 0d0
            aj_rzr    = 0d0
            aj_szs    = 0d0
            aj_tzt    = 0d0
            do io=-half_width,half_width
            rx( io,0,0) = aj_rx
            rxx(io,0,0) = aj_rxx
            rxr(io,0,0) = aj_rxr
            rx( io,1,0) = aj_sx
            rxx(io,1,0) = aj_sxx
            rxr(io,1,0) = aj_sxs
            rx( io,0,1) = aj_ry
            rxx(io,0,1) = aj_ryy
            rxr(io,0,1) = aj_ryr
            rx( io,1,1) = aj_sy
            rxx(io,1,1) = aj_syy
            rxr(io,1,1) = aj_sys
            if (nd.eq.3) then
               rx( io,0,2) = aj_rz
               rxx(io,0,2) = aj_rzz
               rxr(io,0,2) = aj_rzr
               rx( io,1,2) = aj_sz
               rxx(io,1,2) = aj_szz
               rxr(io,1,2) = aj_szs
               rx( io,2,0) = aj_tx
               rxx(io,2,0) = aj_txx
               rxr(io,2,0) = aj_txt
               rx( io,2,1) = aj_ty
               rxx(io,2,1) = aj_tyy
               rxr(io,2,1) = aj_tyt
               rx( io,2,2) = aj_tz
               rxx(io,2,2) = aj_tzz
               rxr(io,2,2) = aj_tzt
            endif
            enddo
            ! set the stencil offset to zero
            off = 0
            have_ghost_points = .true.
            extrap_all_1 = .true.
            use_os_rxr = .false.
      !! adjust dims for parallel ghost ghost boundaries
            if ( is_parallel ) then
               do side=0,1
                  do id=0,nd-1
                     if ( bc(side,id).ne.parallelBC ) then
                          dims(side,id) = dims(side,id) + npghost*(1-2*
     & side)
                     endif
                  enddo
               enddo
            endif                     ! is_parallel

            ! *wdh* 2012/04/06 if ( debug.ge.3 .and. processid.eq.0 ) then
            if ( debug.ge.4 .and. processid.le.0 ) then
               print '(a20)',"INSIDE ins_rrfactor"
               print '("         nd : ",i3)',nd
               print '("  nd1a,nd1b : ",i4,2x,i4)',nd1a,nd1b
               print '("  nd2a,nd2b : ",i4,2x,i4)',nd2a,nd2b
               print '("  nd3a,nd3b : ",i4,2x,i4)',nd3a,nd3b
               print '("  nd4a,nd4b : ",i4,2x,i4)',nd4a,nd4b
               print '("    i1s,i1e : ",i4,2x,i4)',i1s,i1e
               print '("    i2s,i2e : ",i4,2x,i4)',i2s,i2e
               print '("    i3s,i3e : ",i4,2x,i4)',i3s,i3e
               print '("index_range0: ",i4,2x,i4)',index_range(0,0),
     & index_range(1,0)
               print '("index_range1: ",i4,2x,i4)',index_range(0,1),
     & index_range(1,1)
               print '("index_range2: ",i4,2x,i4)',index_range(0,2),
     & index_range(1,2)
               print '("dims0: ",i4,2x,i4)',dims(0,0),dims(1,0)
               print '("dims1: ",i4,2x,i4)',dims(0,1),dims(1,1)
               print '("dims2: ",i4,2x,i4)',dims(0,2),dims(1,2)
               print '("gir0: ",i4,2x,i4)',gir(0,0),gir(1,0)
               print '("gir1: ",i4,2x,i4)',gir(0,1),gir(1,1)
               print '("gir2: ",i4,2x,i4)',gir(0,2),gir(1,2)
               print '("       dx(0): ",f10.7)',dx(0)
               print '("       dx(1): ",f10.7)',dx(1)
               print '("       dx(2): ",f10.7)',dx(2)
               print '("       dr(0): ",f10.7)',dr(0)
               print '("       dr(1): ",f10.7)',dr(1)
               print '("       dr(2): ",f10.7)',dr(2)
               print '("          dt: ",f10.7)',dt
               print '("       grid : ",i5)',grid
               print '("      order : ",i2)',order
               print '("      approx: ",i2)',disc_approx
               print '("  is_moving : ",l)',is_moving
               print '("    is_rect : ",l)',is_rect
               print '(" is_periodic: ",l)',is_periodic
               print '("    is_penta: ",l)',is_penta
               print '(" is_parallel: ",l)',is_parallel
               print '("       mode : ",i5)',mode
               print '("        dir : ",i5)',dir
               print '("         cc : ",i5)',cc
               print '("       nu_eq: ",f10.7)',nu_eq
            endif ! debug.gt.0

      call get_op_coeffs(half_width,2,order,disc_approx,
     &                   pxx_coeff,dxx_coeff)

            isn(0) = 0
            isn(1) = 0
            isn(2) = 0
            ilo(0) = 0
            ilo(1) = 0
            ilo(2) = 0
            isn(dir) = 1
            is1 = isn(0)
            is2 = isn(1)
            is3 = isn(2)
      !      if (.not.is_periodic) ilo(dir) = isn(dir)
            ilo1 = ilo(0)
            ilo2 = ilo(1)
            ilo3 = ilo(2)

!      do i3l=i3s,i3e
!      do i2l=i2s,i2e
!      do i1l=i1s,i1e
      do i3l=index_range(0,2),index_range(1,2)
      do i2l=index_range(0,1),index_range(1,1)
      do i1l=index_range(0,0),index_range(1,0)

            i1mm = i1l-2*is1
            i2mm = i2l-2*is2
            i3mm = i3l-2*is3
            i1m = i1l-is1
            i2m = i2l-is2
            i3m = i3l-is3
            i1  = i1l
            i2  = i2l
            i3  = i3l
            i1p = i1l+is1
            i2p = i2l+is2
            i3p = i3l+is3
            i1pp = i1l+2*is1
            i2pp = i2l+2*is2
            i3pp = i3l+2*is3
      if ( mask(i1,i2,i3).gt.0 ) then

               !!!! -- evaluate the jacobian derivatives we need to the order we require
               !!!! -- place the derivatives at each adjacent node into the arrays 
               !!!!    rx,rxr and rxx for later use in loops over the difference stencils
               !!!! -- we assume the grid is at least 2D
               !!!! -- currently we need only up to the second derivative in the mapping
               if ( .not. is_rect ) then
               do io=-half_width,half_width ! loop over the stencil and fill the small arrays of metrics at adjacent grid points
                        i1o = i1l + (io-off)*is1
                        i2o = i2l + (io-off)*is2
                        i3o = i3l + (io-off)*is3
                  if ( .not. use_os_rxr ) then
                  if ( nd.eq.2 ) then
                     if ( order.eq.2 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-1,i2o,i3o,0,0)+rsxy(i1o+1,
     & i2o,i3o,0,0))/(2.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-1,i3o,0,0)+rsxy(i1o,
     & i2o+1,i3o,0,0))/(2.*dr(1))
                        aj_rxrr = (rsxy(i1o-1,i2o,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o+1,i2o,i3o,0,0))/(dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,0)+rsxy(
     & i1o-1,i2o+1,i3o,0,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,0)+
     & rsxy(i1o+1,i2o+1,i3o,0,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_rxss = (rsxy(i1o,i2o-1,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o+1,i3o,0,0))/(dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-1,i2o,i3o,1,0)+rsxy(i1o+1,
     & i2o,i3o,1,0))/(2.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-1,i3o,1,0)+rsxy(i1o,
     & i2o+1,i3o,1,0))/(2.*dr(1))
                        aj_sxrr = (rsxy(i1o-1,i2o,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o+1,i2o,i3o,1,0))/(dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,0)+rsxy(
     & i1o-1,i2o+1,i3o,1,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,0)+
     & rsxy(i1o+1,i2o+1,i3o,1,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_sxss = (rsxy(i1o,i2o-1,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o+1,i3o,1,0))/(dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-1,i2o,i3o,0,1)+rsxy(i1o+1,
     & i2o,i3o,0,1))/(2.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-1,i3o,0,1)+rsxy(i1o,
     & i2o+1,i3o,0,1))/(2.*dr(1))
                        aj_ryrr = (rsxy(i1o-1,i2o,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o+1,i2o,i3o,0,1))/(dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,1)+rsxy(
     & i1o-1,i2o+1,i3o,0,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,1)+
     & rsxy(i1o+1,i2o+1,i3o,0,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_ryss = (rsxy(i1o,i2o-1,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o+1,i3o,0,1))/(dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-1,i2o,i3o,1,1)+rsxy(i1o+1,
     & i2o,i3o,1,1))/(2.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-1,i3o,1,1)+rsxy(i1o,
     & i2o+1,i3o,1,1))/(2.*dr(1))
                        aj_syrr = (rsxy(i1o-1,i2o,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o+1,i2o,i3o,1,1))/(dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,1)+rsxy(
     & i1o-1,i2o+1,i3o,1,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,1)+
     & rsxy(i1o+1,i2o+1,i3o,1,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_syss = (rsxy(i1o,i2o-1,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o+1,i3o,1,1))/(dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.4) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (rsxy(i1o-2,i2o,i3o,0,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+8.*rsxy(i1o+1,i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,
     & 0))/(12.*dr(0))
                        aj_rxs = (rsxy(i1o,i2o-2,i3o,0,0)-8.*rsxy(i1o,
     & i2o-1,i3o,0,0)+8.*rsxy(i1o,i2o+1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,
     & 0))/(12.*dr(1))
                        aj_rxrr = (-rsxy(i1o-2,i2o,i3o,0,0)+16.*rsxy(
     & i1o-1,i2o,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o+1,
     & i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,0))/(12.*dr(0)**2)
                        aj_rxrs = ((rsxy(i1o-2,i2o-2,i3o,0,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,0)+8.*rsxy(i1o-2,i2o+1,i3o,0,0)-rsxy(i1o-2,
     & i2o+2,i3o,0,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,0)+8.*rsxy(i1o-1,i2o+1,i3o,0,0)-rsxy(
     & i1o-1,i2o+2,i3o,0,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,0)+8.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & rsxy(i1o+1,i2o+2,i3o,0,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,0,0)+8.*rsxy(i1o+2,i2o+1,i3o,0,0)-
     & rsxy(i1o+2,i2o+2,i3o,0,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_rxss = (-rsxy(i1o,i2o-2,i3o,0,0)+16.*rsxy(
     & i1o,i2o-1,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,0))/(12.*dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (rsxy(i1o-2,i2o,i3o,1,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+8.*rsxy(i1o+1,i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,
     & 0))/(12.*dr(0))
                        aj_sxs = (rsxy(i1o,i2o-2,i3o,1,0)-8.*rsxy(i1o,
     & i2o-1,i3o,1,0)+8.*rsxy(i1o,i2o+1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,
     & 0))/(12.*dr(1))
                        aj_sxrr = (-rsxy(i1o-2,i2o,i3o,1,0)+16.*rsxy(
     & i1o-1,i2o,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o+1,
     & i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,0))/(12.*dr(0)**2)
                        aj_sxrs = ((rsxy(i1o-2,i2o-2,i3o,1,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,0)+8.*rsxy(i1o-2,i2o+1,i3o,1,0)-rsxy(i1o-2,
     & i2o+2,i3o,1,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,0)+8.*rsxy(i1o-1,i2o+1,i3o,1,0)-rsxy(
     & i1o-1,i2o+2,i3o,1,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,0)+8.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & rsxy(i1o+1,i2o+2,i3o,1,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,1,0)+8.*rsxy(i1o+2,i2o+1,i3o,1,0)-
     & rsxy(i1o+2,i2o+2,i3o,1,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_sxss = (-rsxy(i1o,i2o-2,i3o,1,0)+16.*rsxy(
     & i1o,i2o-1,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,0))/(12.*dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (rsxy(i1o-2,i2o,i3o,0,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+8.*rsxy(i1o+1,i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,
     & 1))/(12.*dr(0))
                        aj_rys = (rsxy(i1o,i2o-2,i3o,0,1)-8.*rsxy(i1o,
     & i2o-1,i3o,0,1)+8.*rsxy(i1o,i2o+1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,
     & 1))/(12.*dr(1))
                        aj_ryrr = (-rsxy(i1o-2,i2o,i3o,0,1)+16.*rsxy(
     & i1o-1,i2o,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o+1,
     & i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,1))/(12.*dr(0)**2)
                        aj_ryrs = ((rsxy(i1o-2,i2o-2,i3o,0,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,1)+8.*rsxy(i1o-2,i2o+1,i3o,0,1)-rsxy(i1o-2,
     & i2o+2,i3o,0,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,1)+8.*rsxy(i1o-1,i2o+1,i3o,0,1)-rsxy(
     & i1o-1,i2o+2,i3o,0,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,1)+8.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & rsxy(i1o+1,i2o+2,i3o,0,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,0,1)+8.*rsxy(i1o+2,i2o+1,i3o,0,1)-
     & rsxy(i1o+2,i2o+2,i3o,0,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_ryss = (-rsxy(i1o,i2o-2,i3o,0,1)+16.*rsxy(
     & i1o,i2o-1,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,1))/(12.*dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (rsxy(i1o-2,i2o,i3o,1,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+8.*rsxy(i1o+1,i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,
     & 1))/(12.*dr(0))
                        aj_sys = (rsxy(i1o,i2o-2,i3o,1,1)-8.*rsxy(i1o,
     & i2o-1,i3o,1,1)+8.*rsxy(i1o,i2o+1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,
     & 1))/(12.*dr(1))
                        aj_syrr = (-rsxy(i1o-2,i2o,i3o,1,1)+16.*rsxy(
     & i1o-1,i2o,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o+1,
     & i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,1))/(12.*dr(0)**2)
                        aj_syrs = ((rsxy(i1o-2,i2o-2,i3o,1,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,1)+8.*rsxy(i1o-2,i2o+1,i3o,1,1)-rsxy(i1o-2,
     & i2o+2,i3o,1,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,1)+8.*rsxy(i1o-1,i2o+1,i3o,1,1)-rsxy(
     & i1o-1,i2o+2,i3o,1,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,1)+8.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & rsxy(i1o+1,i2o+2,i3o,1,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,1,1)+8.*rsxy(i1o+2,i2o+1,i3o,1,1)-
     & rsxy(i1o+2,i2o+2,i3o,1,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_syss = (-rsxy(i1o,i2o-2,i3o,1,1)+16.*rsxy(
     & i1o,i2o-1,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,1))/(12.*dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.6) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-3,i2o,i3o,0,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,0)-45.*rsxy(i1o-1,i2o,i3o,0,0)+45.*rsxy(i1o+1,i2o,
     & i3o,0,0)-9.*rsxy(i1o+2,i2o,i3o,0,0)+rsxy(i1o+3,i2o,i3o,0,0))/(
     & 60.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-3,i3o,0,0)+9.*rsxy(i1o,
     & i2o-2,i3o,0,0)-45.*rsxy(i1o,i2o-1,i3o,0,0)+45.*rsxy(i1o,i2o+1,
     & i3o,0,0)-9.*rsxy(i1o,i2o+2,i3o,0,0)+rsxy(i1o,i2o+3,i3o,0,0))/(
     & 60.*dr(1))
                        aj_rxrr = (2.*rsxy(i1o-3,i2o,i3o,0,0)-27.*rsxy(
     & i1o-2,i2o,i3o,0,0)+270.*rsxy(i1o-1,i2o,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o+1,i2o,i3o,0,0)-27.*rsxy(i1o+2,i2o,
     & i3o,0,0)+2.*rsxy(i1o+3,i2o,i3o,0,0))/(180.*dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,0)-45.*rsxy(i1o-3,i2o-1,i3o,0,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,0)-9.*rsxy(i1o-3,i2o+2,i3o,0,0)+rsxy(
     & i1o-3,i2o+3,i3o,0,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,0,0)-45.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,0)-9.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & rsxy(i1o-2,i2o+3,i3o,0,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o-1,i2o-2,i3o,0,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o-1,i2o+1,i3o,0,0)-9.*rsxy(i1o-1,i2o+2,i3o,0,0)
     & +rsxy(i1o-1,i2o+3,i3o,0,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+1,i2o-2,i3o,0,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+1,i2o+1,i3o,0,0)-9.*rsxy(i1o+1,i2o+2,i3o,0,0)
     & +rsxy(i1o+1,i2o+3,i3o,0,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+2,i2o-2,i3o,0,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+2,i2o+1,i3o,0,0)-9.*rsxy(i1o+2,i2o+2,i3o,0,0)
     & +rsxy(i1o+2,i2o+3,i3o,0,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,0)+9.*rsxy(i1o+3,i2o-2,i3o,0,0)-45.*rsxy(i1o+3,i2o-1,i3o,0,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,0)-9.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & rsxy(i1o+3,i2o+3,i3o,0,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_rxss = (2.*rsxy(i1o,i2o-3,i3o,0,0)-27.*rsxy(
     & i1o,i2o-2,i3o,0,0)+270.*rsxy(i1o,i2o-1,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o+1,i3o,0,0)-27.*rsxy(i1o,i2o+2,
     & i3o,0,0)+2.*rsxy(i1o,i2o+3,i3o,0,0))/(180.*dr(1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-3,i2o,i3o,1,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,0)-45.*rsxy(i1o-1,i2o,i3o,1,0)+45.*rsxy(i1o+1,i2o,
     & i3o,1,0)-9.*rsxy(i1o+2,i2o,i3o,1,0)+rsxy(i1o+3,i2o,i3o,1,0))/(
     & 60.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-3,i3o,1,0)+9.*rsxy(i1o,
     & i2o-2,i3o,1,0)-45.*rsxy(i1o,i2o-1,i3o,1,0)+45.*rsxy(i1o,i2o+1,
     & i3o,1,0)-9.*rsxy(i1o,i2o+2,i3o,1,0)+rsxy(i1o,i2o+3,i3o,1,0))/(
     & 60.*dr(1))
                        aj_sxrr = (2.*rsxy(i1o-3,i2o,i3o,1,0)-27.*rsxy(
     & i1o-2,i2o,i3o,1,0)+270.*rsxy(i1o-1,i2o,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o+1,i2o,i3o,1,0)-27.*rsxy(i1o+2,i2o,
     & i3o,1,0)+2.*rsxy(i1o+3,i2o,i3o,1,0))/(180.*dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,0)-45.*rsxy(i1o-3,i2o-1,i3o,1,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,0)-9.*rsxy(i1o-3,i2o+2,i3o,1,0)+rsxy(
     & i1o-3,i2o+3,i3o,1,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,1,0)-45.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,0)-9.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & rsxy(i1o-2,i2o+3,i3o,1,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o-1,i2o-2,i3o,1,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o-1,i2o+1,i3o,1,0)-9.*rsxy(i1o-1,i2o+2,i3o,1,0)
     & +rsxy(i1o-1,i2o+3,i3o,1,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+1,i2o-2,i3o,1,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+1,i2o+1,i3o,1,0)-9.*rsxy(i1o+1,i2o+2,i3o,1,0)
     & +rsxy(i1o+1,i2o+3,i3o,1,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+2,i2o-2,i3o,1,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+2,i2o+1,i3o,1,0)-9.*rsxy(i1o+2,i2o+2,i3o,1,0)
     & +rsxy(i1o+2,i2o+3,i3o,1,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,0)+9.*rsxy(i1o+3,i2o-2,i3o,1,0)-45.*rsxy(i1o+3,i2o-1,i3o,1,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,0)-9.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & rsxy(i1o+3,i2o+3,i3o,1,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_sxss = (2.*rsxy(i1o,i2o-3,i3o,1,0)-27.*rsxy(
     & i1o,i2o-2,i3o,1,0)+270.*rsxy(i1o,i2o-1,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o+1,i3o,1,0)-27.*rsxy(i1o,i2o+2,
     & i3o,1,0)+2.*rsxy(i1o,i2o+3,i3o,1,0))/(180.*dr(1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-3,i2o,i3o,0,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,1)-45.*rsxy(i1o-1,i2o,i3o,0,1)+45.*rsxy(i1o+1,i2o,
     & i3o,0,1)-9.*rsxy(i1o+2,i2o,i3o,0,1)+rsxy(i1o+3,i2o,i3o,0,1))/(
     & 60.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-3,i3o,0,1)+9.*rsxy(i1o,
     & i2o-2,i3o,0,1)-45.*rsxy(i1o,i2o-1,i3o,0,1)+45.*rsxy(i1o,i2o+1,
     & i3o,0,1)-9.*rsxy(i1o,i2o+2,i3o,0,1)+rsxy(i1o,i2o+3,i3o,0,1))/(
     & 60.*dr(1))
                        aj_ryrr = (2.*rsxy(i1o-3,i2o,i3o,0,1)-27.*rsxy(
     & i1o-2,i2o,i3o,0,1)+270.*rsxy(i1o-1,i2o,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o+1,i2o,i3o,0,1)-27.*rsxy(i1o+2,i2o,
     & i3o,0,1)+2.*rsxy(i1o+3,i2o,i3o,0,1))/(180.*dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,1)-45.*rsxy(i1o-3,i2o-1,i3o,0,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,1)-9.*rsxy(i1o-3,i2o+2,i3o,0,1)+rsxy(
     & i1o-3,i2o+3,i3o,0,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,0,1)-45.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,1)-9.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & rsxy(i1o-2,i2o+3,i3o,0,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o-1,i2o-2,i3o,0,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o-1,i2o+1,i3o,0,1)-9.*rsxy(i1o-1,i2o+2,i3o,0,1)
     & +rsxy(i1o-1,i2o+3,i3o,0,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+1,i2o-2,i3o,0,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+1,i2o+1,i3o,0,1)-9.*rsxy(i1o+1,i2o+2,i3o,0,1)
     & +rsxy(i1o+1,i2o+3,i3o,0,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+2,i2o-2,i3o,0,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+2,i2o+1,i3o,0,1)-9.*rsxy(i1o+2,i2o+2,i3o,0,1)
     & +rsxy(i1o+2,i2o+3,i3o,0,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,1)+9.*rsxy(i1o+3,i2o-2,i3o,0,1)-45.*rsxy(i1o+3,i2o-1,i3o,0,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,1)-9.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & rsxy(i1o+3,i2o+3,i3o,0,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_ryss = (2.*rsxy(i1o,i2o-3,i3o,0,1)-27.*rsxy(
     & i1o,i2o-2,i3o,0,1)+270.*rsxy(i1o,i2o-1,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o+1,i3o,0,1)-27.*rsxy(i1o,i2o+2,
     & i3o,0,1)+2.*rsxy(i1o,i2o+3,i3o,0,1))/(180.*dr(1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-3,i2o,i3o,1,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,1)-45.*rsxy(i1o-1,i2o,i3o,1,1)+45.*rsxy(i1o+1,i2o,
     & i3o,1,1)-9.*rsxy(i1o+2,i2o,i3o,1,1)+rsxy(i1o+3,i2o,i3o,1,1))/(
     & 60.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-3,i3o,1,1)+9.*rsxy(i1o,
     & i2o-2,i3o,1,1)-45.*rsxy(i1o,i2o-1,i3o,1,1)+45.*rsxy(i1o,i2o+1,
     & i3o,1,1)-9.*rsxy(i1o,i2o+2,i3o,1,1)+rsxy(i1o,i2o+3,i3o,1,1))/(
     & 60.*dr(1))
                        aj_syrr = (2.*rsxy(i1o-3,i2o,i3o,1,1)-27.*rsxy(
     & i1o-2,i2o,i3o,1,1)+270.*rsxy(i1o-1,i2o,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o+1,i2o,i3o,1,1)-27.*rsxy(i1o+2,i2o,
     & i3o,1,1)+2.*rsxy(i1o+3,i2o,i3o,1,1))/(180.*dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,1)-45.*rsxy(i1o-3,i2o-1,i3o,1,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,1)-9.*rsxy(i1o-3,i2o+2,i3o,1,1)+rsxy(
     & i1o-3,i2o+3,i3o,1,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,1,1)-45.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,1)-9.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & rsxy(i1o-2,i2o+3,i3o,1,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o-1,i2o-2,i3o,1,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o-1,i2o+1,i3o,1,1)-9.*rsxy(i1o-1,i2o+2,i3o,1,1)
     & +rsxy(i1o-1,i2o+3,i3o,1,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+1,i2o-2,i3o,1,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+1,i2o+1,i3o,1,1)-9.*rsxy(i1o+1,i2o+2,i3o,1,1)
     & +rsxy(i1o+1,i2o+3,i3o,1,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+2,i2o-2,i3o,1,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+2,i2o+1,i3o,1,1)-9.*rsxy(i1o+2,i2o+2,i3o,1,1)
     & +rsxy(i1o+2,i2o+3,i3o,1,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,1)+9.*rsxy(i1o+3,i2o-2,i3o,1,1)-45.*rsxy(i1o+3,i2o-1,i3o,1,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,1)-9.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & rsxy(i1o+3,i2o+3,i3o,1,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_syss = (2.*rsxy(i1o,i2o-3,i3o,1,1)-27.*rsxy(
     & i1o,i2o-2,i3o,1,1)+270.*rsxy(i1o,i2o-1,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o+1,i3o,1,1)-27.*rsxy(i1o,i2o+2,
     & i3o,1,1)+2.*rsxy(i1o,i2o+3,i3o,1,1))/(180.*dr(1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     else if (order.eq.8) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (3.*rsxy(i1o-4,i2o,i3o,0,0)-32.*rsxy(
     & i1o-3,i2o,i3o,0,0)+168.*rsxy(i1o-2,i2o,i3o,0,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+672.*rsxy(i1o+1,i2o,i3o,0,0)-168.*rsxy(i1o+2,
     & i2o,i3o,0,0)+32.*rsxy(i1o+3,i2o,i3o,0,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,0))/(840.*dr(0))
                        aj_rxs = (3.*rsxy(i1o,i2o-4,i3o,0,0)-32.*rsxy(
     & i1o,i2o-3,i3o,0,0)+168.*rsxy(i1o,i2o-2,i3o,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o,i2o+1,i3o,0,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,0)+32.*rsxy(i1o,i2o+3,i3o,0,0)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 0))/(840.*dr(1))
                        aj_rxrr = (-9.*rsxy(i1o-4,i2o,i3o,0,0)+128.*
     & rsxy(i1o-3,i2o,i3o,0,0)-1008.*rsxy(i1o-2,i2o,i3o,0,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,0)-1008.*rsxy(i1o+2,i2o,i3o,0,0)+128.*
     & rsxy(i1o+3,i2o,i3o,0,0)-9.*rsxy(i1o+4,i2o,i3o,0,0))/(5040.*dr(
     & 0)**2)
                        aj_rxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,0)+168.*rsxy(i1o-4,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,0)+672.*rsxy(i1o-4,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,0)+32.*rsxy(i1o-4,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o-3,i2o-3,i3o,0,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o-3,i2o-1,i3o,0,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o-3,i2o+2,i3o,0,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o-3,i2o+4,i3o,0,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,0)-32.*rsxy(i1o-2,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,0)-672.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,0)-168.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,0)-3.*rsxy(i1o-2,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o-1,i2o-2,i3o,0,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o-1,i2o+1,i3o,0,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o-1,i2o+3,i3o,0,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,0)+168.*rsxy(i1o+1,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,0)+672.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,0)+32.*rsxy(i1o+1,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o+2,i2o-3,i3o,0,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o+2,i2o-1,i3o,0,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o+2,i2o+2,i3o,0,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o+2,i2o+4,i3o,0,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,0)-32.*rsxy(i1o+3,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,0)-672.*rsxy(i1o+3,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,0)-168.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,0)-3.*rsxy(i1o+3,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o+4,i2o-2,i3o,0,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o+4,i2o+1,i3o,0,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o+4,i2o+3,i3o,0,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_rxss = (-9.*rsxy(i1o,i2o-4,i3o,0,0)+128.*
     & rsxy(i1o,i2o-3,i3o,0,0)-1008.*rsxy(i1o,i2o-2,i3o,0,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,0)-1008.*rsxy(i1o,i2o+2,i3o,0,0)+128.*
     & rsxy(i1o,i2o+3,i3o,0,0)-9.*rsxy(i1o,i2o+4,i3o,0,0))/(5040.*dr(
     & 1)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (3.*rsxy(i1o-4,i2o,i3o,1,0)-32.*rsxy(
     & i1o-3,i2o,i3o,1,0)+168.*rsxy(i1o-2,i2o,i3o,1,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+672.*rsxy(i1o+1,i2o,i3o,1,0)-168.*rsxy(i1o+2,
     & i2o,i3o,1,0)+32.*rsxy(i1o+3,i2o,i3o,1,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,0))/(840.*dr(0))
                        aj_sxs = (3.*rsxy(i1o,i2o-4,i3o,1,0)-32.*rsxy(
     & i1o,i2o-3,i3o,1,0)+168.*rsxy(i1o,i2o-2,i3o,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o,i2o+1,i3o,1,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,0)+32.*rsxy(i1o,i2o+3,i3o,1,0)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 0))/(840.*dr(1))
                        aj_sxrr = (-9.*rsxy(i1o-4,i2o,i3o,1,0)+128.*
     & rsxy(i1o-3,i2o,i3o,1,0)-1008.*rsxy(i1o-2,i2o,i3o,1,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,0)-1008.*rsxy(i1o+2,i2o,i3o,1,0)+128.*
     & rsxy(i1o+3,i2o,i3o,1,0)-9.*rsxy(i1o+4,i2o,i3o,1,0))/(5040.*dr(
     & 0)**2)
                        aj_sxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,0)+168.*rsxy(i1o-4,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,0)+672.*rsxy(i1o-4,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,0)+32.*rsxy(i1o-4,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o-3,i2o-3,i3o,1,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o-3,i2o-1,i3o,1,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o-3,i2o+2,i3o,1,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o-3,i2o+4,i3o,1,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,0)-32.*rsxy(i1o-2,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,0)-672.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,0)-168.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,0)-3.*rsxy(i1o-2,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o-1,i2o-2,i3o,1,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o-1,i2o+1,i3o,1,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o-1,i2o+3,i3o,1,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,0)+168.*rsxy(i1o+1,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,0)+672.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,0)+32.*rsxy(i1o+1,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o+2,i2o-3,i3o,1,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o+2,i2o-1,i3o,1,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o+2,i2o+2,i3o,1,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o+2,i2o+4,i3o,1,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,0)-32.*rsxy(i1o+3,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,0)-672.*rsxy(i1o+3,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,0)-168.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,0)-3.*rsxy(i1o+3,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o+4,i2o-2,i3o,1,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o+4,i2o+1,i3o,1,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o+4,i2o+3,i3o,1,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_sxss = (-9.*rsxy(i1o,i2o-4,i3o,1,0)+128.*
     & rsxy(i1o,i2o-3,i3o,1,0)-1008.*rsxy(i1o,i2o-2,i3o,1,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,0)-1008.*rsxy(i1o,i2o+2,i3o,1,0)+128.*
     & rsxy(i1o,i2o+3,i3o,1,0)-9.*rsxy(i1o,i2o+4,i3o,1,0))/(5040.*dr(
     & 1)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (3.*rsxy(i1o-4,i2o,i3o,0,1)-32.*rsxy(
     & i1o-3,i2o,i3o,0,1)+168.*rsxy(i1o-2,i2o,i3o,0,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+672.*rsxy(i1o+1,i2o,i3o,0,1)-168.*rsxy(i1o+2,
     & i2o,i3o,0,1)+32.*rsxy(i1o+3,i2o,i3o,0,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,1))/(840.*dr(0))
                        aj_rys = (3.*rsxy(i1o,i2o-4,i3o,0,1)-32.*rsxy(
     & i1o,i2o-3,i3o,0,1)+168.*rsxy(i1o,i2o-2,i3o,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o,i2o+1,i3o,0,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,1)+32.*rsxy(i1o,i2o+3,i3o,0,1)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 1))/(840.*dr(1))
                        aj_ryrr = (-9.*rsxy(i1o-4,i2o,i3o,0,1)+128.*
     & rsxy(i1o-3,i2o,i3o,0,1)-1008.*rsxy(i1o-2,i2o,i3o,0,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,1)-1008.*rsxy(i1o+2,i2o,i3o,0,1)+128.*
     & rsxy(i1o+3,i2o,i3o,0,1)-9.*rsxy(i1o+4,i2o,i3o,0,1))/(5040.*dr(
     & 0)**2)
                        aj_ryrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,1)+168.*rsxy(i1o-4,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,1)+672.*rsxy(i1o-4,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,1)+32.*rsxy(i1o-4,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o-3,i2o-3,i3o,0,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o-3,i2o-1,i3o,0,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o-3,i2o+2,i3o,0,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o-3,i2o+4,i3o,0,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,1)-32.*rsxy(i1o-2,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,1)-672.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,1)-168.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,1)-3.*rsxy(i1o-2,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o-1,i2o-2,i3o,0,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o-1,i2o+1,i3o,0,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o-1,i2o+3,i3o,0,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,1)+168.*rsxy(i1o+1,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,1)+672.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,1)+32.*rsxy(i1o+1,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o+2,i2o-3,i3o,0,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o+2,i2o-1,i3o,0,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o+2,i2o+2,i3o,0,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o+2,i2o+4,i3o,0,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,1)-32.*rsxy(i1o+3,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,1)-672.*rsxy(i1o+3,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,1)-168.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,1)-3.*rsxy(i1o+3,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o+4,i2o-2,i3o,0,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o+4,i2o+1,i3o,0,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o+4,i2o+3,i3o,0,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_ryss = (-9.*rsxy(i1o,i2o-4,i3o,0,1)+128.*
     & rsxy(i1o,i2o-3,i3o,0,1)-1008.*rsxy(i1o,i2o-2,i3o,0,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,1)-1008.*rsxy(i1o,i2o+2,i3o,0,1)+128.*
     & rsxy(i1o,i2o+3,i3o,0,1)-9.*rsxy(i1o,i2o+4,i3o,0,1))/(5040.*dr(
     & 1)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (3.*rsxy(i1o-4,i2o,i3o,1,1)-32.*rsxy(
     & i1o-3,i2o,i3o,1,1)+168.*rsxy(i1o-2,i2o,i3o,1,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+672.*rsxy(i1o+1,i2o,i3o,1,1)-168.*rsxy(i1o+2,
     & i2o,i3o,1,1)+32.*rsxy(i1o+3,i2o,i3o,1,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,1))/(840.*dr(0))
                        aj_sys = (3.*rsxy(i1o,i2o-4,i3o,1,1)-32.*rsxy(
     & i1o,i2o-3,i3o,1,1)+168.*rsxy(i1o,i2o-2,i3o,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o,i2o+1,i3o,1,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,1)+32.*rsxy(i1o,i2o+3,i3o,1,1)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 1))/(840.*dr(1))
                        aj_syrr = (-9.*rsxy(i1o-4,i2o,i3o,1,1)+128.*
     & rsxy(i1o-3,i2o,i3o,1,1)-1008.*rsxy(i1o-2,i2o,i3o,1,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,1)-1008.*rsxy(i1o+2,i2o,i3o,1,1)+128.*
     & rsxy(i1o+3,i2o,i3o,1,1)-9.*rsxy(i1o+4,i2o,i3o,1,1))/(5040.*dr(
     & 0)**2)
                        aj_syrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,1)+168.*rsxy(i1o-4,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,1)+672.*rsxy(i1o-4,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,1)+32.*rsxy(i1o-4,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o-3,i2o-3,i3o,1,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o-3,i2o-1,i3o,1,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o-3,i2o+2,i3o,1,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o-3,i2o+4,i3o,1,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,1)-32.*rsxy(i1o-2,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,1)-672.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,1)-168.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,1)-3.*rsxy(i1o-2,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o-1,i2o-2,i3o,1,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o-1,i2o+1,i3o,1,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o-1,i2o+3,i3o,1,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,1)+168.*rsxy(i1o+1,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,1)+672.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,1)+32.*rsxy(i1o+1,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o+2,i2o-3,i3o,1,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o+2,i2o-1,i3o,1,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o+2,i2o+2,i3o,1,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o+2,i2o+4,i3o,1,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,1)-32.*rsxy(i1o+3,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,1)-672.*rsxy(i1o+3,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,1)-168.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,1)-3.*rsxy(i1o+3,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o+4,i2o-2,i3o,1,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o+4,i2o+1,i3o,1,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o+4,i2o+3,i3o,1,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_syss = (-9.*rsxy(i1o,i2o-4,i3o,1,1)+128.*
     & rsxy(i1o,i2o-3,i3o,1,1)-1008.*rsxy(i1o,i2o-2,i3o,1,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,1)-1008.*rsxy(i1o,i2o+2,i3o,1,1)+128.*
     & rsxy(i1o,i2o+3,i3o,1,1)-9.*rsxy(i1o,i2o+4,i3o,1,1))/(5040.*dr(
     & 1)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+aj_rxx*aj_rxr+aj_sxx*aj_rxs
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+aj_rxy*aj_rxr+aj_sxy*
     & aj_rxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+aj_ryy*aj_rxr+aj_syy*aj_rxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+aj_rxx*aj_sxr+aj_sxx*aj_sxs
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+aj_rxy*aj_sxr+aj_sxy*
     & aj_sxs
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+aj_ryy*aj_sxr+aj_syy*aj_sxs
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+aj_rxx*aj_ryr+aj_sxx*aj_rys
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+aj_rxy*aj_ryr+aj_sxy*
     & aj_rys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+aj_ryy*aj_ryr+aj_syy*aj_rys
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+aj_rxx*aj_syr+aj_sxx*aj_sys
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+aj_rxy*aj_syr+aj_sxy*
     & aj_sys
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+aj_ryy*aj_syr+aj_syy*aj_sys
                     endif ! order of accuracy
                  else if ( nd.eq.3) then
                     if ( order.eq.2 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-1,i2o,i3o,0,0)+rsxy(i1o+1,
     & i2o,i3o,0,0))/(2.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-1,i3o,0,0)+rsxy(i1o,
     & i2o+1,i3o,0,0))/(2.*dr(1))
                        aj_rxt = (-rsxy(i1o,i2o,i3o-1,0,0)+rsxy(i1o,
     & i2o,i3o+1,0,0))/(2.*dr(2))
                        aj_rxrr = (rsxy(i1o-1,i2o,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o+1,i2o,i3o,0,0))/(dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,0)+rsxy(
     & i1o-1,i2o+1,i3o,0,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,0)+
     & rsxy(i1o+1,i2o+1,i3o,0,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_rxss = (rsxy(i1o,i2o-1,i3o,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o+1,i3o,0,0))/(dr(1)**2)
                        aj_rxrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,0)+rsxy(
     & i1o-1,i2o,i3o+1,0,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,0)+
     & rsxy(i1o+1,i2o,i3o+1,0,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_rxst = (-(-rsxy(i1o,i2o-1,i3o-1,0,0)+rsxy(
     & i1o,i2o-1,i3o+1,0,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,0)+
     & rsxy(i1o,i2o+1,i3o+1,0,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_rxtt = (rsxy(i1o,i2o,i3o-1,0,0)-2.*rsxy(i1o,
     & i2o,i3o,0,0)+rsxy(i1o,i2o,i3o+1,0,0))/(dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-1,i2o,i3o,1,0)+rsxy(i1o+1,
     & i2o,i3o,1,0))/(2.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-1,i3o,1,0)+rsxy(i1o,
     & i2o+1,i3o,1,0))/(2.*dr(1))
                        aj_sxt = (-rsxy(i1o,i2o,i3o-1,1,0)+rsxy(i1o,
     & i2o,i3o+1,1,0))/(2.*dr(2))
                        aj_sxrr = (rsxy(i1o-1,i2o,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o+1,i2o,i3o,1,0))/(dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,0)+rsxy(
     & i1o-1,i2o+1,i3o,1,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,0)+
     & rsxy(i1o+1,i2o+1,i3o,1,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_sxss = (rsxy(i1o,i2o-1,i3o,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o+1,i3o,1,0))/(dr(1)**2)
                        aj_sxrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,0)+rsxy(
     & i1o-1,i2o,i3o+1,1,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,0)+
     & rsxy(i1o+1,i2o,i3o+1,1,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_sxst = (-(-rsxy(i1o,i2o-1,i3o-1,1,0)+rsxy(
     & i1o,i2o-1,i3o+1,1,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,0)+
     & rsxy(i1o,i2o+1,i3o+1,1,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_sxtt = (rsxy(i1o,i2o,i3o-1,1,0)-2.*rsxy(i1o,
     & i2o,i3o,1,0)+rsxy(i1o,i2o,i3o+1,1,0))/(dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (-rsxy(i1o-1,i2o,i3o,2,0)+rsxy(i1o+1,
     & i2o,i3o,2,0))/(2.*dr(0))
                        aj_txs = (-rsxy(i1o,i2o-1,i3o,2,0)+rsxy(i1o,
     & i2o+1,i3o,2,0))/(2.*dr(1))
                        aj_txt = (-rsxy(i1o,i2o,i3o-1,2,0)+rsxy(i1o,
     & i2o,i3o+1,2,0))/(2.*dr(2))
                        aj_txrr = (rsxy(i1o-1,i2o,i3o,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o+1,i2o,i3o,2,0))/(dr(0)**2)
                        aj_txrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,0)+rsxy(
     & i1o-1,i2o+1,i3o,2,0))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,0)+
     & rsxy(i1o+1,i2o+1,i3o,2,0))/(2.*dr(1)))/(2.*dr(0))
                        aj_txss = (rsxy(i1o,i2o-1,i3o,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o,i2o+1,i3o,2,0))/(dr(1)**2)
                        aj_txrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,0)+rsxy(
     & i1o-1,i2o,i3o+1,2,0))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,0)+
     & rsxy(i1o+1,i2o,i3o+1,2,0))/(2.*dr(2)))/(2.*dr(0))
                        aj_txst = (-(-rsxy(i1o,i2o-1,i3o-1,2,0)+rsxy(
     & i1o,i2o-1,i3o+1,2,0))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,0)+
     & rsxy(i1o,i2o+1,i3o+1,2,0))/(2.*dr(2)))/(2.*dr(1))
                        aj_txtt = (rsxy(i1o,i2o,i3o-1,2,0)-2.*rsxy(i1o,
     & i2o,i3o,2,0)+rsxy(i1o,i2o,i3o+1,2,0))/(dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-1,i2o,i3o,0,1)+rsxy(i1o+1,
     & i2o,i3o,0,1))/(2.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-1,i3o,0,1)+rsxy(i1o,
     & i2o+1,i3o,0,1))/(2.*dr(1))
                        aj_ryt = (-rsxy(i1o,i2o,i3o-1,0,1)+rsxy(i1o,
     & i2o,i3o+1,0,1))/(2.*dr(2))
                        aj_ryrr = (rsxy(i1o-1,i2o,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o+1,i2o,i3o,0,1))/(dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,1)+rsxy(
     & i1o-1,i2o+1,i3o,0,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,1)+
     & rsxy(i1o+1,i2o+1,i3o,0,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_ryss = (rsxy(i1o,i2o-1,i3o,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o+1,i3o,0,1))/(dr(1)**2)
                        aj_ryrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,1)+rsxy(
     & i1o-1,i2o,i3o+1,0,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,1)+
     & rsxy(i1o+1,i2o,i3o+1,0,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_ryst = (-(-rsxy(i1o,i2o-1,i3o-1,0,1)+rsxy(
     & i1o,i2o-1,i3o+1,0,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,1)+
     & rsxy(i1o,i2o+1,i3o+1,0,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_rytt = (rsxy(i1o,i2o,i3o-1,0,1)-2.*rsxy(i1o,
     & i2o,i3o,0,1)+rsxy(i1o,i2o,i3o+1,0,1))/(dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-1,i2o,i3o,1,1)+rsxy(i1o+1,
     & i2o,i3o,1,1))/(2.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-1,i3o,1,1)+rsxy(i1o,
     & i2o+1,i3o,1,1))/(2.*dr(1))
                        aj_syt = (-rsxy(i1o,i2o,i3o-1,1,1)+rsxy(i1o,
     & i2o,i3o+1,1,1))/(2.*dr(2))
                        aj_syrr = (rsxy(i1o-1,i2o,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o+1,i2o,i3o,1,1))/(dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,1)+rsxy(
     & i1o-1,i2o+1,i3o,1,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,1)+
     & rsxy(i1o+1,i2o+1,i3o,1,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_syss = (rsxy(i1o,i2o-1,i3o,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o+1,i3o,1,1))/(dr(1)**2)
                        aj_syrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,1)+rsxy(
     & i1o-1,i2o,i3o+1,1,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,1)+
     & rsxy(i1o+1,i2o,i3o+1,1,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_syst = (-(-rsxy(i1o,i2o-1,i3o-1,1,1)+rsxy(
     & i1o,i2o-1,i3o+1,1,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,1)+
     & rsxy(i1o,i2o+1,i3o+1,1,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_sytt = (rsxy(i1o,i2o,i3o-1,1,1)-2.*rsxy(i1o,
     & i2o,i3o,1,1)+rsxy(i1o,i2o,i3o+1,1,1))/(dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (-rsxy(i1o-1,i2o,i3o,2,1)+rsxy(i1o+1,
     & i2o,i3o,2,1))/(2.*dr(0))
                        aj_tys = (-rsxy(i1o,i2o-1,i3o,2,1)+rsxy(i1o,
     & i2o+1,i3o,2,1))/(2.*dr(1))
                        aj_tyt = (-rsxy(i1o,i2o,i3o-1,2,1)+rsxy(i1o,
     & i2o,i3o+1,2,1))/(2.*dr(2))
                        aj_tyrr = (rsxy(i1o-1,i2o,i3o,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o+1,i2o,i3o,2,1))/(dr(0)**2)
                        aj_tyrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,1)+rsxy(
     & i1o-1,i2o+1,i3o,2,1))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,1)+
     & rsxy(i1o+1,i2o+1,i3o,2,1))/(2.*dr(1)))/(2.*dr(0))
                        aj_tyss = (rsxy(i1o,i2o-1,i3o,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o,i2o+1,i3o,2,1))/(dr(1)**2)
                        aj_tyrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,1)+rsxy(
     & i1o-1,i2o,i3o+1,2,1))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,1)+
     & rsxy(i1o+1,i2o,i3o+1,2,1))/(2.*dr(2)))/(2.*dr(0))
                        aj_tyst = (-(-rsxy(i1o,i2o-1,i3o-1,2,1)+rsxy(
     & i1o,i2o-1,i3o+1,2,1))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,1)+
     & rsxy(i1o,i2o+1,i3o+1,2,1))/(2.*dr(2)))/(2.*dr(1))
                        aj_tytt = (rsxy(i1o,i2o,i3o-1,2,1)-2.*rsxy(i1o,
     & i2o,i3o,2,1)+rsxy(i1o,i2o,i3o+1,2,1))/(dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (-rsxy(i1o-1,i2o,i3o,0,2)+rsxy(i1o+1,
     & i2o,i3o,0,2))/(2.*dr(0))
                        aj_rzs = (-rsxy(i1o,i2o-1,i3o,0,2)+rsxy(i1o,
     & i2o+1,i3o,0,2))/(2.*dr(1))
                        aj_rzt = (-rsxy(i1o,i2o,i3o-1,0,2)+rsxy(i1o,
     & i2o,i3o+1,0,2))/(2.*dr(2))
                        aj_rzrr = (rsxy(i1o-1,i2o,i3o,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o+1,i2o,i3o,0,2))/(dr(0)**2)
                        aj_rzrs = (-(-rsxy(i1o-1,i2o-1,i3o,0,2)+rsxy(
     & i1o-1,i2o+1,i3o,0,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,0,2)+
     & rsxy(i1o+1,i2o+1,i3o,0,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_rzss = (rsxy(i1o,i2o-1,i3o,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o,i2o+1,i3o,0,2))/(dr(1)**2)
                        aj_rzrt = (-(-rsxy(i1o-1,i2o,i3o-1,0,2)+rsxy(
     & i1o-1,i2o,i3o+1,0,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,0,2)+
     & rsxy(i1o+1,i2o,i3o+1,0,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_rzst = (-(-rsxy(i1o,i2o-1,i3o-1,0,2)+rsxy(
     & i1o,i2o-1,i3o+1,0,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,0,2)+
     & rsxy(i1o,i2o+1,i3o+1,0,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_rztt = (rsxy(i1o,i2o,i3o-1,0,2)-2.*rsxy(i1o,
     & i2o,i3o,0,2)+rsxy(i1o,i2o,i3o+1,0,2))/(dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (-rsxy(i1o-1,i2o,i3o,1,2)+rsxy(i1o+1,
     & i2o,i3o,1,2))/(2.*dr(0))
                        aj_szs = (-rsxy(i1o,i2o-1,i3o,1,2)+rsxy(i1o,
     & i2o+1,i3o,1,2))/(2.*dr(1))
                        aj_szt = (-rsxy(i1o,i2o,i3o-1,1,2)+rsxy(i1o,
     & i2o,i3o+1,1,2))/(2.*dr(2))
                        aj_szrr = (rsxy(i1o-1,i2o,i3o,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o+1,i2o,i3o,1,2))/(dr(0)**2)
                        aj_szrs = (-(-rsxy(i1o-1,i2o-1,i3o,1,2)+rsxy(
     & i1o-1,i2o+1,i3o,1,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,1,2)+
     & rsxy(i1o+1,i2o+1,i3o,1,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_szss = (rsxy(i1o,i2o-1,i3o,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o,i2o+1,i3o,1,2))/(dr(1)**2)
                        aj_szrt = (-(-rsxy(i1o-1,i2o,i3o-1,1,2)+rsxy(
     & i1o-1,i2o,i3o+1,1,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,1,2)+
     & rsxy(i1o+1,i2o,i3o+1,1,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_szst = (-(-rsxy(i1o,i2o-1,i3o-1,1,2)+rsxy(
     & i1o,i2o-1,i3o+1,1,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,1,2)+
     & rsxy(i1o,i2o+1,i3o+1,1,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_sztt = (rsxy(i1o,i2o,i3o-1,1,2)-2.*rsxy(i1o,
     & i2o,i3o,1,2)+rsxy(i1o,i2o,i3o+1,1,2))/(dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (-rsxy(i1o-1,i2o,i3o,2,2)+rsxy(i1o+1,
     & i2o,i3o,2,2))/(2.*dr(0))
                        aj_tzs = (-rsxy(i1o,i2o-1,i3o,2,2)+rsxy(i1o,
     & i2o+1,i3o,2,2))/(2.*dr(1))
                        aj_tzt = (-rsxy(i1o,i2o,i3o-1,2,2)+rsxy(i1o,
     & i2o,i3o+1,2,2))/(2.*dr(2))
                        aj_tzrr = (rsxy(i1o-1,i2o,i3o,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o+1,i2o,i3o,2,2))/(dr(0)**2)
                        aj_tzrs = (-(-rsxy(i1o-1,i2o-1,i3o,2,2)+rsxy(
     & i1o-1,i2o+1,i3o,2,2))/(2.*dr(1))+(-rsxy(i1o+1,i2o-1,i3o,2,2)+
     & rsxy(i1o+1,i2o+1,i3o,2,2))/(2.*dr(1)))/(2.*dr(0))
                        aj_tzss = (rsxy(i1o,i2o-1,i3o,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o,i2o+1,i3o,2,2))/(dr(1)**2)
                        aj_tzrt = (-(-rsxy(i1o-1,i2o,i3o-1,2,2)+rsxy(
     & i1o-1,i2o,i3o+1,2,2))/(2.*dr(2))+(-rsxy(i1o+1,i2o,i3o-1,2,2)+
     & rsxy(i1o+1,i2o,i3o+1,2,2))/(2.*dr(2)))/(2.*dr(0))
                        aj_tzst = (-(-rsxy(i1o,i2o-1,i3o-1,2,2)+rsxy(
     & i1o,i2o-1,i3o+1,2,2))/(2.*dr(2))+(-rsxy(i1o,i2o+1,i3o-1,2,2)+
     & rsxy(i1o,i2o+1,i3o+1,2,2))/(2.*dr(2)))/(2.*dr(1))
                        aj_tztt = (rsxy(i1o,i2o,i3o-1,2,2)-2.*rsxy(i1o,
     & i2o,i3o,2,2)+rsxy(i1o,i2o,i3o+1,2,2))/(dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.4 ) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (rsxy(i1o-2,i2o,i3o,0,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+8.*rsxy(i1o+1,i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,
     & 0))/(12.*dr(0))
                        aj_rxs = (rsxy(i1o,i2o-2,i3o,0,0)-8.*rsxy(i1o,
     & i2o-1,i3o,0,0)+8.*rsxy(i1o,i2o+1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,
     & 0))/(12.*dr(1))
                        aj_rxt = (rsxy(i1o,i2o,i3o-2,0,0)-8.*rsxy(i1o,
     & i2o,i3o-1,0,0)+8.*rsxy(i1o,i2o,i3o+1,0,0)-rsxy(i1o,i2o,i3o+2,0,
     & 0))/(12.*dr(2))
                        aj_rxrr = (-rsxy(i1o-2,i2o,i3o,0,0)+16.*rsxy(
     & i1o-1,i2o,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o+1,
     & i2o,i3o,0,0)-rsxy(i1o+2,i2o,i3o,0,0))/(12.*dr(0)**2)
                        aj_rxrs = ((rsxy(i1o-2,i2o-2,i3o,0,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,0)+8.*rsxy(i1o-2,i2o+1,i3o,0,0)-rsxy(i1o-2,
     & i2o+2,i3o,0,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,0)+8.*rsxy(i1o-1,i2o+1,i3o,0,0)-rsxy(
     & i1o-1,i2o+2,i3o,0,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,0)+8.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & rsxy(i1o+1,i2o+2,i3o,0,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,0,0)+8.*rsxy(i1o+2,i2o+1,i3o,0,0)-
     & rsxy(i1o+2,i2o+2,i3o,0,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_rxss = (-rsxy(i1o,i2o-2,i3o,0,0)+16.*rsxy(
     & i1o,i2o-1,i3o,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,0)-rsxy(i1o,i2o+2,i3o,0,0))/(12.*dr(1)**2)
                        aj_rxrt = ((rsxy(i1o-2,i2o,i3o-2,0,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,0)+8.*rsxy(i1o-2,i2o,i3o+1,0,0)-rsxy(i1o-2,
     & i2o,i3o+2,0,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,0)+8.*rsxy(i1o-1,i2o,i3o+1,0,0)-rsxy(
     & i1o-1,i2o,i3o+2,0,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,0)+8.*rsxy(i1o+1,i2o,i3o+1,0,0)-
     & rsxy(i1o+1,i2o,i3o+2,0,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,0,0)+8.*rsxy(i1o+2,i2o,i3o+1,0,0)-
     & rsxy(i1o+2,i2o,i3o+2,0,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_rxst = ((rsxy(i1o,i2o-2,i3o-2,0,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,0)+8.*rsxy(i1o,i2o-2,i3o+1,0,0)-rsxy(i1o,i2o-
     & 2,i3o+2,0,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,0)+8.*rsxy(i1o,i2o-1,i3o+1,0,0)-rsxy(
     & i1o,i2o-1,i3o+2,0,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,0)+8.*rsxy(i1o,i2o+1,i3o+1,0,0)-
     & rsxy(i1o,i2o+1,i3o+2,0,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,0,0)+8.*rsxy(i1o,i2o+2,i3o+1,0,0)-
     & rsxy(i1o,i2o+2,i3o+2,0,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_rxtt = (-rsxy(i1o,i2o,i3o-2,0,0)+16.*rsxy(
     & i1o,i2o,i3o-1,0,0)-30.*rsxy(i1o,i2o,i3o,0,0)+16.*rsxy(i1o,i2o,
     & i3o+1,0,0)-rsxy(i1o,i2o,i3o+2,0,0))/(12.*dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (rsxy(i1o-2,i2o,i3o,1,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+8.*rsxy(i1o+1,i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,
     & 0))/(12.*dr(0))
                        aj_sxs = (rsxy(i1o,i2o-2,i3o,1,0)-8.*rsxy(i1o,
     & i2o-1,i3o,1,0)+8.*rsxy(i1o,i2o+1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,
     & 0))/(12.*dr(1))
                        aj_sxt = (rsxy(i1o,i2o,i3o-2,1,0)-8.*rsxy(i1o,
     & i2o,i3o-1,1,0)+8.*rsxy(i1o,i2o,i3o+1,1,0)-rsxy(i1o,i2o,i3o+2,1,
     & 0))/(12.*dr(2))
                        aj_sxrr = (-rsxy(i1o-2,i2o,i3o,1,0)+16.*rsxy(
     & i1o-1,i2o,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o+1,
     & i2o,i3o,1,0)-rsxy(i1o+2,i2o,i3o,1,0))/(12.*dr(0)**2)
                        aj_sxrs = ((rsxy(i1o-2,i2o-2,i3o,1,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,0)+8.*rsxy(i1o-2,i2o+1,i3o,1,0)-rsxy(i1o-2,
     & i2o+2,i3o,1,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,0)+8.*rsxy(i1o-1,i2o+1,i3o,1,0)-rsxy(
     & i1o-1,i2o+2,i3o,1,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,0)+8.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & rsxy(i1o+1,i2o+2,i3o,1,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,1,0)+8.*rsxy(i1o+2,i2o+1,i3o,1,0)-
     & rsxy(i1o+2,i2o+2,i3o,1,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_sxss = (-rsxy(i1o,i2o-2,i3o,1,0)+16.*rsxy(
     & i1o,i2o-1,i3o,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,0)-rsxy(i1o,i2o+2,i3o,1,0))/(12.*dr(1)**2)
                        aj_sxrt = ((rsxy(i1o-2,i2o,i3o-2,1,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,0)+8.*rsxy(i1o-2,i2o,i3o+1,1,0)-rsxy(i1o-2,
     & i2o,i3o+2,1,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,0)+8.*rsxy(i1o-1,i2o,i3o+1,1,0)-rsxy(
     & i1o-1,i2o,i3o+2,1,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,0)+8.*rsxy(i1o+1,i2o,i3o+1,1,0)-
     & rsxy(i1o+1,i2o,i3o+2,1,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,1,0)+8.*rsxy(i1o+2,i2o,i3o+1,1,0)-
     & rsxy(i1o+2,i2o,i3o+2,1,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_sxst = ((rsxy(i1o,i2o-2,i3o-2,1,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,0)+8.*rsxy(i1o,i2o-2,i3o+1,1,0)-rsxy(i1o,i2o-
     & 2,i3o+2,1,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,0)+8.*rsxy(i1o,i2o-1,i3o+1,1,0)-rsxy(
     & i1o,i2o-1,i3o+2,1,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,0)+8.*rsxy(i1o,i2o+1,i3o+1,1,0)-
     & rsxy(i1o,i2o+1,i3o+2,1,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,1,0)+8.*rsxy(i1o,i2o+2,i3o+1,1,0)-
     & rsxy(i1o,i2o+2,i3o+2,1,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_sxtt = (-rsxy(i1o,i2o,i3o-2,1,0)+16.*rsxy(
     & i1o,i2o,i3o-1,1,0)-30.*rsxy(i1o,i2o,i3o,1,0)+16.*rsxy(i1o,i2o,
     & i3o+1,1,0)-rsxy(i1o,i2o,i3o+2,1,0))/(12.*dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (rsxy(i1o-2,i2o,i3o,2,0)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,0)+8.*rsxy(i1o+1,i2o,i3o,2,0)-rsxy(i1o+2,i2o,i3o,2,
     & 0))/(12.*dr(0))
                        aj_txs = (rsxy(i1o,i2o-2,i3o,2,0)-8.*rsxy(i1o,
     & i2o-1,i3o,2,0)+8.*rsxy(i1o,i2o+1,i3o,2,0)-rsxy(i1o,i2o+2,i3o,2,
     & 0))/(12.*dr(1))
                        aj_txt = (rsxy(i1o,i2o,i3o-2,2,0)-8.*rsxy(i1o,
     & i2o,i3o-1,2,0)+8.*rsxy(i1o,i2o,i3o+1,2,0)-rsxy(i1o,i2o,i3o+2,2,
     & 0))/(12.*dr(2))
                        aj_txrr = (-rsxy(i1o-2,i2o,i3o,2,0)+16.*rsxy(
     & i1o-1,i2o,i3o,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o+1,
     & i2o,i3o,2,0)-rsxy(i1o+2,i2o,i3o,2,0))/(12.*dr(0)**2)
                        aj_txrs = ((rsxy(i1o-2,i2o-2,i3o,2,0)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,0)+8.*rsxy(i1o-2,i2o+1,i3o,2,0)-rsxy(i1o-2,
     & i2o+2,i3o,2,0))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,0)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,0)+8.*rsxy(i1o-1,i2o+1,i3o,2,0)-rsxy(
     & i1o-1,i2o+2,i3o,2,0))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,0)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,0)+8.*rsxy(i1o+1,i2o+1,i3o,2,0)-
     & rsxy(i1o+1,i2o+2,i3o,2,0))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 0)-8.*rsxy(i1o+2,i2o-1,i3o,2,0)+8.*rsxy(i1o+2,i2o+1,i3o,2,0)-
     & rsxy(i1o+2,i2o+2,i3o,2,0))/(12.*dr(1)))/(12.*dr(0))
                        aj_txss = (-rsxy(i1o,i2o-2,i3o,2,0)+16.*rsxy(
     & i1o,i2o-1,i3o,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,0)-rsxy(i1o,i2o+2,i3o,2,0))/(12.*dr(1)**2)
                        aj_txrt = ((rsxy(i1o-2,i2o,i3o-2,2,0)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,0)+8.*rsxy(i1o-2,i2o,i3o+1,2,0)-rsxy(i1o-2,
     & i2o,i3o+2,2,0))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,0)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,0)+8.*rsxy(i1o-1,i2o,i3o+1,2,0)-rsxy(
     & i1o-1,i2o,i3o+2,2,0))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,0)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,0)+8.*rsxy(i1o+1,i2o,i3o+1,2,0)-
     & rsxy(i1o+1,i2o,i3o+2,2,0))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 0)-8.*rsxy(i1o+2,i2o,i3o-1,2,0)+8.*rsxy(i1o+2,i2o,i3o+1,2,0)-
     & rsxy(i1o+2,i2o,i3o+2,2,0))/(12.*dr(2)))/(12.*dr(0))
                        aj_txst = ((rsxy(i1o,i2o-2,i3o-2,2,0)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,0)+8.*rsxy(i1o,i2o-2,i3o+1,2,0)-rsxy(i1o,i2o-
     & 2,i3o+2,2,0))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,0)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,0)+8.*rsxy(i1o,i2o-1,i3o+1,2,0)-rsxy(
     & i1o,i2o-1,i3o+2,2,0))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,0)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,0)+8.*rsxy(i1o,i2o+1,i3o+1,2,0)-
     & rsxy(i1o,i2o+1,i3o+2,2,0))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 0)-8.*rsxy(i1o,i2o+2,i3o-1,2,0)+8.*rsxy(i1o,i2o+2,i3o+1,2,0)-
     & rsxy(i1o,i2o+2,i3o+2,2,0))/(12.*dr(2)))/(12.*dr(1))
                        aj_txtt = (-rsxy(i1o,i2o,i3o-2,2,0)+16.*rsxy(
     & i1o,i2o,i3o-1,2,0)-30.*rsxy(i1o,i2o,i3o,2,0)+16.*rsxy(i1o,i2o,
     & i3o+1,2,0)-rsxy(i1o,i2o,i3o+2,2,0))/(12.*dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (rsxy(i1o-2,i2o,i3o,0,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+8.*rsxy(i1o+1,i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,
     & 1))/(12.*dr(0))
                        aj_rys = (rsxy(i1o,i2o-2,i3o,0,1)-8.*rsxy(i1o,
     & i2o-1,i3o,0,1)+8.*rsxy(i1o,i2o+1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,
     & 1))/(12.*dr(1))
                        aj_ryt = (rsxy(i1o,i2o,i3o-2,0,1)-8.*rsxy(i1o,
     & i2o,i3o-1,0,1)+8.*rsxy(i1o,i2o,i3o+1,0,1)-rsxy(i1o,i2o,i3o+2,0,
     & 1))/(12.*dr(2))
                        aj_ryrr = (-rsxy(i1o-2,i2o,i3o,0,1)+16.*rsxy(
     & i1o-1,i2o,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o+1,
     & i2o,i3o,0,1)-rsxy(i1o+2,i2o,i3o,0,1))/(12.*dr(0)**2)
                        aj_ryrs = ((rsxy(i1o-2,i2o-2,i3o,0,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,1)+8.*rsxy(i1o-2,i2o+1,i3o,0,1)-rsxy(i1o-2,
     & i2o+2,i3o,0,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,1)+8.*rsxy(i1o-1,i2o+1,i3o,0,1)-rsxy(
     & i1o-1,i2o+2,i3o,0,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,1)+8.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & rsxy(i1o+1,i2o+2,i3o,0,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,0,1)+8.*rsxy(i1o+2,i2o+1,i3o,0,1)-
     & rsxy(i1o+2,i2o+2,i3o,0,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_ryss = (-rsxy(i1o,i2o-2,i3o,0,1)+16.*rsxy(
     & i1o,i2o-1,i3o,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,1)-rsxy(i1o,i2o+2,i3o,0,1))/(12.*dr(1)**2)
                        aj_ryrt = ((rsxy(i1o-2,i2o,i3o-2,0,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,1)+8.*rsxy(i1o-2,i2o,i3o+1,0,1)-rsxy(i1o-2,
     & i2o,i3o+2,0,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,1)+8.*rsxy(i1o-1,i2o,i3o+1,0,1)-rsxy(
     & i1o-1,i2o,i3o+2,0,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,1)+8.*rsxy(i1o+1,i2o,i3o+1,0,1)-
     & rsxy(i1o+1,i2o,i3o+2,0,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,0,1)+8.*rsxy(i1o+2,i2o,i3o+1,0,1)-
     & rsxy(i1o+2,i2o,i3o+2,0,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_ryst = ((rsxy(i1o,i2o-2,i3o-2,0,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,1)+8.*rsxy(i1o,i2o-2,i3o+1,0,1)-rsxy(i1o,i2o-
     & 2,i3o+2,0,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,1)+8.*rsxy(i1o,i2o-1,i3o+1,0,1)-rsxy(
     & i1o,i2o-1,i3o+2,0,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,1)+8.*rsxy(i1o,i2o+1,i3o+1,0,1)-
     & rsxy(i1o,i2o+1,i3o+2,0,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,0,1)+8.*rsxy(i1o,i2o+2,i3o+1,0,1)-
     & rsxy(i1o,i2o+2,i3o+2,0,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_rytt = (-rsxy(i1o,i2o,i3o-2,0,1)+16.*rsxy(
     & i1o,i2o,i3o-1,0,1)-30.*rsxy(i1o,i2o,i3o,0,1)+16.*rsxy(i1o,i2o,
     & i3o+1,0,1)-rsxy(i1o,i2o,i3o+2,0,1))/(12.*dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (rsxy(i1o-2,i2o,i3o,1,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+8.*rsxy(i1o+1,i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,
     & 1))/(12.*dr(0))
                        aj_sys = (rsxy(i1o,i2o-2,i3o,1,1)-8.*rsxy(i1o,
     & i2o-1,i3o,1,1)+8.*rsxy(i1o,i2o+1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,
     & 1))/(12.*dr(1))
                        aj_syt = (rsxy(i1o,i2o,i3o-2,1,1)-8.*rsxy(i1o,
     & i2o,i3o-1,1,1)+8.*rsxy(i1o,i2o,i3o+1,1,1)-rsxy(i1o,i2o,i3o+2,1,
     & 1))/(12.*dr(2))
                        aj_syrr = (-rsxy(i1o-2,i2o,i3o,1,1)+16.*rsxy(
     & i1o-1,i2o,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o+1,
     & i2o,i3o,1,1)-rsxy(i1o+2,i2o,i3o,1,1))/(12.*dr(0)**2)
                        aj_syrs = ((rsxy(i1o-2,i2o-2,i3o,1,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,1)+8.*rsxy(i1o-2,i2o+1,i3o,1,1)-rsxy(i1o-2,
     & i2o+2,i3o,1,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,1)+8.*rsxy(i1o-1,i2o+1,i3o,1,1)-rsxy(
     & i1o-1,i2o+2,i3o,1,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,1)+8.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & rsxy(i1o+1,i2o+2,i3o,1,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,1,1)+8.*rsxy(i1o+2,i2o+1,i3o,1,1)-
     & rsxy(i1o+2,i2o+2,i3o,1,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_syss = (-rsxy(i1o,i2o-2,i3o,1,1)+16.*rsxy(
     & i1o,i2o-1,i3o,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,1)-rsxy(i1o,i2o+2,i3o,1,1))/(12.*dr(1)**2)
                        aj_syrt = ((rsxy(i1o-2,i2o,i3o-2,1,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,1)+8.*rsxy(i1o-2,i2o,i3o+1,1,1)-rsxy(i1o-2,
     & i2o,i3o+2,1,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,1)+8.*rsxy(i1o-1,i2o,i3o+1,1,1)-rsxy(
     & i1o-1,i2o,i3o+2,1,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,1)+8.*rsxy(i1o+1,i2o,i3o+1,1,1)-
     & rsxy(i1o+1,i2o,i3o+2,1,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,1,1)+8.*rsxy(i1o+2,i2o,i3o+1,1,1)-
     & rsxy(i1o+2,i2o,i3o+2,1,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_syst = ((rsxy(i1o,i2o-2,i3o-2,1,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,1)+8.*rsxy(i1o,i2o-2,i3o+1,1,1)-rsxy(i1o,i2o-
     & 2,i3o+2,1,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,1)+8.*rsxy(i1o,i2o-1,i3o+1,1,1)-rsxy(
     & i1o,i2o-1,i3o+2,1,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,1)+8.*rsxy(i1o,i2o+1,i3o+1,1,1)-
     & rsxy(i1o,i2o+1,i3o+2,1,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,1,1)+8.*rsxy(i1o,i2o+2,i3o+1,1,1)-
     & rsxy(i1o,i2o+2,i3o+2,1,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_sytt = (-rsxy(i1o,i2o,i3o-2,1,1)+16.*rsxy(
     & i1o,i2o,i3o-1,1,1)-30.*rsxy(i1o,i2o,i3o,1,1)+16.*rsxy(i1o,i2o,
     & i3o+1,1,1)-rsxy(i1o,i2o,i3o+2,1,1))/(12.*dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (rsxy(i1o-2,i2o,i3o,2,1)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,1)+8.*rsxy(i1o+1,i2o,i3o,2,1)-rsxy(i1o+2,i2o,i3o,2,
     & 1))/(12.*dr(0))
                        aj_tys = (rsxy(i1o,i2o-2,i3o,2,1)-8.*rsxy(i1o,
     & i2o-1,i3o,2,1)+8.*rsxy(i1o,i2o+1,i3o,2,1)-rsxy(i1o,i2o+2,i3o,2,
     & 1))/(12.*dr(1))
                        aj_tyt = (rsxy(i1o,i2o,i3o-2,2,1)-8.*rsxy(i1o,
     & i2o,i3o-1,2,1)+8.*rsxy(i1o,i2o,i3o+1,2,1)-rsxy(i1o,i2o,i3o+2,2,
     & 1))/(12.*dr(2))
                        aj_tyrr = (-rsxy(i1o-2,i2o,i3o,2,1)+16.*rsxy(
     & i1o-1,i2o,i3o,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o+1,
     & i2o,i3o,2,1)-rsxy(i1o+2,i2o,i3o,2,1))/(12.*dr(0)**2)
                        aj_tyrs = ((rsxy(i1o-2,i2o-2,i3o,2,1)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,1)+8.*rsxy(i1o-2,i2o+1,i3o,2,1)-rsxy(i1o-2,
     & i2o+2,i3o,2,1))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,1)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,1)+8.*rsxy(i1o-1,i2o+1,i3o,2,1)-rsxy(
     & i1o-1,i2o+2,i3o,2,1))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,1)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,1)+8.*rsxy(i1o+1,i2o+1,i3o,2,1)-
     & rsxy(i1o+1,i2o+2,i3o,2,1))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 1)-8.*rsxy(i1o+2,i2o-1,i3o,2,1)+8.*rsxy(i1o+2,i2o+1,i3o,2,1)-
     & rsxy(i1o+2,i2o+2,i3o,2,1))/(12.*dr(1)))/(12.*dr(0))
                        aj_tyss = (-rsxy(i1o,i2o-2,i3o,2,1)+16.*rsxy(
     & i1o,i2o-1,i3o,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,1)-rsxy(i1o,i2o+2,i3o,2,1))/(12.*dr(1)**2)
                        aj_tyrt = ((rsxy(i1o-2,i2o,i3o-2,2,1)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,1)+8.*rsxy(i1o-2,i2o,i3o+1,2,1)-rsxy(i1o-2,
     & i2o,i3o+2,2,1))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,1)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,1)+8.*rsxy(i1o-1,i2o,i3o+1,2,1)-rsxy(
     & i1o-1,i2o,i3o+2,2,1))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,1)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,1)+8.*rsxy(i1o+1,i2o,i3o+1,2,1)-
     & rsxy(i1o+1,i2o,i3o+2,2,1))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 1)-8.*rsxy(i1o+2,i2o,i3o-1,2,1)+8.*rsxy(i1o+2,i2o,i3o+1,2,1)-
     & rsxy(i1o+2,i2o,i3o+2,2,1))/(12.*dr(2)))/(12.*dr(0))
                        aj_tyst = ((rsxy(i1o,i2o-2,i3o-2,2,1)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,1)+8.*rsxy(i1o,i2o-2,i3o+1,2,1)-rsxy(i1o,i2o-
     & 2,i3o+2,2,1))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,1)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,1)+8.*rsxy(i1o,i2o-1,i3o+1,2,1)-rsxy(
     & i1o,i2o-1,i3o+2,2,1))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,1)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,1)+8.*rsxy(i1o,i2o+1,i3o+1,2,1)-
     & rsxy(i1o,i2o+1,i3o+2,2,1))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 1)-8.*rsxy(i1o,i2o+2,i3o-1,2,1)+8.*rsxy(i1o,i2o+2,i3o+1,2,1)-
     & rsxy(i1o,i2o+2,i3o+2,2,1))/(12.*dr(2)))/(12.*dr(1))
                        aj_tytt = (-rsxy(i1o,i2o,i3o-2,2,1)+16.*rsxy(
     & i1o,i2o,i3o-1,2,1)-30.*rsxy(i1o,i2o,i3o,2,1)+16.*rsxy(i1o,i2o,
     & i3o+1,2,1)-rsxy(i1o,i2o,i3o+2,2,1))/(12.*dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (rsxy(i1o-2,i2o,i3o,0,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,0,2)+8.*rsxy(i1o+1,i2o,i3o,0,2)-rsxy(i1o+2,i2o,i3o,0,
     & 2))/(12.*dr(0))
                        aj_rzs = (rsxy(i1o,i2o-2,i3o,0,2)-8.*rsxy(i1o,
     & i2o-1,i3o,0,2)+8.*rsxy(i1o,i2o+1,i3o,0,2)-rsxy(i1o,i2o+2,i3o,0,
     & 2))/(12.*dr(1))
                        aj_rzt = (rsxy(i1o,i2o,i3o-2,0,2)-8.*rsxy(i1o,
     & i2o,i3o-1,0,2)+8.*rsxy(i1o,i2o,i3o+1,0,2)-rsxy(i1o,i2o,i3o+2,0,
     & 2))/(12.*dr(2))
                        aj_rzrr = (-rsxy(i1o-2,i2o,i3o,0,2)+16.*rsxy(
     & i1o-1,i2o,i3o,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o+1,
     & i2o,i3o,0,2)-rsxy(i1o+2,i2o,i3o,0,2))/(12.*dr(0)**2)
                        aj_rzrs = ((rsxy(i1o-2,i2o-2,i3o,0,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,0,2)+8.*rsxy(i1o-2,i2o+1,i3o,0,2)-rsxy(i1o-2,
     & i2o+2,i3o,0,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,0,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,0,2)+8.*rsxy(i1o-1,i2o+1,i3o,0,2)-rsxy(
     & i1o-1,i2o+2,i3o,0,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,0,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,0,2)+8.*rsxy(i1o+1,i2o+1,i3o,0,2)-
     & rsxy(i1o+1,i2o+2,i3o,0,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,0,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,0,2)+8.*rsxy(i1o+2,i2o+1,i3o,0,2)-
     & rsxy(i1o+2,i2o+2,i3o,0,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_rzss = (-rsxy(i1o,i2o-2,i3o,0,2)+16.*rsxy(
     & i1o,i2o-1,i3o,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,0,2)-rsxy(i1o,i2o+2,i3o,0,2))/(12.*dr(1)**2)
                        aj_rzrt = ((rsxy(i1o-2,i2o,i3o-2,0,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,0,2)+8.*rsxy(i1o-2,i2o,i3o+1,0,2)-rsxy(i1o-2,
     & i2o,i3o+2,0,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,0,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,0,2)+8.*rsxy(i1o-1,i2o,i3o+1,0,2)-rsxy(
     & i1o-1,i2o,i3o+2,0,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,0,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,0,2)+8.*rsxy(i1o+1,i2o,i3o+1,0,2)-
     & rsxy(i1o+1,i2o,i3o+2,0,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,0,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,0,2)+8.*rsxy(i1o+2,i2o,i3o+1,0,2)-
     & rsxy(i1o+2,i2o,i3o+2,0,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_rzst = ((rsxy(i1o,i2o-2,i3o-2,0,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,0,2)+8.*rsxy(i1o,i2o-2,i3o+1,0,2)-rsxy(i1o,i2o-
     & 2,i3o+2,0,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,0,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,0,2)+8.*rsxy(i1o,i2o-1,i3o+1,0,2)-rsxy(
     & i1o,i2o-1,i3o+2,0,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,0,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,0,2)+8.*rsxy(i1o,i2o+1,i3o+1,0,2)-
     & rsxy(i1o,i2o+1,i3o+2,0,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,0,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,0,2)+8.*rsxy(i1o,i2o+2,i3o+1,0,2)-
     & rsxy(i1o,i2o+2,i3o+2,0,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_rztt = (-rsxy(i1o,i2o,i3o-2,0,2)+16.*rsxy(
     & i1o,i2o,i3o-1,0,2)-30.*rsxy(i1o,i2o,i3o,0,2)+16.*rsxy(i1o,i2o,
     & i3o+1,0,2)-rsxy(i1o,i2o,i3o+2,0,2))/(12.*dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (rsxy(i1o-2,i2o,i3o,1,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,1,2)+8.*rsxy(i1o+1,i2o,i3o,1,2)-rsxy(i1o+2,i2o,i3o,1,
     & 2))/(12.*dr(0))
                        aj_szs = (rsxy(i1o,i2o-2,i3o,1,2)-8.*rsxy(i1o,
     & i2o-1,i3o,1,2)+8.*rsxy(i1o,i2o+1,i3o,1,2)-rsxy(i1o,i2o+2,i3o,1,
     & 2))/(12.*dr(1))
                        aj_szt = (rsxy(i1o,i2o,i3o-2,1,2)-8.*rsxy(i1o,
     & i2o,i3o-1,1,2)+8.*rsxy(i1o,i2o,i3o+1,1,2)-rsxy(i1o,i2o,i3o+2,1,
     & 2))/(12.*dr(2))
                        aj_szrr = (-rsxy(i1o-2,i2o,i3o,1,2)+16.*rsxy(
     & i1o-1,i2o,i3o,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o+1,
     & i2o,i3o,1,2)-rsxy(i1o+2,i2o,i3o,1,2))/(12.*dr(0)**2)
                        aj_szrs = ((rsxy(i1o-2,i2o-2,i3o,1,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,1,2)+8.*rsxy(i1o-2,i2o+1,i3o,1,2)-rsxy(i1o-2,
     & i2o+2,i3o,1,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,1,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,1,2)+8.*rsxy(i1o-1,i2o+1,i3o,1,2)-rsxy(
     & i1o-1,i2o+2,i3o,1,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,1,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,1,2)+8.*rsxy(i1o+1,i2o+1,i3o,1,2)-
     & rsxy(i1o+1,i2o+2,i3o,1,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,1,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,1,2)+8.*rsxy(i1o+2,i2o+1,i3o,1,2)-
     & rsxy(i1o+2,i2o+2,i3o,1,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_szss = (-rsxy(i1o,i2o-2,i3o,1,2)+16.*rsxy(
     & i1o,i2o-1,i3o,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,1,2)-rsxy(i1o,i2o+2,i3o,1,2))/(12.*dr(1)**2)
                        aj_szrt = ((rsxy(i1o-2,i2o,i3o-2,1,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,1,2)+8.*rsxy(i1o-2,i2o,i3o+1,1,2)-rsxy(i1o-2,
     & i2o,i3o+2,1,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,1,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,1,2)+8.*rsxy(i1o-1,i2o,i3o+1,1,2)-rsxy(
     & i1o-1,i2o,i3o+2,1,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,1,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,1,2)+8.*rsxy(i1o+1,i2o,i3o+1,1,2)-
     & rsxy(i1o+1,i2o,i3o+2,1,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,1,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,1,2)+8.*rsxy(i1o+2,i2o,i3o+1,1,2)-
     & rsxy(i1o+2,i2o,i3o+2,1,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_szst = ((rsxy(i1o,i2o-2,i3o-2,1,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,1,2)+8.*rsxy(i1o,i2o-2,i3o+1,1,2)-rsxy(i1o,i2o-
     & 2,i3o+2,1,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,1,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,1,2)+8.*rsxy(i1o,i2o-1,i3o+1,1,2)-rsxy(
     & i1o,i2o-1,i3o+2,1,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,1,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,1,2)+8.*rsxy(i1o,i2o+1,i3o+1,1,2)-
     & rsxy(i1o,i2o+1,i3o+2,1,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,1,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,1,2)+8.*rsxy(i1o,i2o+2,i3o+1,1,2)-
     & rsxy(i1o,i2o+2,i3o+2,1,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_sztt = (-rsxy(i1o,i2o,i3o-2,1,2)+16.*rsxy(
     & i1o,i2o,i3o-1,1,2)-30.*rsxy(i1o,i2o,i3o,1,2)+16.*rsxy(i1o,i2o,
     & i3o+1,1,2)-rsxy(i1o,i2o,i3o+2,1,2))/(12.*dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (rsxy(i1o-2,i2o,i3o,2,2)-8.*rsxy(i1o-
     & 1,i2o,i3o,2,2)+8.*rsxy(i1o+1,i2o,i3o,2,2)-rsxy(i1o+2,i2o,i3o,2,
     & 2))/(12.*dr(0))
                        aj_tzs = (rsxy(i1o,i2o-2,i3o,2,2)-8.*rsxy(i1o,
     & i2o-1,i3o,2,2)+8.*rsxy(i1o,i2o+1,i3o,2,2)-rsxy(i1o,i2o+2,i3o,2,
     & 2))/(12.*dr(1))
                        aj_tzt = (rsxy(i1o,i2o,i3o-2,2,2)-8.*rsxy(i1o,
     & i2o,i3o-1,2,2)+8.*rsxy(i1o,i2o,i3o+1,2,2)-rsxy(i1o,i2o,i3o+2,2,
     & 2))/(12.*dr(2))
                        aj_tzrr = (-rsxy(i1o-2,i2o,i3o,2,2)+16.*rsxy(
     & i1o-1,i2o,i3o,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o+1,
     & i2o,i3o,2,2)-rsxy(i1o+2,i2o,i3o,2,2))/(12.*dr(0)**2)
                        aj_tzrs = ((rsxy(i1o-2,i2o-2,i3o,2,2)-8.*rsxy(
     & i1o-2,i2o-1,i3o,2,2)+8.*rsxy(i1o-2,i2o+1,i3o,2,2)-rsxy(i1o-2,
     & i2o+2,i3o,2,2))/(12.*dr(1))-8.*(rsxy(i1o-1,i2o-2,i3o,2,2)-8.*
     & rsxy(i1o-1,i2o-1,i3o,2,2)+8.*rsxy(i1o-1,i2o+1,i3o,2,2)-rsxy(
     & i1o-1,i2o+2,i3o,2,2))/(12.*dr(1))+8.*(rsxy(i1o+1,i2o-2,i3o,2,2)
     & -8.*rsxy(i1o+1,i2o-1,i3o,2,2)+8.*rsxy(i1o+1,i2o+1,i3o,2,2)-
     & rsxy(i1o+1,i2o+2,i3o,2,2))/(12.*dr(1))-(rsxy(i1o+2,i2o-2,i3o,2,
     & 2)-8.*rsxy(i1o+2,i2o-1,i3o,2,2)+8.*rsxy(i1o+2,i2o+1,i3o,2,2)-
     & rsxy(i1o+2,i2o+2,i3o,2,2))/(12.*dr(1)))/(12.*dr(0))
                        aj_tzss = (-rsxy(i1o,i2o-2,i3o,2,2)+16.*rsxy(
     & i1o,i2o-1,i3o,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o,i2o+
     & 1,i3o,2,2)-rsxy(i1o,i2o+2,i3o,2,2))/(12.*dr(1)**2)
                        aj_tzrt = ((rsxy(i1o-2,i2o,i3o-2,2,2)-8.*rsxy(
     & i1o-2,i2o,i3o-1,2,2)+8.*rsxy(i1o-2,i2o,i3o+1,2,2)-rsxy(i1o-2,
     & i2o,i3o+2,2,2))/(12.*dr(2))-8.*(rsxy(i1o-1,i2o,i3o-2,2,2)-8.*
     & rsxy(i1o-1,i2o,i3o-1,2,2)+8.*rsxy(i1o-1,i2o,i3o+1,2,2)-rsxy(
     & i1o-1,i2o,i3o+2,2,2))/(12.*dr(2))+8.*(rsxy(i1o+1,i2o,i3o-2,2,2)
     & -8.*rsxy(i1o+1,i2o,i3o-1,2,2)+8.*rsxy(i1o+1,i2o,i3o+1,2,2)-
     & rsxy(i1o+1,i2o,i3o+2,2,2))/(12.*dr(2))-(rsxy(i1o+2,i2o,i3o-2,2,
     & 2)-8.*rsxy(i1o+2,i2o,i3o-1,2,2)+8.*rsxy(i1o+2,i2o,i3o+1,2,2)-
     & rsxy(i1o+2,i2o,i3o+2,2,2))/(12.*dr(2)))/(12.*dr(0))
                        aj_tzst = ((rsxy(i1o,i2o-2,i3o-2,2,2)-8.*rsxy(
     & i1o,i2o-2,i3o-1,2,2)+8.*rsxy(i1o,i2o-2,i3o+1,2,2)-rsxy(i1o,i2o-
     & 2,i3o+2,2,2))/(12.*dr(2))-8.*(rsxy(i1o,i2o-1,i3o-2,2,2)-8.*
     & rsxy(i1o,i2o-1,i3o-1,2,2)+8.*rsxy(i1o,i2o-1,i3o+1,2,2)-rsxy(
     & i1o,i2o-1,i3o+2,2,2))/(12.*dr(2))+8.*(rsxy(i1o,i2o+1,i3o-2,2,2)
     & -8.*rsxy(i1o,i2o+1,i3o-1,2,2)+8.*rsxy(i1o,i2o+1,i3o+1,2,2)-
     & rsxy(i1o,i2o+1,i3o+2,2,2))/(12.*dr(2))-(rsxy(i1o,i2o+2,i3o-2,2,
     & 2)-8.*rsxy(i1o,i2o+2,i3o-1,2,2)+8.*rsxy(i1o,i2o+2,i3o+1,2,2)-
     & rsxy(i1o,i2o+2,i3o+2,2,2))/(12.*dr(2)))/(12.*dr(1))
                        aj_tztt = (-rsxy(i1o,i2o,i3o-2,2,2)+16.*rsxy(
     & i1o,i2o,i3o-1,2,2)-30.*rsxy(i1o,i2o,i3o,2,2)+16.*rsxy(i1o,i2o,
     & i3o+1,2,2)-rsxy(i1o,i2o,i3o+2,2,2))/(12.*dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.6) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (-rsxy(i1o-3,i2o,i3o,0,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,0)-45.*rsxy(i1o-1,i2o,i3o,0,0)+45.*rsxy(i1o+1,i2o,
     & i3o,0,0)-9.*rsxy(i1o+2,i2o,i3o,0,0)+rsxy(i1o+3,i2o,i3o,0,0))/(
     & 60.*dr(0))
                        aj_rxs = (-rsxy(i1o,i2o-3,i3o,0,0)+9.*rsxy(i1o,
     & i2o-2,i3o,0,0)-45.*rsxy(i1o,i2o-1,i3o,0,0)+45.*rsxy(i1o,i2o+1,
     & i3o,0,0)-9.*rsxy(i1o,i2o+2,i3o,0,0)+rsxy(i1o,i2o+3,i3o,0,0))/(
     & 60.*dr(1))
                        aj_rxt = (-rsxy(i1o,i2o,i3o-3,0,0)+9.*rsxy(i1o,
     & i2o,i3o-2,0,0)-45.*rsxy(i1o,i2o,i3o-1,0,0)+45.*rsxy(i1o,i2o,
     & i3o+1,0,0)-9.*rsxy(i1o,i2o,i3o+2,0,0)+rsxy(i1o,i2o,i3o+3,0,0))
     & /(60.*dr(2))
                        aj_rxrr = (2.*rsxy(i1o-3,i2o,i3o,0,0)-27.*rsxy(
     & i1o-2,i2o,i3o,0,0)+270.*rsxy(i1o-1,i2o,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o+1,i2o,i3o,0,0)-27.*rsxy(i1o+2,i2o,
     & i3o,0,0)+2.*rsxy(i1o+3,i2o,i3o,0,0))/(180.*dr(0)**2)
                        aj_rxrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,0)-45.*rsxy(i1o-3,i2o-1,i3o,0,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,0)-9.*rsxy(i1o-3,i2o+2,i3o,0,0)+rsxy(
     & i1o-3,i2o+3,i3o,0,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,0,0)-45.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,0)-9.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & rsxy(i1o-2,i2o+3,i3o,0,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o-1,i2o-2,i3o,0,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o-1,i2o+1,i3o,0,0)-9.*rsxy(i1o-1,i2o+2,i3o,0,0)
     & +rsxy(i1o-1,i2o+3,i3o,0,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+1,i2o-2,i3o,0,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+1,i2o+1,i3o,0,0)-9.*rsxy(i1o+1,i2o+2,i3o,0,0)
     & +rsxy(i1o+1,i2o+3,i3o,0,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,0)+9.*rsxy(i1o+2,i2o-2,i3o,0,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,0)+45.*rsxy(i1o+2,i2o+1,i3o,0,0)-9.*rsxy(i1o+2,i2o+2,i3o,0,0)
     & +rsxy(i1o+2,i2o+3,i3o,0,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,0)+9.*rsxy(i1o+3,i2o-2,i3o,0,0)-45.*rsxy(i1o+3,i2o-1,i3o,0,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,0)-9.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & rsxy(i1o+3,i2o+3,i3o,0,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_rxss = (2.*rsxy(i1o,i2o-3,i3o,0,0)-27.*rsxy(
     & i1o,i2o-2,i3o,0,0)+270.*rsxy(i1o,i2o-1,i3o,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o+1,i3o,0,0)-27.*rsxy(i1o,i2o+2,
     & i3o,0,0)+2.*rsxy(i1o,i2o+3,i3o,0,0))/(180.*dr(1)**2)
                        aj_rxrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,0)-45.*rsxy(i1o-3,i2o,i3o-1,0,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,0)-9.*rsxy(i1o-3,i2o,i3o+2,0,0)+rsxy(
     & i1o-3,i2o,i3o+3,0,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,0,0)-45.*rsxy(i1o-2,i2o,i3o-1,0,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,0)-9.*rsxy(i1o-2,i2o,i3o+2,0,0)+
     & rsxy(i1o-2,i2o,i3o+3,0,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o-1,i2o,i3o-2,0,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o-1,i2o,i3o+1,0,0)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 0)+rsxy(i1o-1,i2o,i3o+3,0,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o+1,i2o,i3o-2,0,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o+1,i2o,i3o+1,0,0)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 0)+rsxy(i1o+1,i2o,i3o+3,0,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,0)+9.*rsxy(i1o+2,i2o,i3o-2,0,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,0)+45.*rsxy(i1o+2,i2o,i3o+1,0,0)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 0)+rsxy(i1o+2,i2o,i3o+3,0,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,0)+9.*rsxy(i1o+3,i2o,i3o-2,0,0)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,0,0)-9.*rsxy(i1o+3,i2o,i3o+2,0,0)+
     & rsxy(i1o+3,i2o,i3o+3,0,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_rxst = (-(-rsxy(i1o,i2o-3,i3o-3,0,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,0)-45.*rsxy(i1o,i2o-3,i3o-1,0,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,0)-9.*rsxy(i1o,i2o-3,i3o+2,0,0)+rsxy(
     & i1o,i2o-3,i3o+3,0,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,0,0)-45.*rsxy(i1o,i2o-2,i3o-1,0,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,0)-9.*rsxy(i1o,i2o-2,i3o+2,0,0)+
     & rsxy(i1o,i2o-2,i3o+3,0,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o-1,i3o-2,0,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o-1,i3o+1,0,0)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 0)+rsxy(i1o,i2o-1,i3o+3,0,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o+1,i3o-2,0,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o+1,i3o+1,0,0)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 0)+rsxy(i1o,i2o+1,i3o+3,0,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,0)+9.*rsxy(i1o,i2o+2,i3o-2,0,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,0)+45.*rsxy(i1o,i2o+2,i3o+1,0,0)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 0)+rsxy(i1o,i2o+2,i3o+3,0,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,0)+9.*rsxy(i1o,i2o+3,i3o-2,0,0)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,0,0)-9.*rsxy(i1o,i2o+3,i3o+2,0,0)+
     & rsxy(i1o,i2o+3,i3o+3,0,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_rxtt = (2.*rsxy(i1o,i2o,i3o-3,0,0)-27.*rsxy(
     & i1o,i2o,i3o-2,0,0)+270.*rsxy(i1o,i2o,i3o-1,0,0)-490.*rsxy(i1o,
     & i2o,i3o,0,0)+270.*rsxy(i1o,i2o,i3o+1,0,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,0)+2.*rsxy(i1o,i2o,i3o+3,0,0))/(180.*dr(2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (-rsxy(i1o-3,i2o,i3o,1,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,0)-45.*rsxy(i1o-1,i2o,i3o,1,0)+45.*rsxy(i1o+1,i2o,
     & i3o,1,0)-9.*rsxy(i1o+2,i2o,i3o,1,0)+rsxy(i1o+3,i2o,i3o,1,0))/(
     & 60.*dr(0))
                        aj_sxs = (-rsxy(i1o,i2o-3,i3o,1,0)+9.*rsxy(i1o,
     & i2o-2,i3o,1,0)-45.*rsxy(i1o,i2o-1,i3o,1,0)+45.*rsxy(i1o,i2o+1,
     & i3o,1,0)-9.*rsxy(i1o,i2o+2,i3o,1,0)+rsxy(i1o,i2o+3,i3o,1,0))/(
     & 60.*dr(1))
                        aj_sxt = (-rsxy(i1o,i2o,i3o-3,1,0)+9.*rsxy(i1o,
     & i2o,i3o-2,1,0)-45.*rsxy(i1o,i2o,i3o-1,1,0)+45.*rsxy(i1o,i2o,
     & i3o+1,1,0)-9.*rsxy(i1o,i2o,i3o+2,1,0)+rsxy(i1o,i2o,i3o+3,1,0))
     & /(60.*dr(2))
                        aj_sxrr = (2.*rsxy(i1o-3,i2o,i3o,1,0)-27.*rsxy(
     & i1o-2,i2o,i3o,1,0)+270.*rsxy(i1o-1,i2o,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o+1,i2o,i3o,1,0)-27.*rsxy(i1o+2,i2o,
     & i3o,1,0)+2.*rsxy(i1o+3,i2o,i3o,1,0))/(180.*dr(0)**2)
                        aj_sxrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,0)-45.*rsxy(i1o-3,i2o-1,i3o,1,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,0)-9.*rsxy(i1o-3,i2o+2,i3o,1,0)+rsxy(
     & i1o-3,i2o+3,i3o,1,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,1,0)-45.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,0)-9.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & rsxy(i1o-2,i2o+3,i3o,1,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o-1,i2o-2,i3o,1,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o-1,i2o+1,i3o,1,0)-9.*rsxy(i1o-1,i2o+2,i3o,1,0)
     & +rsxy(i1o-1,i2o+3,i3o,1,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+1,i2o-2,i3o,1,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+1,i2o+1,i3o,1,0)-9.*rsxy(i1o+1,i2o+2,i3o,1,0)
     & +rsxy(i1o+1,i2o+3,i3o,1,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,0)+9.*rsxy(i1o+2,i2o-2,i3o,1,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,0)+45.*rsxy(i1o+2,i2o+1,i3o,1,0)-9.*rsxy(i1o+2,i2o+2,i3o,1,0)
     & +rsxy(i1o+2,i2o+3,i3o,1,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,0)+9.*rsxy(i1o+3,i2o-2,i3o,1,0)-45.*rsxy(i1o+3,i2o-1,i3o,1,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,0)-9.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & rsxy(i1o+3,i2o+3,i3o,1,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_sxss = (2.*rsxy(i1o,i2o-3,i3o,1,0)-27.*rsxy(
     & i1o,i2o-2,i3o,1,0)+270.*rsxy(i1o,i2o-1,i3o,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o+1,i3o,1,0)-27.*rsxy(i1o,i2o+2,
     & i3o,1,0)+2.*rsxy(i1o,i2o+3,i3o,1,0))/(180.*dr(1)**2)
                        aj_sxrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,0)-45.*rsxy(i1o-3,i2o,i3o-1,1,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,0)-9.*rsxy(i1o-3,i2o,i3o+2,1,0)+rsxy(
     & i1o-3,i2o,i3o+3,1,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,1,0)-45.*rsxy(i1o-2,i2o,i3o-1,1,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,0)-9.*rsxy(i1o-2,i2o,i3o+2,1,0)+
     & rsxy(i1o-2,i2o,i3o+3,1,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o-1,i2o,i3o-2,1,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o-1,i2o,i3o+1,1,0)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 0)+rsxy(i1o-1,i2o,i3o+3,1,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o+1,i2o,i3o-2,1,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o+1,i2o,i3o+1,1,0)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 0)+rsxy(i1o+1,i2o,i3o+3,1,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,0)+9.*rsxy(i1o+2,i2o,i3o-2,1,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,0)+45.*rsxy(i1o+2,i2o,i3o+1,1,0)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 0)+rsxy(i1o+2,i2o,i3o+3,1,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,0)+9.*rsxy(i1o+3,i2o,i3o-2,1,0)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,1,0)-9.*rsxy(i1o+3,i2o,i3o+2,1,0)+
     & rsxy(i1o+3,i2o,i3o+3,1,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_sxst = (-(-rsxy(i1o,i2o-3,i3o-3,1,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,0)-45.*rsxy(i1o,i2o-3,i3o-1,1,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,0)-9.*rsxy(i1o,i2o-3,i3o+2,1,0)+rsxy(
     & i1o,i2o-3,i3o+3,1,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,1,0)-45.*rsxy(i1o,i2o-2,i3o-1,1,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,0)-9.*rsxy(i1o,i2o-2,i3o+2,1,0)+
     & rsxy(i1o,i2o-2,i3o+3,1,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o-1,i3o-2,1,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o-1,i3o+1,1,0)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 0)+rsxy(i1o,i2o-1,i3o+3,1,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o+1,i3o-2,1,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o+1,i3o+1,1,0)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 0)+rsxy(i1o,i2o+1,i3o+3,1,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,0)+9.*rsxy(i1o,i2o+2,i3o-2,1,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,0)+45.*rsxy(i1o,i2o+2,i3o+1,1,0)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 0)+rsxy(i1o,i2o+2,i3o+3,1,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,0)+9.*rsxy(i1o,i2o+3,i3o-2,1,0)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,1,0)-9.*rsxy(i1o,i2o+3,i3o+2,1,0)+
     & rsxy(i1o,i2o+3,i3o+3,1,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_sxtt = (2.*rsxy(i1o,i2o,i3o-3,1,0)-27.*rsxy(
     & i1o,i2o,i3o-2,1,0)+270.*rsxy(i1o,i2o,i3o-1,1,0)-490.*rsxy(i1o,
     & i2o,i3o,1,0)+270.*rsxy(i1o,i2o,i3o+1,1,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,0)+2.*rsxy(i1o,i2o,i3o+3,1,0))/(180.*dr(2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (-rsxy(i1o-3,i2o,i3o,2,0)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,0)-45.*rsxy(i1o-1,i2o,i3o,2,0)+45.*rsxy(i1o+1,i2o,
     & i3o,2,0)-9.*rsxy(i1o+2,i2o,i3o,2,0)+rsxy(i1o+3,i2o,i3o,2,0))/(
     & 60.*dr(0))
                        aj_txs = (-rsxy(i1o,i2o-3,i3o,2,0)+9.*rsxy(i1o,
     & i2o-2,i3o,2,0)-45.*rsxy(i1o,i2o-1,i3o,2,0)+45.*rsxy(i1o,i2o+1,
     & i3o,2,0)-9.*rsxy(i1o,i2o+2,i3o,2,0)+rsxy(i1o,i2o+3,i3o,2,0))/(
     & 60.*dr(1))
                        aj_txt = (-rsxy(i1o,i2o,i3o-3,2,0)+9.*rsxy(i1o,
     & i2o,i3o-2,2,0)-45.*rsxy(i1o,i2o,i3o-1,2,0)+45.*rsxy(i1o,i2o,
     & i3o+1,2,0)-9.*rsxy(i1o,i2o,i3o+2,2,0)+rsxy(i1o,i2o,i3o+3,2,0))
     & /(60.*dr(2))
                        aj_txrr = (2.*rsxy(i1o-3,i2o,i3o,2,0)-27.*rsxy(
     & i1o-2,i2o,i3o,2,0)+270.*rsxy(i1o-1,i2o,i3o,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o+1,i2o,i3o,2,0)-27.*rsxy(i1o+2,i2o,
     & i3o,2,0)+2.*rsxy(i1o+3,i2o,i3o,2,0))/(180.*dr(0)**2)
                        aj_txrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,0)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,0)-45.*rsxy(i1o-3,i2o-1,i3o,2,0)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,0)-9.*rsxy(i1o-3,i2o+2,i3o,2,0)+rsxy(
     & i1o-3,i2o+3,i3o,2,0))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 0)+9.*rsxy(i1o-2,i2o-2,i3o,2,0)-45.*rsxy(i1o-2,i2o-1,i3o,2,0)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,0)-9.*rsxy(i1o-2,i2o+2,i3o,2,0)+
     & rsxy(i1o-2,i2o+3,i3o,2,0))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o-1,i2o-2,i3o,2,0)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o-1,i2o+1,i3o,2,0)-9.*rsxy(i1o-1,i2o+2,i3o,2,0)
     & +rsxy(i1o-1,i2o+3,i3o,2,0))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o+1,i2o-2,i3o,2,0)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o+1,i2o+1,i3o,2,0)-9.*rsxy(i1o+1,i2o+2,i3o,2,0)
     & +rsxy(i1o+1,i2o+3,i3o,2,0))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,0)+9.*rsxy(i1o+2,i2o-2,i3o,2,0)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,0)+45.*rsxy(i1o+2,i2o+1,i3o,2,0)-9.*rsxy(i1o+2,i2o+2,i3o,2,0)
     & +rsxy(i1o+2,i2o+3,i3o,2,0))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,0)+9.*rsxy(i1o+3,i2o-2,i3o,2,0)-45.*rsxy(i1o+3,i2o-1,i3o,2,0)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,0)-9.*rsxy(i1o+3,i2o+2,i3o,2,0)+
     & rsxy(i1o+3,i2o+3,i3o,2,0))/(60.*dr(1)))/(60.*dr(0))
                        aj_txss = (2.*rsxy(i1o,i2o-3,i3o,2,0)-27.*rsxy(
     & i1o,i2o-2,i3o,2,0)+270.*rsxy(i1o,i2o-1,i3o,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o,i2o+1,i3o,2,0)-27.*rsxy(i1o,i2o+2,
     & i3o,2,0)+2.*rsxy(i1o,i2o+3,i3o,2,0))/(180.*dr(1)**2)
                        aj_txrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,0)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,0)-45.*rsxy(i1o-3,i2o,i3o-1,2,0)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,0)-9.*rsxy(i1o-3,i2o,i3o+2,2,0)+rsxy(
     & i1o-3,i2o,i3o+3,2,0))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 0)+9.*rsxy(i1o-2,i2o,i3o-2,2,0)-45.*rsxy(i1o-2,i2o,i3o-1,2,0)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,0)-9.*rsxy(i1o-2,i2o,i3o+2,2,0)+
     & rsxy(i1o-2,i2o,i3o+3,2,0))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o-1,i2o,i3o-2,2,0)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o-1,i2o,i3o+1,2,0)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 0)+rsxy(i1o-1,i2o,i3o+3,2,0))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o+1,i2o,i3o-2,2,0)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o+1,i2o,i3o+1,2,0)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 0)+rsxy(i1o+1,i2o,i3o+3,2,0))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,0)+9.*rsxy(i1o+2,i2o,i3o-2,2,0)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,0)+45.*rsxy(i1o+2,i2o,i3o+1,2,0)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 0)+rsxy(i1o+2,i2o,i3o+3,2,0))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,0)+9.*rsxy(i1o+3,i2o,i3o-2,2,0)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 0)+45.*rsxy(i1o+3,i2o,i3o+1,2,0)-9.*rsxy(i1o+3,i2o,i3o+2,2,0)+
     & rsxy(i1o+3,i2o,i3o+3,2,0))/(60.*dr(2)))/(60.*dr(0))
                        aj_txst = (-(-rsxy(i1o,i2o-3,i3o-3,2,0)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,0)-45.*rsxy(i1o,i2o-3,i3o-1,2,0)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,0)-9.*rsxy(i1o,i2o-3,i3o+2,2,0)+rsxy(
     & i1o,i2o-3,i3o+3,2,0))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 0)+9.*rsxy(i1o,i2o-2,i3o-2,2,0)-45.*rsxy(i1o,i2o-2,i3o-1,2,0)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,0)-9.*rsxy(i1o,i2o-2,i3o+2,2,0)+
     & rsxy(i1o,i2o-2,i3o+3,2,0))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o-1,i3o-2,2,0)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o-1,i3o+1,2,0)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 0)+rsxy(i1o,i2o-1,i3o+3,2,0))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o+1,i3o-2,2,0)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o+1,i3o+1,2,0)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 0)+rsxy(i1o,i2o+1,i3o+3,2,0))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,0)+9.*rsxy(i1o,i2o+2,i3o-2,2,0)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,0)+45.*rsxy(i1o,i2o+2,i3o+1,2,0)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 0)+rsxy(i1o,i2o+2,i3o+3,2,0))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,0)+9.*rsxy(i1o,i2o+3,i3o-2,2,0)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 0)+45.*rsxy(i1o,i2o+3,i3o+1,2,0)-9.*rsxy(i1o,i2o+3,i3o+2,2,0)+
     & rsxy(i1o,i2o+3,i3o+3,2,0))/(60.*dr(2)))/(60.*dr(1))
                        aj_txtt = (2.*rsxy(i1o,i2o,i3o-3,2,0)-27.*rsxy(
     & i1o,i2o,i3o-2,2,0)+270.*rsxy(i1o,i2o,i3o-1,2,0)-490.*rsxy(i1o,
     & i2o,i3o,2,0)+270.*rsxy(i1o,i2o,i3o+1,2,0)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,0)+2.*rsxy(i1o,i2o,i3o+3,2,0))/(180.*dr(2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (-rsxy(i1o-3,i2o,i3o,0,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,1)-45.*rsxy(i1o-1,i2o,i3o,0,1)+45.*rsxy(i1o+1,i2o,
     & i3o,0,1)-9.*rsxy(i1o+2,i2o,i3o,0,1)+rsxy(i1o+3,i2o,i3o,0,1))/(
     & 60.*dr(0))
                        aj_rys = (-rsxy(i1o,i2o-3,i3o,0,1)+9.*rsxy(i1o,
     & i2o-2,i3o,0,1)-45.*rsxy(i1o,i2o-1,i3o,0,1)+45.*rsxy(i1o,i2o+1,
     & i3o,0,1)-9.*rsxy(i1o,i2o+2,i3o,0,1)+rsxy(i1o,i2o+3,i3o,0,1))/(
     & 60.*dr(1))
                        aj_ryt = (-rsxy(i1o,i2o,i3o-3,0,1)+9.*rsxy(i1o,
     & i2o,i3o-2,0,1)-45.*rsxy(i1o,i2o,i3o-1,0,1)+45.*rsxy(i1o,i2o,
     & i3o+1,0,1)-9.*rsxy(i1o,i2o,i3o+2,0,1)+rsxy(i1o,i2o,i3o+3,0,1))
     & /(60.*dr(2))
                        aj_ryrr = (2.*rsxy(i1o-3,i2o,i3o,0,1)-27.*rsxy(
     & i1o-2,i2o,i3o,0,1)+270.*rsxy(i1o-1,i2o,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o+1,i2o,i3o,0,1)-27.*rsxy(i1o+2,i2o,
     & i3o,0,1)+2.*rsxy(i1o+3,i2o,i3o,0,1))/(180.*dr(0)**2)
                        aj_ryrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,1)-45.*rsxy(i1o-3,i2o-1,i3o,0,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,1)-9.*rsxy(i1o-3,i2o+2,i3o,0,1)+rsxy(
     & i1o-3,i2o+3,i3o,0,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,0,1)-45.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,1)-9.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & rsxy(i1o-2,i2o+3,i3o,0,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o-1,i2o-2,i3o,0,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o-1,i2o+1,i3o,0,1)-9.*rsxy(i1o-1,i2o+2,i3o,0,1)
     & +rsxy(i1o-1,i2o+3,i3o,0,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+1,i2o-2,i3o,0,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+1,i2o+1,i3o,0,1)-9.*rsxy(i1o+1,i2o+2,i3o,0,1)
     & +rsxy(i1o+1,i2o+3,i3o,0,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,1)+9.*rsxy(i1o+2,i2o-2,i3o,0,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,1)+45.*rsxy(i1o+2,i2o+1,i3o,0,1)-9.*rsxy(i1o+2,i2o+2,i3o,0,1)
     & +rsxy(i1o+2,i2o+3,i3o,0,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,1)+9.*rsxy(i1o+3,i2o-2,i3o,0,1)-45.*rsxy(i1o+3,i2o-1,i3o,0,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,1)-9.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & rsxy(i1o+3,i2o+3,i3o,0,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_ryss = (2.*rsxy(i1o,i2o-3,i3o,0,1)-27.*rsxy(
     & i1o,i2o-2,i3o,0,1)+270.*rsxy(i1o,i2o-1,i3o,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o+1,i3o,0,1)-27.*rsxy(i1o,i2o+2,
     & i3o,0,1)+2.*rsxy(i1o,i2o+3,i3o,0,1))/(180.*dr(1)**2)
                        aj_ryrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,1)-45.*rsxy(i1o-3,i2o,i3o-1,0,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,1)-9.*rsxy(i1o-3,i2o,i3o+2,0,1)+rsxy(
     & i1o-3,i2o,i3o+3,0,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,0,1)-45.*rsxy(i1o-2,i2o,i3o-1,0,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,1)-9.*rsxy(i1o-2,i2o,i3o+2,0,1)+
     & rsxy(i1o-2,i2o,i3o+3,0,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o-1,i2o,i3o-2,0,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o-1,i2o,i3o+1,0,1)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 1)+rsxy(i1o-1,i2o,i3o+3,0,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o+1,i2o,i3o-2,0,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o+1,i2o,i3o+1,0,1)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 1)+rsxy(i1o+1,i2o,i3o+3,0,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,1)+9.*rsxy(i1o+2,i2o,i3o-2,0,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,1)+45.*rsxy(i1o+2,i2o,i3o+1,0,1)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 1)+rsxy(i1o+2,i2o,i3o+3,0,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,1)+9.*rsxy(i1o+3,i2o,i3o-2,0,1)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,0,1)-9.*rsxy(i1o+3,i2o,i3o+2,0,1)+
     & rsxy(i1o+3,i2o,i3o+3,0,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_ryst = (-(-rsxy(i1o,i2o-3,i3o-3,0,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,1)-45.*rsxy(i1o,i2o-3,i3o-1,0,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,1)-9.*rsxy(i1o,i2o-3,i3o+2,0,1)+rsxy(
     & i1o,i2o-3,i3o+3,0,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,0,1)-45.*rsxy(i1o,i2o-2,i3o-1,0,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,1)-9.*rsxy(i1o,i2o-2,i3o+2,0,1)+
     & rsxy(i1o,i2o-2,i3o+3,0,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o-1,i3o-2,0,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o-1,i3o+1,0,1)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 1)+rsxy(i1o,i2o-1,i3o+3,0,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o+1,i3o-2,0,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o+1,i3o+1,0,1)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 1)+rsxy(i1o,i2o+1,i3o+3,0,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,1)+9.*rsxy(i1o,i2o+2,i3o-2,0,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,1)+45.*rsxy(i1o,i2o+2,i3o+1,0,1)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 1)+rsxy(i1o,i2o+2,i3o+3,0,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,1)+9.*rsxy(i1o,i2o+3,i3o-2,0,1)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,0,1)-9.*rsxy(i1o,i2o+3,i3o+2,0,1)+
     & rsxy(i1o,i2o+3,i3o+3,0,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_rytt = (2.*rsxy(i1o,i2o,i3o-3,0,1)-27.*rsxy(
     & i1o,i2o,i3o-2,0,1)+270.*rsxy(i1o,i2o,i3o-1,0,1)-490.*rsxy(i1o,
     & i2o,i3o,0,1)+270.*rsxy(i1o,i2o,i3o+1,0,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,1)+2.*rsxy(i1o,i2o,i3o+3,0,1))/(180.*dr(2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (-rsxy(i1o-3,i2o,i3o,1,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,1)-45.*rsxy(i1o-1,i2o,i3o,1,1)+45.*rsxy(i1o+1,i2o,
     & i3o,1,1)-9.*rsxy(i1o+2,i2o,i3o,1,1)+rsxy(i1o+3,i2o,i3o,1,1))/(
     & 60.*dr(0))
                        aj_sys = (-rsxy(i1o,i2o-3,i3o,1,1)+9.*rsxy(i1o,
     & i2o-2,i3o,1,1)-45.*rsxy(i1o,i2o-1,i3o,1,1)+45.*rsxy(i1o,i2o+1,
     & i3o,1,1)-9.*rsxy(i1o,i2o+2,i3o,1,1)+rsxy(i1o,i2o+3,i3o,1,1))/(
     & 60.*dr(1))
                        aj_syt = (-rsxy(i1o,i2o,i3o-3,1,1)+9.*rsxy(i1o,
     & i2o,i3o-2,1,1)-45.*rsxy(i1o,i2o,i3o-1,1,1)+45.*rsxy(i1o,i2o,
     & i3o+1,1,1)-9.*rsxy(i1o,i2o,i3o+2,1,1)+rsxy(i1o,i2o,i3o+3,1,1))
     & /(60.*dr(2))
                        aj_syrr = (2.*rsxy(i1o-3,i2o,i3o,1,1)-27.*rsxy(
     & i1o-2,i2o,i3o,1,1)+270.*rsxy(i1o-1,i2o,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o+1,i2o,i3o,1,1)-27.*rsxy(i1o+2,i2o,
     & i3o,1,1)+2.*rsxy(i1o+3,i2o,i3o,1,1))/(180.*dr(0)**2)
                        aj_syrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,1)-45.*rsxy(i1o-3,i2o-1,i3o,1,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,1)-9.*rsxy(i1o-3,i2o+2,i3o,1,1)+rsxy(
     & i1o-3,i2o+3,i3o,1,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,1,1)-45.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,1)-9.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & rsxy(i1o-2,i2o+3,i3o,1,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o-1,i2o-2,i3o,1,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o-1,i2o+1,i3o,1,1)-9.*rsxy(i1o-1,i2o+2,i3o,1,1)
     & +rsxy(i1o-1,i2o+3,i3o,1,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+1,i2o-2,i3o,1,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+1,i2o+1,i3o,1,1)-9.*rsxy(i1o+1,i2o+2,i3o,1,1)
     & +rsxy(i1o+1,i2o+3,i3o,1,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,1)+9.*rsxy(i1o+2,i2o-2,i3o,1,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,1)+45.*rsxy(i1o+2,i2o+1,i3o,1,1)-9.*rsxy(i1o+2,i2o+2,i3o,1,1)
     & +rsxy(i1o+2,i2o+3,i3o,1,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,1)+9.*rsxy(i1o+3,i2o-2,i3o,1,1)-45.*rsxy(i1o+3,i2o-1,i3o,1,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,1)-9.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & rsxy(i1o+3,i2o+3,i3o,1,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_syss = (2.*rsxy(i1o,i2o-3,i3o,1,1)-27.*rsxy(
     & i1o,i2o-2,i3o,1,1)+270.*rsxy(i1o,i2o-1,i3o,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o+1,i3o,1,1)-27.*rsxy(i1o,i2o+2,
     & i3o,1,1)+2.*rsxy(i1o,i2o+3,i3o,1,1))/(180.*dr(1)**2)
                        aj_syrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,1)-45.*rsxy(i1o-3,i2o,i3o-1,1,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,1)-9.*rsxy(i1o-3,i2o,i3o+2,1,1)+rsxy(
     & i1o-3,i2o,i3o+3,1,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,1,1)-45.*rsxy(i1o-2,i2o,i3o-1,1,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,1)-9.*rsxy(i1o-2,i2o,i3o+2,1,1)+
     & rsxy(i1o-2,i2o,i3o+3,1,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o-1,i2o,i3o-2,1,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o-1,i2o,i3o+1,1,1)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 1)+rsxy(i1o-1,i2o,i3o+3,1,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o+1,i2o,i3o-2,1,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o+1,i2o,i3o+1,1,1)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 1)+rsxy(i1o+1,i2o,i3o+3,1,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,1)+9.*rsxy(i1o+2,i2o,i3o-2,1,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,1)+45.*rsxy(i1o+2,i2o,i3o+1,1,1)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 1)+rsxy(i1o+2,i2o,i3o+3,1,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,1)+9.*rsxy(i1o+3,i2o,i3o-2,1,1)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,1,1)-9.*rsxy(i1o+3,i2o,i3o+2,1,1)+
     & rsxy(i1o+3,i2o,i3o+3,1,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_syst = (-(-rsxy(i1o,i2o-3,i3o-3,1,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,1)-45.*rsxy(i1o,i2o-3,i3o-1,1,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,1)-9.*rsxy(i1o,i2o-3,i3o+2,1,1)+rsxy(
     & i1o,i2o-3,i3o+3,1,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,1,1)-45.*rsxy(i1o,i2o-2,i3o-1,1,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,1)-9.*rsxy(i1o,i2o-2,i3o+2,1,1)+
     & rsxy(i1o,i2o-2,i3o+3,1,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o-1,i3o-2,1,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o-1,i3o+1,1,1)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 1)+rsxy(i1o,i2o-1,i3o+3,1,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o+1,i3o-2,1,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o+1,i3o+1,1,1)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 1)+rsxy(i1o,i2o+1,i3o+3,1,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,1)+9.*rsxy(i1o,i2o+2,i3o-2,1,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,1)+45.*rsxy(i1o,i2o+2,i3o+1,1,1)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 1)+rsxy(i1o,i2o+2,i3o+3,1,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,1)+9.*rsxy(i1o,i2o+3,i3o-2,1,1)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,1,1)-9.*rsxy(i1o,i2o+3,i3o+2,1,1)+
     & rsxy(i1o,i2o+3,i3o+3,1,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_sytt = (2.*rsxy(i1o,i2o,i3o-3,1,1)-27.*rsxy(
     & i1o,i2o,i3o-2,1,1)+270.*rsxy(i1o,i2o,i3o-1,1,1)-490.*rsxy(i1o,
     & i2o,i3o,1,1)+270.*rsxy(i1o,i2o,i3o+1,1,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,1)+2.*rsxy(i1o,i2o,i3o+3,1,1))/(180.*dr(2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (-rsxy(i1o-3,i2o,i3o,2,1)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,1)-45.*rsxy(i1o-1,i2o,i3o,2,1)+45.*rsxy(i1o+1,i2o,
     & i3o,2,1)-9.*rsxy(i1o+2,i2o,i3o,2,1)+rsxy(i1o+3,i2o,i3o,2,1))/(
     & 60.*dr(0))
                        aj_tys = (-rsxy(i1o,i2o-3,i3o,2,1)+9.*rsxy(i1o,
     & i2o-2,i3o,2,1)-45.*rsxy(i1o,i2o-1,i3o,2,1)+45.*rsxy(i1o,i2o+1,
     & i3o,2,1)-9.*rsxy(i1o,i2o+2,i3o,2,1)+rsxy(i1o,i2o+3,i3o,2,1))/(
     & 60.*dr(1))
                        aj_tyt = (-rsxy(i1o,i2o,i3o-3,2,1)+9.*rsxy(i1o,
     & i2o,i3o-2,2,1)-45.*rsxy(i1o,i2o,i3o-1,2,1)+45.*rsxy(i1o,i2o,
     & i3o+1,2,1)-9.*rsxy(i1o,i2o,i3o+2,2,1)+rsxy(i1o,i2o,i3o+3,2,1))
     & /(60.*dr(2))
                        aj_tyrr = (2.*rsxy(i1o-3,i2o,i3o,2,1)-27.*rsxy(
     & i1o-2,i2o,i3o,2,1)+270.*rsxy(i1o-1,i2o,i3o,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o+1,i2o,i3o,2,1)-27.*rsxy(i1o+2,i2o,
     & i3o,2,1)+2.*rsxy(i1o+3,i2o,i3o,2,1))/(180.*dr(0)**2)
                        aj_tyrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,1)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,1)-45.*rsxy(i1o-3,i2o-1,i3o,2,1)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,1)-9.*rsxy(i1o-3,i2o+2,i3o,2,1)+rsxy(
     & i1o-3,i2o+3,i3o,2,1))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 1)+9.*rsxy(i1o-2,i2o-2,i3o,2,1)-45.*rsxy(i1o-2,i2o-1,i3o,2,1)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,1)-9.*rsxy(i1o-2,i2o+2,i3o,2,1)+
     & rsxy(i1o-2,i2o+3,i3o,2,1))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o-1,i2o-2,i3o,2,1)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o-1,i2o+1,i3o,2,1)-9.*rsxy(i1o-1,i2o+2,i3o,2,1)
     & +rsxy(i1o-1,i2o+3,i3o,2,1))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o+1,i2o-2,i3o,2,1)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o+1,i2o+1,i3o,2,1)-9.*rsxy(i1o+1,i2o+2,i3o,2,1)
     & +rsxy(i1o+1,i2o+3,i3o,2,1))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,1)+9.*rsxy(i1o+2,i2o-2,i3o,2,1)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,1)+45.*rsxy(i1o+2,i2o+1,i3o,2,1)-9.*rsxy(i1o+2,i2o+2,i3o,2,1)
     & +rsxy(i1o+2,i2o+3,i3o,2,1))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,1)+9.*rsxy(i1o+3,i2o-2,i3o,2,1)-45.*rsxy(i1o+3,i2o-1,i3o,2,1)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,1)-9.*rsxy(i1o+3,i2o+2,i3o,2,1)+
     & rsxy(i1o+3,i2o+3,i3o,2,1))/(60.*dr(1)))/(60.*dr(0))
                        aj_tyss = (2.*rsxy(i1o,i2o-3,i3o,2,1)-27.*rsxy(
     & i1o,i2o-2,i3o,2,1)+270.*rsxy(i1o,i2o-1,i3o,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o,i2o+1,i3o,2,1)-27.*rsxy(i1o,i2o+2,
     & i3o,2,1)+2.*rsxy(i1o,i2o+3,i3o,2,1))/(180.*dr(1)**2)
                        aj_tyrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,1)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,1)-45.*rsxy(i1o-3,i2o,i3o-1,2,1)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,1)-9.*rsxy(i1o-3,i2o,i3o+2,2,1)+rsxy(
     & i1o-3,i2o,i3o+3,2,1))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 1)+9.*rsxy(i1o-2,i2o,i3o-2,2,1)-45.*rsxy(i1o-2,i2o,i3o-1,2,1)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,1)-9.*rsxy(i1o-2,i2o,i3o+2,2,1)+
     & rsxy(i1o-2,i2o,i3o+3,2,1))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o-1,i2o,i3o-2,2,1)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o-1,i2o,i3o+1,2,1)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 1)+rsxy(i1o-1,i2o,i3o+3,2,1))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o+1,i2o,i3o-2,2,1)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o+1,i2o,i3o+1,2,1)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 1)+rsxy(i1o+1,i2o,i3o+3,2,1))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,1)+9.*rsxy(i1o+2,i2o,i3o-2,2,1)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,1)+45.*rsxy(i1o+2,i2o,i3o+1,2,1)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 1)+rsxy(i1o+2,i2o,i3o+3,2,1))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,1)+9.*rsxy(i1o+3,i2o,i3o-2,2,1)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 1)+45.*rsxy(i1o+3,i2o,i3o+1,2,1)-9.*rsxy(i1o+3,i2o,i3o+2,2,1)+
     & rsxy(i1o+3,i2o,i3o+3,2,1))/(60.*dr(2)))/(60.*dr(0))
                        aj_tyst = (-(-rsxy(i1o,i2o-3,i3o-3,2,1)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,1)-45.*rsxy(i1o,i2o-3,i3o-1,2,1)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,1)-9.*rsxy(i1o,i2o-3,i3o+2,2,1)+rsxy(
     & i1o,i2o-3,i3o+3,2,1))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 1)+9.*rsxy(i1o,i2o-2,i3o-2,2,1)-45.*rsxy(i1o,i2o-2,i3o-1,2,1)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,1)-9.*rsxy(i1o,i2o-2,i3o+2,2,1)+
     & rsxy(i1o,i2o-2,i3o+3,2,1))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o-1,i3o-2,2,1)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o-1,i3o+1,2,1)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 1)+rsxy(i1o,i2o-1,i3o+3,2,1))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o+1,i3o-2,2,1)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o+1,i3o+1,2,1)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 1)+rsxy(i1o,i2o+1,i3o+3,2,1))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,1)+9.*rsxy(i1o,i2o+2,i3o-2,2,1)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,1)+45.*rsxy(i1o,i2o+2,i3o+1,2,1)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 1)+rsxy(i1o,i2o+2,i3o+3,2,1))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,1)+9.*rsxy(i1o,i2o+3,i3o-2,2,1)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 1)+45.*rsxy(i1o,i2o+3,i3o+1,2,1)-9.*rsxy(i1o,i2o+3,i3o+2,2,1)+
     & rsxy(i1o,i2o+3,i3o+3,2,1))/(60.*dr(2)))/(60.*dr(1))
                        aj_tytt = (2.*rsxy(i1o,i2o,i3o-3,2,1)-27.*rsxy(
     & i1o,i2o,i3o-2,2,1)+270.*rsxy(i1o,i2o,i3o-1,2,1)-490.*rsxy(i1o,
     & i2o,i3o,2,1)+270.*rsxy(i1o,i2o,i3o+1,2,1)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,1)+2.*rsxy(i1o,i2o,i3o+3,2,1))/(180.*dr(2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (-rsxy(i1o-3,i2o,i3o,0,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,0,2)-45.*rsxy(i1o-1,i2o,i3o,0,2)+45.*rsxy(i1o+1,i2o,
     & i3o,0,2)-9.*rsxy(i1o+2,i2o,i3o,0,2)+rsxy(i1o+3,i2o,i3o,0,2))/(
     & 60.*dr(0))
                        aj_rzs = (-rsxy(i1o,i2o-3,i3o,0,2)+9.*rsxy(i1o,
     & i2o-2,i3o,0,2)-45.*rsxy(i1o,i2o-1,i3o,0,2)+45.*rsxy(i1o,i2o+1,
     & i3o,0,2)-9.*rsxy(i1o,i2o+2,i3o,0,2)+rsxy(i1o,i2o+3,i3o,0,2))/(
     & 60.*dr(1))
                        aj_rzt = (-rsxy(i1o,i2o,i3o-3,0,2)+9.*rsxy(i1o,
     & i2o,i3o-2,0,2)-45.*rsxy(i1o,i2o,i3o-1,0,2)+45.*rsxy(i1o,i2o,
     & i3o+1,0,2)-9.*rsxy(i1o,i2o,i3o+2,0,2)+rsxy(i1o,i2o,i3o+3,0,2))
     & /(60.*dr(2))
                        aj_rzrr = (2.*rsxy(i1o-3,i2o,i3o,0,2)-27.*rsxy(
     & i1o-2,i2o,i3o,0,2)+270.*rsxy(i1o-1,i2o,i3o,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o+1,i2o,i3o,0,2)-27.*rsxy(i1o+2,i2o,
     & i3o,0,2)+2.*rsxy(i1o+3,i2o,i3o,0,2))/(180.*dr(0)**2)
                        aj_rzrs = (-(-rsxy(i1o-3,i2o-3,i3o,0,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,0,2)-45.*rsxy(i1o-3,i2o-1,i3o,0,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,0,2)-9.*rsxy(i1o-3,i2o+2,i3o,0,2)+rsxy(
     & i1o-3,i2o+3,i3o,0,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,0,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,0,2)-45.*rsxy(i1o-2,i2o-1,i3o,0,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,0,2)-9.*rsxy(i1o-2,i2o+2,i3o,0,2)+
     & rsxy(i1o-2,i2o+3,i3o,0,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o-1,i2o-2,i3o,0,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o-1,i2o+1,i3o,0,2)-9.*rsxy(i1o-1,i2o+2,i3o,0,2)
     & +rsxy(i1o-1,i2o+3,i3o,0,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o+1,i2o-2,i3o,0,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o+1,i2o+1,i3o,0,2)-9.*rsxy(i1o+1,i2o+2,i3o,0,2)
     & +rsxy(i1o+1,i2o+3,i3o,0,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,0,2)+9.*rsxy(i1o+2,i2o-2,i3o,0,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 0,2)+45.*rsxy(i1o+2,i2o+1,i3o,0,2)-9.*rsxy(i1o+2,i2o+2,i3o,0,2)
     & +rsxy(i1o+2,i2o+3,i3o,0,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 0,2)+9.*rsxy(i1o+3,i2o-2,i3o,0,2)-45.*rsxy(i1o+3,i2o-1,i3o,0,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,0,2)-9.*rsxy(i1o+3,i2o+2,i3o,0,2)+
     & rsxy(i1o+3,i2o+3,i3o,0,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_rzss = (2.*rsxy(i1o,i2o-3,i3o,0,2)-27.*rsxy(
     & i1o,i2o-2,i3o,0,2)+270.*rsxy(i1o,i2o-1,i3o,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o,i2o+1,i3o,0,2)-27.*rsxy(i1o,i2o+2,
     & i3o,0,2)+2.*rsxy(i1o,i2o+3,i3o,0,2))/(180.*dr(1)**2)
                        aj_rzrt = (-(-rsxy(i1o-3,i2o,i3o-3,0,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,0,2)-45.*rsxy(i1o-3,i2o,i3o-1,0,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,0,2)-9.*rsxy(i1o-3,i2o,i3o+2,0,2)+rsxy(
     & i1o-3,i2o,i3o+3,0,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,0,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,0,2)-45.*rsxy(i1o-2,i2o,i3o-1,0,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,0,2)-9.*rsxy(i1o-2,i2o,i3o+2,0,2)+
     & rsxy(i1o-2,i2o,i3o+3,0,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o-1,i2o,i3o-2,0,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o-1,i2o,i3o+1,0,2)-9.*rsxy(i1o-1,i2o,i3o+2,0,
     & 2)+rsxy(i1o-1,i2o,i3o+3,0,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o+1,i2o,i3o-2,0,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o+1,i2o,i3o+1,0,2)-9.*rsxy(i1o+1,i2o,i3o+2,0,
     & 2)+rsxy(i1o+1,i2o,i3o+3,0,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,0,2)+9.*rsxy(i1o+2,i2o,i3o-2,0,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,0,2)+45.*rsxy(i1o+2,i2o,i3o+1,0,2)-9.*rsxy(i1o+2,i2o,i3o+2,0,
     & 2)+rsxy(i1o+2,i2o,i3o+3,0,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,0,2)+9.*rsxy(i1o+3,i2o,i3o-2,0,2)-45.*rsxy(i1o+3,i2o,i3o-1,0,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,0,2)-9.*rsxy(i1o+3,i2o,i3o+2,0,2)+
     & rsxy(i1o+3,i2o,i3o+3,0,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_rzst = (-(-rsxy(i1o,i2o-3,i3o-3,0,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,0,2)-45.*rsxy(i1o,i2o-3,i3o-1,0,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,0,2)-9.*rsxy(i1o,i2o-3,i3o+2,0,2)+rsxy(
     & i1o,i2o-3,i3o+3,0,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,0,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,0,2)-45.*rsxy(i1o,i2o-2,i3o-1,0,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,0,2)-9.*rsxy(i1o,i2o-2,i3o+2,0,2)+
     & rsxy(i1o,i2o-2,i3o+3,0,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o-1,i3o-2,0,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o-1,i3o+1,0,2)-9.*rsxy(i1o,i2o-1,i3o+2,0,
     & 2)+rsxy(i1o,i2o-1,i3o+3,0,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o+1,i3o-2,0,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o+1,i3o+1,0,2)-9.*rsxy(i1o,i2o+1,i3o+2,0,
     & 2)+rsxy(i1o,i2o+1,i3o+3,0,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,0,2)+9.*rsxy(i1o,i2o+2,i3o-2,0,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,0,2)+45.*rsxy(i1o,i2o+2,i3o+1,0,2)-9.*rsxy(i1o,i2o+2,i3o+2,0,
     & 2)+rsxy(i1o,i2o+2,i3o+3,0,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,0,2)+9.*rsxy(i1o,i2o+3,i3o-2,0,2)-45.*rsxy(i1o,i2o+3,i3o-1,0,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,0,2)-9.*rsxy(i1o,i2o+3,i3o+2,0,2)+
     & rsxy(i1o,i2o+3,i3o+3,0,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_rztt = (2.*rsxy(i1o,i2o,i3o-3,0,2)-27.*rsxy(
     & i1o,i2o,i3o-2,0,2)+270.*rsxy(i1o,i2o,i3o-1,0,2)-490.*rsxy(i1o,
     & i2o,i3o,0,2)+270.*rsxy(i1o,i2o,i3o+1,0,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,0,2)+2.*rsxy(i1o,i2o,i3o+3,0,2))/(180.*dr(2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (-rsxy(i1o-3,i2o,i3o,1,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,1,2)-45.*rsxy(i1o-1,i2o,i3o,1,2)+45.*rsxy(i1o+1,i2o,
     & i3o,1,2)-9.*rsxy(i1o+2,i2o,i3o,1,2)+rsxy(i1o+3,i2o,i3o,1,2))/(
     & 60.*dr(0))
                        aj_szs = (-rsxy(i1o,i2o-3,i3o,1,2)+9.*rsxy(i1o,
     & i2o-2,i3o,1,2)-45.*rsxy(i1o,i2o-1,i3o,1,2)+45.*rsxy(i1o,i2o+1,
     & i3o,1,2)-9.*rsxy(i1o,i2o+2,i3o,1,2)+rsxy(i1o,i2o+3,i3o,1,2))/(
     & 60.*dr(1))
                        aj_szt = (-rsxy(i1o,i2o,i3o-3,1,2)+9.*rsxy(i1o,
     & i2o,i3o-2,1,2)-45.*rsxy(i1o,i2o,i3o-1,1,2)+45.*rsxy(i1o,i2o,
     & i3o+1,1,2)-9.*rsxy(i1o,i2o,i3o+2,1,2)+rsxy(i1o,i2o,i3o+3,1,2))
     & /(60.*dr(2))
                        aj_szrr = (2.*rsxy(i1o-3,i2o,i3o,1,2)-27.*rsxy(
     & i1o-2,i2o,i3o,1,2)+270.*rsxy(i1o-1,i2o,i3o,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o+1,i2o,i3o,1,2)-27.*rsxy(i1o+2,i2o,
     & i3o,1,2)+2.*rsxy(i1o+3,i2o,i3o,1,2))/(180.*dr(0)**2)
                        aj_szrs = (-(-rsxy(i1o-3,i2o-3,i3o,1,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,1,2)-45.*rsxy(i1o-3,i2o-1,i3o,1,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,1,2)-9.*rsxy(i1o-3,i2o+2,i3o,1,2)+rsxy(
     & i1o-3,i2o+3,i3o,1,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,1,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,1,2)-45.*rsxy(i1o-2,i2o-1,i3o,1,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,1,2)-9.*rsxy(i1o-2,i2o+2,i3o,1,2)+
     & rsxy(i1o-2,i2o+3,i3o,1,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o-1,i2o-2,i3o,1,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o-1,i2o+1,i3o,1,2)-9.*rsxy(i1o-1,i2o+2,i3o,1,2)
     & +rsxy(i1o-1,i2o+3,i3o,1,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o+1,i2o-2,i3o,1,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o+1,i2o+1,i3o,1,2)-9.*rsxy(i1o+1,i2o+2,i3o,1,2)
     & +rsxy(i1o+1,i2o+3,i3o,1,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,1,2)+9.*rsxy(i1o+2,i2o-2,i3o,1,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 1,2)+45.*rsxy(i1o+2,i2o+1,i3o,1,2)-9.*rsxy(i1o+2,i2o+2,i3o,1,2)
     & +rsxy(i1o+2,i2o+3,i3o,1,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 1,2)+9.*rsxy(i1o+3,i2o-2,i3o,1,2)-45.*rsxy(i1o+3,i2o-1,i3o,1,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,1,2)-9.*rsxy(i1o+3,i2o+2,i3o,1,2)+
     & rsxy(i1o+3,i2o+3,i3o,1,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_szss = (2.*rsxy(i1o,i2o-3,i3o,1,2)-27.*rsxy(
     & i1o,i2o-2,i3o,1,2)+270.*rsxy(i1o,i2o-1,i3o,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o,i2o+1,i3o,1,2)-27.*rsxy(i1o,i2o+2,
     & i3o,1,2)+2.*rsxy(i1o,i2o+3,i3o,1,2))/(180.*dr(1)**2)
                        aj_szrt = (-(-rsxy(i1o-3,i2o,i3o-3,1,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,1,2)-45.*rsxy(i1o-3,i2o,i3o-1,1,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,1,2)-9.*rsxy(i1o-3,i2o,i3o+2,1,2)+rsxy(
     & i1o-3,i2o,i3o+3,1,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,1,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,1,2)-45.*rsxy(i1o-2,i2o,i3o-1,1,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,1,2)-9.*rsxy(i1o-2,i2o,i3o+2,1,2)+
     & rsxy(i1o-2,i2o,i3o+3,1,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o-1,i2o,i3o-2,1,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o-1,i2o,i3o+1,1,2)-9.*rsxy(i1o-1,i2o,i3o+2,1,
     & 2)+rsxy(i1o-1,i2o,i3o+3,1,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o+1,i2o,i3o-2,1,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o+1,i2o,i3o+1,1,2)-9.*rsxy(i1o+1,i2o,i3o+2,1,
     & 2)+rsxy(i1o+1,i2o,i3o+3,1,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,1,2)+9.*rsxy(i1o+2,i2o,i3o-2,1,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,1,2)+45.*rsxy(i1o+2,i2o,i3o+1,1,2)-9.*rsxy(i1o+2,i2o,i3o+2,1,
     & 2)+rsxy(i1o+2,i2o,i3o+3,1,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,1,2)+9.*rsxy(i1o+3,i2o,i3o-2,1,2)-45.*rsxy(i1o+3,i2o,i3o-1,1,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,1,2)-9.*rsxy(i1o+3,i2o,i3o+2,1,2)+
     & rsxy(i1o+3,i2o,i3o+3,1,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_szst = (-(-rsxy(i1o,i2o-3,i3o-3,1,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,1,2)-45.*rsxy(i1o,i2o-3,i3o-1,1,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,1,2)-9.*rsxy(i1o,i2o-3,i3o+2,1,2)+rsxy(
     & i1o,i2o-3,i3o+3,1,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,1,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,1,2)-45.*rsxy(i1o,i2o-2,i3o-1,1,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,1,2)-9.*rsxy(i1o,i2o-2,i3o+2,1,2)+
     & rsxy(i1o,i2o-2,i3o+3,1,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o-1,i3o-2,1,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o-1,i3o+1,1,2)-9.*rsxy(i1o,i2o-1,i3o+2,1,
     & 2)+rsxy(i1o,i2o-1,i3o+3,1,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o+1,i3o-2,1,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o+1,i3o+1,1,2)-9.*rsxy(i1o,i2o+1,i3o+2,1,
     & 2)+rsxy(i1o,i2o+1,i3o+3,1,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,1,2)+9.*rsxy(i1o,i2o+2,i3o-2,1,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,1,2)+45.*rsxy(i1o,i2o+2,i3o+1,1,2)-9.*rsxy(i1o,i2o+2,i3o+2,1,
     & 2)+rsxy(i1o,i2o+2,i3o+3,1,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,1,2)+9.*rsxy(i1o,i2o+3,i3o-2,1,2)-45.*rsxy(i1o,i2o+3,i3o-1,1,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,1,2)-9.*rsxy(i1o,i2o+3,i3o+2,1,2)+
     & rsxy(i1o,i2o+3,i3o+3,1,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_sztt = (2.*rsxy(i1o,i2o,i3o-3,1,2)-27.*rsxy(
     & i1o,i2o,i3o-2,1,2)+270.*rsxy(i1o,i2o,i3o-1,1,2)-490.*rsxy(i1o,
     & i2o,i3o,1,2)+270.*rsxy(i1o,i2o,i3o+1,1,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,1,2)+2.*rsxy(i1o,i2o,i3o+3,1,2))/(180.*dr(2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (-rsxy(i1o-3,i2o,i3o,2,2)+9.*rsxy(i1o-
     & 2,i2o,i3o,2,2)-45.*rsxy(i1o-1,i2o,i3o,2,2)+45.*rsxy(i1o+1,i2o,
     & i3o,2,2)-9.*rsxy(i1o+2,i2o,i3o,2,2)+rsxy(i1o+3,i2o,i3o,2,2))/(
     & 60.*dr(0))
                        aj_tzs = (-rsxy(i1o,i2o-3,i3o,2,2)+9.*rsxy(i1o,
     & i2o-2,i3o,2,2)-45.*rsxy(i1o,i2o-1,i3o,2,2)+45.*rsxy(i1o,i2o+1,
     & i3o,2,2)-9.*rsxy(i1o,i2o+2,i3o,2,2)+rsxy(i1o,i2o+3,i3o,2,2))/(
     & 60.*dr(1))
                        aj_tzt = (-rsxy(i1o,i2o,i3o-3,2,2)+9.*rsxy(i1o,
     & i2o,i3o-2,2,2)-45.*rsxy(i1o,i2o,i3o-1,2,2)+45.*rsxy(i1o,i2o,
     & i3o+1,2,2)-9.*rsxy(i1o,i2o,i3o+2,2,2)+rsxy(i1o,i2o,i3o+3,2,2))
     & /(60.*dr(2))
                        aj_tzrr = (2.*rsxy(i1o-3,i2o,i3o,2,2)-27.*rsxy(
     & i1o-2,i2o,i3o,2,2)+270.*rsxy(i1o-1,i2o,i3o,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o+1,i2o,i3o,2,2)-27.*rsxy(i1o+2,i2o,
     & i3o,2,2)+2.*rsxy(i1o+3,i2o,i3o,2,2))/(180.*dr(0)**2)
                        aj_tzrs = (-(-rsxy(i1o-3,i2o-3,i3o,2,2)+9.*
     & rsxy(i1o-3,i2o-2,i3o,2,2)-45.*rsxy(i1o-3,i2o-1,i3o,2,2)+45.*
     & rsxy(i1o-3,i2o+1,i3o,2,2)-9.*rsxy(i1o-3,i2o+2,i3o,2,2)+rsxy(
     & i1o-3,i2o+3,i3o,2,2))/(60.*dr(1))+9.*(-rsxy(i1o-2,i2o-3,i3o,2,
     & 2)+9.*rsxy(i1o-2,i2o-2,i3o,2,2)-45.*rsxy(i1o-2,i2o-1,i3o,2,2)+
     & 45.*rsxy(i1o-2,i2o+1,i3o,2,2)-9.*rsxy(i1o-2,i2o+2,i3o,2,2)+
     & rsxy(i1o-2,i2o+3,i3o,2,2))/(60.*dr(1))-45.*(-rsxy(i1o-1,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o-1,i2o-2,i3o,2,2)-45.*rsxy(i1o-1,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o-1,i2o+1,i3o,2,2)-9.*rsxy(i1o-1,i2o+2,i3o,2,2)
     & +rsxy(i1o-1,i2o+3,i3o,2,2))/(60.*dr(1))+45.*(-rsxy(i1o+1,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o+1,i2o-2,i3o,2,2)-45.*rsxy(i1o+1,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o+1,i2o+1,i3o,2,2)-9.*rsxy(i1o+1,i2o+2,i3o,2,2)
     & +rsxy(i1o+1,i2o+3,i3o,2,2))/(60.*dr(1))-9.*(-rsxy(i1o+2,i2o-3,
     & i3o,2,2)+9.*rsxy(i1o+2,i2o-2,i3o,2,2)-45.*rsxy(i1o+2,i2o-1,i3o,
     & 2,2)+45.*rsxy(i1o+2,i2o+1,i3o,2,2)-9.*rsxy(i1o+2,i2o+2,i3o,2,2)
     & +rsxy(i1o+2,i2o+3,i3o,2,2))/(60.*dr(1))+(-rsxy(i1o+3,i2o-3,i3o,
     & 2,2)+9.*rsxy(i1o+3,i2o-2,i3o,2,2)-45.*rsxy(i1o+3,i2o-1,i3o,2,2)
     & +45.*rsxy(i1o+3,i2o+1,i3o,2,2)-9.*rsxy(i1o+3,i2o+2,i3o,2,2)+
     & rsxy(i1o+3,i2o+3,i3o,2,2))/(60.*dr(1)))/(60.*dr(0))
                        aj_tzss = (2.*rsxy(i1o,i2o-3,i3o,2,2)-27.*rsxy(
     & i1o,i2o-2,i3o,2,2)+270.*rsxy(i1o,i2o-1,i3o,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o,i2o+1,i3o,2,2)-27.*rsxy(i1o,i2o+2,
     & i3o,2,2)+2.*rsxy(i1o,i2o+3,i3o,2,2))/(180.*dr(1)**2)
                        aj_tzrt = (-(-rsxy(i1o-3,i2o,i3o-3,2,2)+9.*
     & rsxy(i1o-3,i2o,i3o-2,2,2)-45.*rsxy(i1o-3,i2o,i3o-1,2,2)+45.*
     & rsxy(i1o-3,i2o,i3o+1,2,2)-9.*rsxy(i1o-3,i2o,i3o+2,2,2)+rsxy(
     & i1o-3,i2o,i3o+3,2,2))/(60.*dr(2))+9.*(-rsxy(i1o-2,i2o,i3o-3,2,
     & 2)+9.*rsxy(i1o-2,i2o,i3o-2,2,2)-45.*rsxy(i1o-2,i2o,i3o-1,2,2)+
     & 45.*rsxy(i1o-2,i2o,i3o+1,2,2)-9.*rsxy(i1o-2,i2o,i3o+2,2,2)+
     & rsxy(i1o-2,i2o,i3o+3,2,2))/(60.*dr(2))-45.*(-rsxy(i1o-1,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o-1,i2o,i3o-2,2,2)-45.*rsxy(i1o-1,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o-1,i2o,i3o+1,2,2)-9.*rsxy(i1o-1,i2o,i3o+2,2,
     & 2)+rsxy(i1o-1,i2o,i3o+3,2,2))/(60.*dr(2))+45.*(-rsxy(i1o+1,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o+1,i2o,i3o-2,2,2)-45.*rsxy(i1o+1,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o+1,i2o,i3o+1,2,2)-9.*rsxy(i1o+1,i2o,i3o+2,2,
     & 2)+rsxy(i1o+1,i2o,i3o+3,2,2))/(60.*dr(2))-9.*(-rsxy(i1o+2,i2o,
     & i3o-3,2,2)+9.*rsxy(i1o+2,i2o,i3o-2,2,2)-45.*rsxy(i1o+2,i2o,i3o-
     & 1,2,2)+45.*rsxy(i1o+2,i2o,i3o+1,2,2)-9.*rsxy(i1o+2,i2o,i3o+2,2,
     & 2)+rsxy(i1o+2,i2o,i3o+3,2,2))/(60.*dr(2))+(-rsxy(i1o+3,i2o,i3o-
     & 3,2,2)+9.*rsxy(i1o+3,i2o,i3o-2,2,2)-45.*rsxy(i1o+3,i2o,i3o-1,2,
     & 2)+45.*rsxy(i1o+3,i2o,i3o+1,2,2)-9.*rsxy(i1o+3,i2o,i3o+2,2,2)+
     & rsxy(i1o+3,i2o,i3o+3,2,2))/(60.*dr(2)))/(60.*dr(0))
                        aj_tzst = (-(-rsxy(i1o,i2o-3,i3o-3,2,2)+9.*
     & rsxy(i1o,i2o-3,i3o-2,2,2)-45.*rsxy(i1o,i2o-3,i3o-1,2,2)+45.*
     & rsxy(i1o,i2o-3,i3o+1,2,2)-9.*rsxy(i1o,i2o-3,i3o+2,2,2)+rsxy(
     & i1o,i2o-3,i3o+3,2,2))/(60.*dr(2))+9.*(-rsxy(i1o,i2o-2,i3o-3,2,
     & 2)+9.*rsxy(i1o,i2o-2,i3o-2,2,2)-45.*rsxy(i1o,i2o-2,i3o-1,2,2)+
     & 45.*rsxy(i1o,i2o-2,i3o+1,2,2)-9.*rsxy(i1o,i2o-2,i3o+2,2,2)+
     & rsxy(i1o,i2o-2,i3o+3,2,2))/(60.*dr(2))-45.*(-rsxy(i1o,i2o-1,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o-1,i3o-2,2,2)-45.*rsxy(i1o,i2o-1,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o-1,i3o+1,2,2)-9.*rsxy(i1o,i2o-1,i3o+2,2,
     & 2)+rsxy(i1o,i2o-1,i3o+3,2,2))/(60.*dr(2))+45.*(-rsxy(i1o,i2o+1,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o+1,i3o-2,2,2)-45.*rsxy(i1o,i2o+1,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o+1,i3o+1,2,2)-9.*rsxy(i1o,i2o+1,i3o+2,2,
     & 2)+rsxy(i1o,i2o+1,i3o+3,2,2))/(60.*dr(2))-9.*(-rsxy(i1o,i2o+2,
     & i3o-3,2,2)+9.*rsxy(i1o,i2o+2,i3o-2,2,2)-45.*rsxy(i1o,i2o+2,i3o-
     & 1,2,2)+45.*rsxy(i1o,i2o+2,i3o+1,2,2)-9.*rsxy(i1o,i2o+2,i3o+2,2,
     & 2)+rsxy(i1o,i2o+2,i3o+3,2,2))/(60.*dr(2))+(-rsxy(i1o,i2o+3,i3o-
     & 3,2,2)+9.*rsxy(i1o,i2o+3,i3o-2,2,2)-45.*rsxy(i1o,i2o+3,i3o-1,2,
     & 2)+45.*rsxy(i1o,i2o+3,i3o+1,2,2)-9.*rsxy(i1o,i2o+3,i3o+2,2,2)+
     & rsxy(i1o,i2o+3,i3o+3,2,2))/(60.*dr(2)))/(60.*dr(1))
                        aj_tztt = (2.*rsxy(i1o,i2o,i3o-3,2,2)-27.*rsxy(
     & i1o,i2o,i3o-2,2,2)+270.*rsxy(i1o,i2o,i3o-1,2,2)-490.*rsxy(i1o,
     & i2o,i3o,2,2)+270.*rsxy(i1o,i2o,i3o+1,2,2)-27.*rsxy(i1o,i2o,i3o+
     & 2,2,2)+2.*rsxy(i1o,i2o,i3o+3,2,2))/(180.*dr(2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     else if (order.eq.8) then
                        aj_rx = rsxy(i1o,i2o,i3o,0,0)
                        aj_rxr = (3.*rsxy(i1o-4,i2o,i3o,0,0)-32.*rsxy(
     & i1o-3,i2o,i3o,0,0)+168.*rsxy(i1o-2,i2o,i3o,0,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,0)+672.*rsxy(i1o+1,i2o,i3o,0,0)-168.*rsxy(i1o+2,
     & i2o,i3o,0,0)+32.*rsxy(i1o+3,i2o,i3o,0,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,0))/(840.*dr(0))
                        aj_rxs = (3.*rsxy(i1o,i2o-4,i3o,0,0)-32.*rsxy(
     & i1o,i2o-3,i3o,0,0)+168.*rsxy(i1o,i2o-2,i3o,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o,i2o+1,i3o,0,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,0)+32.*rsxy(i1o,i2o+3,i3o,0,0)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 0))/(840.*dr(1))
                        aj_rxt = (3.*rsxy(i1o,i2o,i3o-4,0,0)-32.*rsxy(
     & i1o,i2o,i3o-3,0,0)+168.*rsxy(i1o,i2o,i3o-2,0,0)-672.*rsxy(i1o,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o,i2o,i3o+1,0,0)-168.*rsxy(i1o,i2o,
     & i3o+2,0,0)+32.*rsxy(i1o,i2o,i3o+3,0,0)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 0))/(840.*dr(2))
                        aj_rxrr = (-9.*rsxy(i1o-4,i2o,i3o,0,0)+128.*
     & rsxy(i1o-3,i2o,i3o,0,0)-1008.*rsxy(i1o-2,i2o,i3o,0,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,0)-1008.*rsxy(i1o+2,i2o,i3o,0,0)+128.*
     & rsxy(i1o+3,i2o,i3o,0,0)-9.*rsxy(i1o+4,i2o,i3o,0,0))/(5040.*dr(
     & 0)**2)
                        aj_rxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,0)+168.*rsxy(i1o-4,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,0)+672.*rsxy(i1o-4,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,0)+32.*rsxy(i1o-4,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o-3,i2o-3,i3o,0,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o-3,i2o-1,i3o,0,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o-3,i2o+2,i3o,0,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o-3,i2o+4,i3o,0,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,0)-32.*rsxy(i1o-2,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,0)-672.*rsxy(i1o-2,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,0)-168.*rsxy(i1o-2,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,0)-3.*rsxy(i1o-2,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o-1,i2o-2,i3o,0,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o-1,i2o+1,i3o,0,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o-1,i2o+3,i3o,0,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,0)+168.*rsxy(i1o+1,i2o-2,i3o,0,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,0)+672.*rsxy(i1o+1,i2o+1,i3o,0,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,0)+32.*rsxy(i1o+1,i2o+3,i3o,0,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,0)-32.*rsxy(i1o+2,i2o-3,i3o,0,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,0)-672.*rsxy(i1o+2,i2o-1,i3o,0,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,0)-168.*rsxy(i1o+2,i2o+2,i3o,0,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,0)-3.*rsxy(i1o+2,i2o+4,i3o,0,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,0)-32.*rsxy(i1o+3,i2o-3,i3o,0,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,0)-672.*rsxy(i1o+3,i2o-1,i3o,0,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,0)-168.*rsxy(i1o+3,i2o+2,i3o,0,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,0)-3.*rsxy(i1o+3,i2o+4,i3o,0,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,0)+168.*rsxy(i1o+4,i2o-2,i3o,0,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,0)+672.*rsxy(i1o+4,i2o+1,i3o,0,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,0)+32.*rsxy(i1o+4,i2o+3,i3o,0,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_rxss = (-9.*rsxy(i1o,i2o-4,i3o,0,0)+128.*
     & rsxy(i1o,i2o-3,i3o,0,0)-1008.*rsxy(i1o,i2o-2,i3o,0,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,0)-1008.*rsxy(i1o,i2o+2,i3o,0,0)+128.*
     & rsxy(i1o,i2o+3,i3o,0,0)-9.*rsxy(i1o,i2o+4,i3o,0,0))/(5040.*dr(
     & 1)**2)
                        aj_rxrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,0)+168.*rsxy(i1o-4,i2o,i3o-2,0,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,0)+672.*rsxy(i1o-4,i2o,i3o+1,0,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,0)+32.*rsxy(i1o-4,i2o,i3o+3,0,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,0)-32.*rsxy(i1o-3,i2o,i3o-3,0,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,0)-672.*rsxy(i1o-3,i2o,i3o-1,0,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,0)-168.*rsxy(i1o-3,i2o,i3o+2,0,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,0)-3.*rsxy(i1o-3,i2o,i3o+4,0,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,0)-32.*rsxy(i1o-2,i2o,i3o-3,0,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,0)-672.*rsxy(i1o-2,i2o,i3o-1,0,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,0)-168.*rsxy(i1o-2,i2o,i3o+2,0,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,0)-3.*rsxy(i1o-2,i2o,i3o+4,0,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,0)+168.*rsxy(i1o-1,i2o,i3o-2,0,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o-1,i2o,i3o+1,0,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,0)+32.*rsxy(i1o-1,i2o,i3o+3,0,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,0)+168.*rsxy(i1o+1,i2o,i3o-2,0,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,0)+672.*rsxy(i1o+1,i2o,i3o+1,0,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,0)+32.*rsxy(i1o+1,i2o,i3o+3,0,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,0)-32.*rsxy(i1o+2,i2o,i3o-3,0,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,0)-672.*rsxy(i1o+2,i2o,i3o-1,0,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,0)-168.*rsxy(i1o+2,i2o,i3o+2,0,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,0)-3.*rsxy(i1o+2,i2o,i3o+4,0,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,0)-32.*rsxy(i1o+3,i2o,i3o-3,0,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,0)-672.*rsxy(i1o+3,i2o,i3o-1,0,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,0)-168.*rsxy(i1o+3,i2o,i3o+2,0,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,0)-3.*rsxy(i1o+3,i2o,i3o+4,0,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,0)+168.*rsxy(i1o+4,i2o,i3o-2,0,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,0)+672.*rsxy(i1o+4,i2o,i3o+1,0,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,0)+32.*rsxy(i1o+4,i2o,i3o+3,0,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_rxst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,0)+168.*rsxy(i1o,i2o-4,i3o-2,0,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,0)+672.*rsxy(i1o,i2o-4,i3o+1,0,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,0)+32.*rsxy(i1o,i2o-4,i3o+3,0,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,0)-32.*rsxy(i1o,i2o-3,i3o-3,0,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,0)-672.*rsxy(i1o,i2o-3,i3o-1,0,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,0)-168.*rsxy(i1o,i2o-3,i3o+2,0,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,0)-3.*rsxy(i1o,i2o-3,i3o+4,0,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,0)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,0,0)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,0,0)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,0,0)-3.*rsxy(i1o,i2o-2,i3o+4,0,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,0)+168.*rsxy(i1o,i2o-1,i3o-2,0,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,0)+672.*rsxy(i1o,i2o-1,i3o+1,0,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,0)+32.*rsxy(i1o,i2o-1,i3o+3,0,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,0)+168.*rsxy(i1o,i2o+1,i3o-2,0,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,0)+672.*rsxy(i1o,i2o+1,i3o+1,0,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,0)+32.*rsxy(i1o,i2o+1,i3o+3,0,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,0)-32.*rsxy(i1o,i2o+2,i3o-3,0,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,0)-672.*rsxy(i1o,i2o+2,i3o-1,0,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,0)-168.*rsxy(i1o,i2o+2,i3o+2,0,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,0)-3.*rsxy(i1o,i2o+2,i3o+4,0,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,0)-32.*rsxy(i1o,i2o+3,i3o-3,0,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,0)-672.*rsxy(i1o,i2o+3,i3o-1,0,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,0)-168.*rsxy(i1o,i2o+3,i3o+2,0,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,0)-3.*rsxy(i1o,i2o+3,i3o+4,0,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,0)+168.*rsxy(i1o,i2o+4,i3o-2,0,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,0)+672.*rsxy(i1o,i2o+4,i3o+1,0,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,0)+32.*rsxy(i1o,i2o+4,i3o+3,0,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_rxtt = (-9.*rsxy(i1o,i2o,i3o-4,0,0)+128.*
     & rsxy(i1o,i2o,i3o-3,0,0)-1008.*rsxy(i1o,i2o,i3o-2,0,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,0)-14350.*rsxy(i1o,i2o,i3o,0,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,0)-1008.*rsxy(i1o,i2o,i3o+2,0,0)+128.*
     & rsxy(i1o,i2o,i3o+3,0,0)-9.*rsxy(i1o,i2o,i3o+4,0,0))/(5040.*dr(
     & 2)**2)
                        aj_sx = rsxy(i1o,i2o,i3o,1,0)
                        aj_sxr = (3.*rsxy(i1o-4,i2o,i3o,1,0)-32.*rsxy(
     & i1o-3,i2o,i3o,1,0)+168.*rsxy(i1o-2,i2o,i3o,1,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,0)+672.*rsxy(i1o+1,i2o,i3o,1,0)-168.*rsxy(i1o+2,
     & i2o,i3o,1,0)+32.*rsxy(i1o+3,i2o,i3o,1,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,0))/(840.*dr(0))
                        aj_sxs = (3.*rsxy(i1o,i2o-4,i3o,1,0)-32.*rsxy(
     & i1o,i2o-3,i3o,1,0)+168.*rsxy(i1o,i2o-2,i3o,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o,i2o+1,i3o,1,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,0)+32.*rsxy(i1o,i2o+3,i3o,1,0)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 0))/(840.*dr(1))
                        aj_sxt = (3.*rsxy(i1o,i2o,i3o-4,1,0)-32.*rsxy(
     & i1o,i2o,i3o-3,1,0)+168.*rsxy(i1o,i2o,i3o-2,1,0)-672.*rsxy(i1o,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o,i2o,i3o+1,1,0)-168.*rsxy(i1o,i2o,
     & i3o+2,1,0)+32.*rsxy(i1o,i2o,i3o+3,1,0)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 0))/(840.*dr(2))
                        aj_sxrr = (-9.*rsxy(i1o-4,i2o,i3o,1,0)+128.*
     & rsxy(i1o-3,i2o,i3o,1,0)-1008.*rsxy(i1o-2,i2o,i3o,1,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,0)-1008.*rsxy(i1o+2,i2o,i3o,1,0)+128.*
     & rsxy(i1o+3,i2o,i3o,1,0)-9.*rsxy(i1o+4,i2o,i3o,1,0))/(5040.*dr(
     & 0)**2)
                        aj_sxrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,0)+168.*rsxy(i1o-4,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,0)+672.*rsxy(i1o-4,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,0)+32.*rsxy(i1o-4,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o-3,i2o-3,i3o,1,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o-3,i2o-1,i3o,1,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o-3,i2o+2,i3o,1,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o-3,i2o+4,i3o,1,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,0)-32.*rsxy(i1o-2,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,0)-672.*rsxy(i1o-2,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,0)-168.*rsxy(i1o-2,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,0)-3.*rsxy(i1o-2,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o-1,i2o-2,i3o,1,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o-1,i2o+1,i3o,1,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o-1,i2o+3,i3o,1,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,0)+168.*rsxy(i1o+1,i2o-2,i3o,1,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,0)+672.*rsxy(i1o+1,i2o+1,i3o,1,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,0)+32.*rsxy(i1o+1,i2o+3,i3o,1,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,0)-32.*rsxy(i1o+2,i2o-3,i3o,1,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,0)-672.*rsxy(i1o+2,i2o-1,i3o,1,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,0)-168.*rsxy(i1o+2,i2o+2,i3o,1,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,0)-3.*rsxy(i1o+2,i2o+4,i3o,1,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,0)-32.*rsxy(i1o+3,i2o-3,i3o,1,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,0)-672.*rsxy(i1o+3,i2o-1,i3o,1,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,0)-168.*rsxy(i1o+3,i2o+2,i3o,1,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,0)-3.*rsxy(i1o+3,i2o+4,i3o,1,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,0)+168.*rsxy(i1o+4,i2o-2,i3o,1,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,0)+672.*rsxy(i1o+4,i2o+1,i3o,1,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,0)+32.*rsxy(i1o+4,i2o+3,i3o,1,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_sxss = (-9.*rsxy(i1o,i2o-4,i3o,1,0)+128.*
     & rsxy(i1o,i2o-3,i3o,1,0)-1008.*rsxy(i1o,i2o-2,i3o,1,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,0)-1008.*rsxy(i1o,i2o+2,i3o,1,0)+128.*
     & rsxy(i1o,i2o+3,i3o,1,0)-9.*rsxy(i1o,i2o+4,i3o,1,0))/(5040.*dr(
     & 1)**2)
                        aj_sxrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,0)+168.*rsxy(i1o-4,i2o,i3o-2,1,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,0)+672.*rsxy(i1o-4,i2o,i3o+1,1,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,0)+32.*rsxy(i1o-4,i2o,i3o+3,1,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,0)-32.*rsxy(i1o-3,i2o,i3o-3,1,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,0)-672.*rsxy(i1o-3,i2o,i3o-1,1,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,0)-168.*rsxy(i1o-3,i2o,i3o+2,1,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,0)-3.*rsxy(i1o-3,i2o,i3o+4,1,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,0)-32.*rsxy(i1o-2,i2o,i3o-3,1,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,0)-672.*rsxy(i1o-2,i2o,i3o-1,1,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,0)-168.*rsxy(i1o-2,i2o,i3o+2,1,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,0)-3.*rsxy(i1o-2,i2o,i3o+4,1,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,0)+168.*rsxy(i1o-1,i2o,i3o-2,1,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o-1,i2o,i3o+1,1,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,0)+32.*rsxy(i1o-1,i2o,i3o+3,1,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,0)+168.*rsxy(i1o+1,i2o,i3o-2,1,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,0)+672.*rsxy(i1o+1,i2o,i3o+1,1,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,0)+32.*rsxy(i1o+1,i2o,i3o+3,1,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,0)-32.*rsxy(i1o+2,i2o,i3o-3,1,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,0)-672.*rsxy(i1o+2,i2o,i3o-1,1,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,0)-168.*rsxy(i1o+2,i2o,i3o+2,1,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,0)-3.*rsxy(i1o+2,i2o,i3o+4,1,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,0)-32.*rsxy(i1o+3,i2o,i3o-3,1,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,0)-672.*rsxy(i1o+3,i2o,i3o-1,1,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,0)-168.*rsxy(i1o+3,i2o,i3o+2,1,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,0)-3.*rsxy(i1o+3,i2o,i3o+4,1,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,0)+168.*rsxy(i1o+4,i2o,i3o-2,1,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,0)+672.*rsxy(i1o+4,i2o,i3o+1,1,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,0)+32.*rsxy(i1o+4,i2o,i3o+3,1,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_sxst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,0)+168.*rsxy(i1o,i2o-4,i3o-2,1,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,0)+672.*rsxy(i1o,i2o-4,i3o+1,1,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,0)+32.*rsxy(i1o,i2o-4,i3o+3,1,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,0)-32.*rsxy(i1o,i2o-3,i3o-3,1,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,0)-672.*rsxy(i1o,i2o-3,i3o-1,1,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,0)-168.*rsxy(i1o,i2o-3,i3o+2,1,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,0)-3.*rsxy(i1o,i2o-3,i3o+4,1,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,0)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,1,0)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,1,0)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,1,0)-3.*rsxy(i1o,i2o-2,i3o+4,1,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,0)+168.*rsxy(i1o,i2o-1,i3o-2,1,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,0)+672.*rsxy(i1o,i2o-1,i3o+1,1,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,0)+32.*rsxy(i1o,i2o-1,i3o+3,1,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,0)+168.*rsxy(i1o,i2o+1,i3o-2,1,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,0)+672.*rsxy(i1o,i2o+1,i3o+1,1,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,0)+32.*rsxy(i1o,i2o+1,i3o+3,1,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,0)-32.*rsxy(i1o,i2o+2,i3o-3,1,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,0)-672.*rsxy(i1o,i2o+2,i3o-1,1,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,0)-168.*rsxy(i1o,i2o+2,i3o+2,1,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,0)-3.*rsxy(i1o,i2o+2,i3o+4,1,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,0)-32.*rsxy(i1o,i2o+3,i3o-3,1,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,0)-672.*rsxy(i1o,i2o+3,i3o-1,1,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,0)-168.*rsxy(i1o,i2o+3,i3o+2,1,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,0)-3.*rsxy(i1o,i2o+3,i3o+4,1,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,0)+168.*rsxy(i1o,i2o+4,i3o-2,1,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,0)+672.*rsxy(i1o,i2o+4,i3o+1,1,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,0)+32.*rsxy(i1o,i2o+4,i3o+3,1,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_sxtt = (-9.*rsxy(i1o,i2o,i3o-4,1,0)+128.*
     & rsxy(i1o,i2o,i3o-3,1,0)-1008.*rsxy(i1o,i2o,i3o-2,1,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,0)-14350.*rsxy(i1o,i2o,i3o,1,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,0)-1008.*rsxy(i1o,i2o,i3o+2,1,0)+128.*
     & rsxy(i1o,i2o,i3o+3,1,0)-9.*rsxy(i1o,i2o,i3o+4,1,0))/(5040.*dr(
     & 2)**2)
                        aj_tx = rsxy(i1o,i2o,i3o,2,0)
                        aj_txr = (3.*rsxy(i1o-4,i2o,i3o,2,0)-32.*rsxy(
     & i1o-3,i2o,i3o,2,0)+168.*rsxy(i1o-2,i2o,i3o,2,0)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,0)+672.*rsxy(i1o+1,i2o,i3o,2,0)-168.*rsxy(i1o+2,
     & i2o,i3o,2,0)+32.*rsxy(i1o+3,i2o,i3o,2,0)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,0))/(840.*dr(0))
                        aj_txs = (3.*rsxy(i1o,i2o-4,i3o,2,0)-32.*rsxy(
     & i1o,i2o-3,i3o,2,0)+168.*rsxy(i1o,i2o-2,i3o,2,0)-672.*rsxy(i1o,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o,i2o+1,i3o,2,0)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,0)+32.*rsxy(i1o,i2o+3,i3o,2,0)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 0))/(840.*dr(1))
                        aj_txt = (3.*rsxy(i1o,i2o,i3o-4,2,0)-32.*rsxy(
     & i1o,i2o,i3o-3,2,0)+168.*rsxy(i1o,i2o,i3o-2,2,0)-672.*rsxy(i1o,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o,i2o,i3o+1,2,0)-168.*rsxy(i1o,i2o,
     & i3o+2,2,0)+32.*rsxy(i1o,i2o,i3o+3,2,0)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 0))/(840.*dr(2))
                        aj_txrr = (-9.*rsxy(i1o-4,i2o,i3o,2,0)+128.*
     & rsxy(i1o-3,i2o,i3o,2,0)-1008.*rsxy(i1o-2,i2o,i3o,2,0)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,0)-1008.*rsxy(i1o+2,i2o,i3o,2,0)+128.*
     & rsxy(i1o+3,i2o,i3o,2,0)-9.*rsxy(i1o+4,i2o,i3o,2,0))/(5040.*dr(
     & 0)**2)
                        aj_txrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,0)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,0)+168.*rsxy(i1o-4,i2o-2,i3o,2,0)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,0)+672.*rsxy(i1o-4,i2o+1,i3o,2,0)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,0)+32.*rsxy(i1o-4,i2o+3,i3o,2,0)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,0))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,0)-32.*rsxy(i1o-3,i2o-3,i3o,2,0)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,0)-672.*rsxy(i1o-3,i2o-1,i3o,2,0)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,0)-168.*rsxy(i1o-3,i2o+2,i3o,2,0)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,0)-3.*rsxy(i1o-3,i2o+4,i3o,2,0))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,0)-32.*rsxy(i1o-2,i2o-3,i3o,2,0)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,0)-672.*rsxy(i1o-2,i2o-1,i3o,2,0)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,0)-168.*rsxy(i1o-2,i2o+2,i3o,2,0)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,0)-3.*rsxy(i1o-2,i2o+4,i3o,2,0))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,0)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,0)+168.*rsxy(i1o-1,i2o-2,i3o,2,0)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o-1,i2o+1,i3o,2,0)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,0)+32.*rsxy(i1o-1,i2o+3,i3o,2,0)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,0))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,0)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,0)+168.*rsxy(i1o+1,i2o-2,i3o,2,0)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,0)+672.*rsxy(i1o+1,i2o+1,i3o,2,0)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,0)+32.*rsxy(i1o+1,i2o+3,i3o,2,0)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,0))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,0)-32.*rsxy(i1o+2,i2o-3,i3o,2,0)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,0)-672.*rsxy(i1o+2,i2o-1,i3o,2,0)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,0)-168.*rsxy(i1o+2,i2o+2,i3o,2,0)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,0)-3.*rsxy(i1o+2,i2o+4,i3o,2,0))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,0)-32.*rsxy(i1o+3,i2o-3,i3o,2,0)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,0)-672.*rsxy(i1o+3,i2o-1,i3o,2,0)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,0)-168.*rsxy(i1o+3,i2o+2,i3o,2,0)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,0)-3.*rsxy(i1o+3,i2o+4,i3o,2,0))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,0)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,0)+168.*rsxy(i1o+4,i2o-2,i3o,2,0)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,0)+672.*rsxy(i1o+4,i2o+1,i3o,2,0)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,0)+32.*rsxy(i1o+4,i2o+3,i3o,2,0)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,0))/(840.*dr(1)))/(840.*dr(0))
                        aj_txss = (-9.*rsxy(i1o,i2o-4,i3o,2,0)+128.*
     & rsxy(i1o,i2o-3,i3o,2,0)-1008.*rsxy(i1o,i2o-2,i3o,2,0)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,0)-1008.*rsxy(i1o,i2o+2,i3o,2,0)+128.*
     & rsxy(i1o,i2o+3,i3o,2,0)-9.*rsxy(i1o,i2o+4,i3o,2,0))/(5040.*dr(
     & 1)**2)
                        aj_txrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,0)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,0)+168.*rsxy(i1o-4,i2o,i3o-2,2,0)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,0)+672.*rsxy(i1o-4,i2o,i3o+1,2,0)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,0)+32.*rsxy(i1o-4,i2o,i3o+3,2,0)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,0))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,0)-32.*rsxy(i1o-3,i2o,i3o-3,2,0)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,0)-672.*rsxy(i1o-3,i2o,i3o-1,2,0)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,0)-168.*rsxy(i1o-3,i2o,i3o+2,2,0)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,0)-3.*rsxy(i1o-3,i2o,i3o+4,2,0))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,0)-32.*rsxy(i1o-2,i2o,i3o-3,2,0)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,0)-672.*rsxy(i1o-2,i2o,i3o-1,2,0)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,0)-168.*rsxy(i1o-2,i2o,i3o+2,2,0)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,0)-3.*rsxy(i1o-2,i2o,i3o+4,2,0))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,0)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,0)+168.*rsxy(i1o-1,i2o,i3o-2,2,0)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o-1,i2o,i3o+1,2,0)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,0)+32.*rsxy(i1o-1,i2o,i3o+3,2,0)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,0))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,0)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,0)+168.*rsxy(i1o+1,i2o,i3o-2,2,0)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,0)+672.*rsxy(i1o+1,i2o,i3o+1,2,0)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,0)+32.*rsxy(i1o+1,i2o,i3o+3,2,0)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,0))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,0)-32.*rsxy(i1o+2,i2o,i3o-3,2,0)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,0)-672.*rsxy(i1o+2,i2o,i3o-1,2,0)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,0)-168.*rsxy(i1o+2,i2o,i3o+2,2,0)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,0)-3.*rsxy(i1o+2,i2o,i3o+4,2,0))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,0)-32.*rsxy(i1o+3,i2o,i3o-3,2,0)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,0)-672.*rsxy(i1o+3,i2o,i3o-1,2,0)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,0)-168.*rsxy(i1o+3,i2o,i3o+2,2,0)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,0)-3.*rsxy(i1o+3,i2o,i3o+4,2,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,0)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,0)+168.*rsxy(i1o+4,i2o,i3o-2,2,0)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,0)+672.*rsxy(i1o+4,i2o,i3o+1,2,0)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,0)+32.*rsxy(i1o+4,i2o,i3o+3,2,0)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,0))/(840.*dr(2)))/(840.*dr(0))
                        aj_txst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,0)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,0)+168.*rsxy(i1o,i2o-4,i3o-2,2,0)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,0)+672.*rsxy(i1o,i2o-4,i3o+1,2,0)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,0)+32.*rsxy(i1o,i2o-4,i3o+3,2,0)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,0))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,0)-32.*rsxy(i1o,i2o-3,i3o-3,2,0)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,0)-672.*rsxy(i1o,i2o-3,i3o-1,2,0)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,0)-168.*rsxy(i1o,i2o-3,i3o+2,2,0)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,0)-3.*rsxy(i1o,i2o-3,i3o+4,2,0))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,0)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 0)+168.*rsxy(i1o,i2o-2,i3o-2,2,0)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 0)+672.*rsxy(i1o,i2o-2,i3o+1,2,0)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 0)+32.*rsxy(i1o,i2o-2,i3o+3,2,0)-3.*rsxy(i1o,i2o-2,i3o+4,2,0))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,0)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,0)+168.*rsxy(i1o,i2o-1,i3o-2,2,0)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,0)+672.*rsxy(i1o,i2o-1,i3o+1,2,0)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,0)+32.*rsxy(i1o,i2o-1,i3o+3,2,0)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,0))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,0)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,0)+168.*rsxy(i1o,i2o+1,i3o-2,2,0)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,0)+672.*rsxy(i1o,i2o+1,i3o+1,2,0)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,0)+32.*rsxy(i1o,i2o+1,i3o+3,2,0)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,0))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,0)-32.*rsxy(i1o,i2o+2,i3o-3,2,0)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,0)-672.*rsxy(i1o,i2o+2,i3o-1,2,0)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,0)-168.*rsxy(i1o,i2o+2,i3o+2,2,0)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,0)-3.*rsxy(i1o,i2o+2,i3o+4,2,0))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,0)-32.*rsxy(i1o,i2o+3,i3o-3,2,0)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,0)-672.*rsxy(i1o,i2o+3,i3o-1,2,0)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,0)-168.*rsxy(i1o,i2o+3,i3o+2,2,0)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,0)-3.*rsxy(i1o,i2o+3,i3o+4,2,0))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,0)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,0)+168.*rsxy(i1o,i2o+4,i3o-2,2,0)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,0)+672.*rsxy(i1o,i2o+4,i3o+1,2,0)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,0)+32.*rsxy(i1o,i2o+4,i3o+3,2,0)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,0))/(840.*dr(2)))/(840.*dr(1))
                        aj_txtt = (-9.*rsxy(i1o,i2o,i3o-4,2,0)+128.*
     & rsxy(i1o,i2o,i3o-3,2,0)-1008.*rsxy(i1o,i2o,i3o-2,2,0)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,0)-14350.*rsxy(i1o,i2o,i3o,2,0)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,0)-1008.*rsxy(i1o,i2o,i3o+2,2,0)+128.*
     & rsxy(i1o,i2o,i3o+3,2,0)-9.*rsxy(i1o,i2o,i3o+4,2,0))/(5040.*dr(
     & 2)**2)
                        aj_ry = rsxy(i1o,i2o,i3o,0,1)
                        aj_ryr = (3.*rsxy(i1o-4,i2o,i3o,0,1)-32.*rsxy(
     & i1o-3,i2o,i3o,0,1)+168.*rsxy(i1o-2,i2o,i3o,0,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,1)+672.*rsxy(i1o+1,i2o,i3o,0,1)-168.*rsxy(i1o+2,
     & i2o,i3o,0,1)+32.*rsxy(i1o+3,i2o,i3o,0,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,1))/(840.*dr(0))
                        aj_rys = (3.*rsxy(i1o,i2o-4,i3o,0,1)-32.*rsxy(
     & i1o,i2o-3,i3o,0,1)+168.*rsxy(i1o,i2o-2,i3o,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o,i2o+1,i3o,0,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,1)+32.*rsxy(i1o,i2o+3,i3o,0,1)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 1))/(840.*dr(1))
                        aj_ryt = (3.*rsxy(i1o,i2o,i3o-4,0,1)-32.*rsxy(
     & i1o,i2o,i3o-3,0,1)+168.*rsxy(i1o,i2o,i3o-2,0,1)-672.*rsxy(i1o,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o,i2o,i3o+1,0,1)-168.*rsxy(i1o,i2o,
     & i3o+2,0,1)+32.*rsxy(i1o,i2o,i3o+3,0,1)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 1))/(840.*dr(2))
                        aj_ryrr = (-9.*rsxy(i1o-4,i2o,i3o,0,1)+128.*
     & rsxy(i1o-3,i2o,i3o,0,1)-1008.*rsxy(i1o-2,i2o,i3o,0,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,1)-1008.*rsxy(i1o+2,i2o,i3o,0,1)+128.*
     & rsxy(i1o+3,i2o,i3o,0,1)-9.*rsxy(i1o+4,i2o,i3o,0,1))/(5040.*dr(
     & 0)**2)
                        aj_ryrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,1)+168.*rsxy(i1o-4,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,1)+672.*rsxy(i1o-4,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,1)+32.*rsxy(i1o-4,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o-3,i2o-3,i3o,0,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o-3,i2o-1,i3o,0,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o-3,i2o+2,i3o,0,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o-3,i2o+4,i3o,0,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,1)-32.*rsxy(i1o-2,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,1)-672.*rsxy(i1o-2,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,1)-168.*rsxy(i1o-2,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,1)-3.*rsxy(i1o-2,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o-1,i2o-2,i3o,0,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o-1,i2o+1,i3o,0,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o-1,i2o+3,i3o,0,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,1)+168.*rsxy(i1o+1,i2o-2,i3o,0,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,1)+672.*rsxy(i1o+1,i2o+1,i3o,0,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,1)+32.*rsxy(i1o+1,i2o+3,i3o,0,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,1)-32.*rsxy(i1o+2,i2o-3,i3o,0,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,1)-672.*rsxy(i1o+2,i2o-1,i3o,0,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,1)-168.*rsxy(i1o+2,i2o+2,i3o,0,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,1)-3.*rsxy(i1o+2,i2o+4,i3o,0,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,1)-32.*rsxy(i1o+3,i2o-3,i3o,0,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,1)-672.*rsxy(i1o+3,i2o-1,i3o,0,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,1)-168.*rsxy(i1o+3,i2o+2,i3o,0,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,1)-3.*rsxy(i1o+3,i2o+4,i3o,0,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,1)+168.*rsxy(i1o+4,i2o-2,i3o,0,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,1)+672.*rsxy(i1o+4,i2o+1,i3o,0,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,1)+32.*rsxy(i1o+4,i2o+3,i3o,0,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_ryss = (-9.*rsxy(i1o,i2o-4,i3o,0,1)+128.*
     & rsxy(i1o,i2o-3,i3o,0,1)-1008.*rsxy(i1o,i2o-2,i3o,0,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,1)-1008.*rsxy(i1o,i2o+2,i3o,0,1)+128.*
     & rsxy(i1o,i2o+3,i3o,0,1)-9.*rsxy(i1o,i2o+4,i3o,0,1))/(5040.*dr(
     & 1)**2)
                        aj_ryrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,1)+168.*rsxy(i1o-4,i2o,i3o-2,0,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,1)+672.*rsxy(i1o-4,i2o,i3o+1,0,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,1)+32.*rsxy(i1o-4,i2o,i3o+3,0,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,1)-32.*rsxy(i1o-3,i2o,i3o-3,0,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,1)-672.*rsxy(i1o-3,i2o,i3o-1,0,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,1)-168.*rsxy(i1o-3,i2o,i3o+2,0,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,1)-3.*rsxy(i1o-3,i2o,i3o+4,0,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,1)-32.*rsxy(i1o-2,i2o,i3o-3,0,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,1)-672.*rsxy(i1o-2,i2o,i3o-1,0,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,1)-168.*rsxy(i1o-2,i2o,i3o+2,0,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,1)-3.*rsxy(i1o-2,i2o,i3o+4,0,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,1)+168.*rsxy(i1o-1,i2o,i3o-2,0,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o-1,i2o,i3o+1,0,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,1)+32.*rsxy(i1o-1,i2o,i3o+3,0,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,1)+168.*rsxy(i1o+1,i2o,i3o-2,0,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,1)+672.*rsxy(i1o+1,i2o,i3o+1,0,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,1)+32.*rsxy(i1o+1,i2o,i3o+3,0,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,1)-32.*rsxy(i1o+2,i2o,i3o-3,0,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,1)-672.*rsxy(i1o+2,i2o,i3o-1,0,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,1)-168.*rsxy(i1o+2,i2o,i3o+2,0,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,1)-3.*rsxy(i1o+2,i2o,i3o+4,0,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,1)-32.*rsxy(i1o+3,i2o,i3o-3,0,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,1)-672.*rsxy(i1o+3,i2o,i3o-1,0,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,1)-168.*rsxy(i1o+3,i2o,i3o+2,0,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,1)-3.*rsxy(i1o+3,i2o,i3o+4,0,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,1)+168.*rsxy(i1o+4,i2o,i3o-2,0,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,1)+672.*rsxy(i1o+4,i2o,i3o+1,0,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,1)+32.*rsxy(i1o+4,i2o,i3o+3,0,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_ryst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,1)+168.*rsxy(i1o,i2o-4,i3o-2,0,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,1)+672.*rsxy(i1o,i2o-4,i3o+1,0,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,1)+32.*rsxy(i1o,i2o-4,i3o+3,0,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,1)-32.*rsxy(i1o,i2o-3,i3o-3,0,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,1)-672.*rsxy(i1o,i2o-3,i3o-1,0,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,1)-168.*rsxy(i1o,i2o-3,i3o+2,0,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,1)-3.*rsxy(i1o,i2o-3,i3o+4,0,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,1)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,0,1)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,0,1)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,0,1)-3.*rsxy(i1o,i2o-2,i3o+4,0,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,1)+168.*rsxy(i1o,i2o-1,i3o-2,0,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,1)+672.*rsxy(i1o,i2o-1,i3o+1,0,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,1)+32.*rsxy(i1o,i2o-1,i3o+3,0,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,1)+168.*rsxy(i1o,i2o+1,i3o-2,0,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,1)+672.*rsxy(i1o,i2o+1,i3o+1,0,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,1)+32.*rsxy(i1o,i2o+1,i3o+3,0,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,1)-32.*rsxy(i1o,i2o+2,i3o-3,0,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,1)-672.*rsxy(i1o,i2o+2,i3o-1,0,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,1)-168.*rsxy(i1o,i2o+2,i3o+2,0,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,1)-3.*rsxy(i1o,i2o+2,i3o+4,0,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,1)-32.*rsxy(i1o,i2o+3,i3o-3,0,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,1)-672.*rsxy(i1o,i2o+3,i3o-1,0,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,1)-168.*rsxy(i1o,i2o+3,i3o+2,0,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,1)-3.*rsxy(i1o,i2o+3,i3o+4,0,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,1)+168.*rsxy(i1o,i2o+4,i3o-2,0,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,1)+672.*rsxy(i1o,i2o+4,i3o+1,0,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,1)+32.*rsxy(i1o,i2o+4,i3o+3,0,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_rytt = (-9.*rsxy(i1o,i2o,i3o-4,0,1)+128.*
     & rsxy(i1o,i2o,i3o-3,0,1)-1008.*rsxy(i1o,i2o,i3o-2,0,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,1)-14350.*rsxy(i1o,i2o,i3o,0,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,1)-1008.*rsxy(i1o,i2o,i3o+2,0,1)+128.*
     & rsxy(i1o,i2o,i3o+3,0,1)-9.*rsxy(i1o,i2o,i3o+4,0,1))/(5040.*dr(
     & 2)**2)
                        aj_sy = rsxy(i1o,i2o,i3o,1,1)
                        aj_syr = (3.*rsxy(i1o-4,i2o,i3o,1,1)-32.*rsxy(
     & i1o-3,i2o,i3o,1,1)+168.*rsxy(i1o-2,i2o,i3o,1,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,1)+672.*rsxy(i1o+1,i2o,i3o,1,1)-168.*rsxy(i1o+2,
     & i2o,i3o,1,1)+32.*rsxy(i1o+3,i2o,i3o,1,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,1))/(840.*dr(0))
                        aj_sys = (3.*rsxy(i1o,i2o-4,i3o,1,1)-32.*rsxy(
     & i1o,i2o-3,i3o,1,1)+168.*rsxy(i1o,i2o-2,i3o,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o,i2o+1,i3o,1,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,1)+32.*rsxy(i1o,i2o+3,i3o,1,1)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 1))/(840.*dr(1))
                        aj_syt = (3.*rsxy(i1o,i2o,i3o-4,1,1)-32.*rsxy(
     & i1o,i2o,i3o-3,1,1)+168.*rsxy(i1o,i2o,i3o-2,1,1)-672.*rsxy(i1o,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o,i2o,i3o+1,1,1)-168.*rsxy(i1o,i2o,
     & i3o+2,1,1)+32.*rsxy(i1o,i2o,i3o+3,1,1)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 1))/(840.*dr(2))
                        aj_syrr = (-9.*rsxy(i1o-4,i2o,i3o,1,1)+128.*
     & rsxy(i1o-3,i2o,i3o,1,1)-1008.*rsxy(i1o-2,i2o,i3o,1,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,1)-1008.*rsxy(i1o+2,i2o,i3o,1,1)+128.*
     & rsxy(i1o+3,i2o,i3o,1,1)-9.*rsxy(i1o+4,i2o,i3o,1,1))/(5040.*dr(
     & 0)**2)
                        aj_syrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,1)+168.*rsxy(i1o-4,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,1)+672.*rsxy(i1o-4,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,1)+32.*rsxy(i1o-4,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o-3,i2o-3,i3o,1,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o-3,i2o-1,i3o,1,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o-3,i2o+2,i3o,1,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o-3,i2o+4,i3o,1,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,1)-32.*rsxy(i1o-2,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,1)-672.*rsxy(i1o-2,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,1)-168.*rsxy(i1o-2,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,1)-3.*rsxy(i1o-2,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o-1,i2o-2,i3o,1,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o-1,i2o+1,i3o,1,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o-1,i2o+3,i3o,1,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,1)+168.*rsxy(i1o+1,i2o-2,i3o,1,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,1)+672.*rsxy(i1o+1,i2o+1,i3o,1,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,1)+32.*rsxy(i1o+1,i2o+3,i3o,1,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,1)-32.*rsxy(i1o+2,i2o-3,i3o,1,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,1)-672.*rsxy(i1o+2,i2o-1,i3o,1,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,1)-168.*rsxy(i1o+2,i2o+2,i3o,1,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,1)-3.*rsxy(i1o+2,i2o+4,i3o,1,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,1)-32.*rsxy(i1o+3,i2o-3,i3o,1,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,1)-672.*rsxy(i1o+3,i2o-1,i3o,1,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,1)-168.*rsxy(i1o+3,i2o+2,i3o,1,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,1)-3.*rsxy(i1o+3,i2o+4,i3o,1,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,1)+168.*rsxy(i1o+4,i2o-2,i3o,1,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,1)+672.*rsxy(i1o+4,i2o+1,i3o,1,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,1)+32.*rsxy(i1o+4,i2o+3,i3o,1,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_syss = (-9.*rsxy(i1o,i2o-4,i3o,1,1)+128.*
     & rsxy(i1o,i2o-3,i3o,1,1)-1008.*rsxy(i1o,i2o-2,i3o,1,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,1)-1008.*rsxy(i1o,i2o+2,i3o,1,1)+128.*
     & rsxy(i1o,i2o+3,i3o,1,1)-9.*rsxy(i1o,i2o+4,i3o,1,1))/(5040.*dr(
     & 1)**2)
                        aj_syrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,1)+168.*rsxy(i1o-4,i2o,i3o-2,1,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,1)+672.*rsxy(i1o-4,i2o,i3o+1,1,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,1)+32.*rsxy(i1o-4,i2o,i3o+3,1,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,1)-32.*rsxy(i1o-3,i2o,i3o-3,1,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,1)-672.*rsxy(i1o-3,i2o,i3o-1,1,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,1)-168.*rsxy(i1o-3,i2o,i3o+2,1,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,1)-3.*rsxy(i1o-3,i2o,i3o+4,1,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,1)-32.*rsxy(i1o-2,i2o,i3o-3,1,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,1)-672.*rsxy(i1o-2,i2o,i3o-1,1,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,1)-168.*rsxy(i1o-2,i2o,i3o+2,1,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,1)-3.*rsxy(i1o-2,i2o,i3o+4,1,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,1)+168.*rsxy(i1o-1,i2o,i3o-2,1,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o-1,i2o,i3o+1,1,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,1)+32.*rsxy(i1o-1,i2o,i3o+3,1,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,1)+168.*rsxy(i1o+1,i2o,i3o-2,1,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,1)+672.*rsxy(i1o+1,i2o,i3o+1,1,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,1)+32.*rsxy(i1o+1,i2o,i3o+3,1,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,1)-32.*rsxy(i1o+2,i2o,i3o-3,1,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,1)-672.*rsxy(i1o+2,i2o,i3o-1,1,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,1)-168.*rsxy(i1o+2,i2o,i3o+2,1,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,1)-3.*rsxy(i1o+2,i2o,i3o+4,1,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,1)-32.*rsxy(i1o+3,i2o,i3o-3,1,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,1)-672.*rsxy(i1o+3,i2o,i3o-1,1,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,1)-168.*rsxy(i1o+3,i2o,i3o+2,1,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,1)-3.*rsxy(i1o+3,i2o,i3o+4,1,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,1)+168.*rsxy(i1o+4,i2o,i3o-2,1,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,1)+672.*rsxy(i1o+4,i2o,i3o+1,1,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,1)+32.*rsxy(i1o+4,i2o,i3o+3,1,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_syst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,1)+168.*rsxy(i1o,i2o-4,i3o-2,1,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,1)+672.*rsxy(i1o,i2o-4,i3o+1,1,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,1)+32.*rsxy(i1o,i2o-4,i3o+3,1,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,1)-32.*rsxy(i1o,i2o-3,i3o-3,1,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,1)-672.*rsxy(i1o,i2o-3,i3o-1,1,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,1)-168.*rsxy(i1o,i2o-3,i3o+2,1,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,1)-3.*rsxy(i1o,i2o-3,i3o+4,1,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,1)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,1,1)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,1,1)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,1,1)-3.*rsxy(i1o,i2o-2,i3o+4,1,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,1)+168.*rsxy(i1o,i2o-1,i3o-2,1,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,1)+672.*rsxy(i1o,i2o-1,i3o+1,1,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,1)+32.*rsxy(i1o,i2o-1,i3o+3,1,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,1)+168.*rsxy(i1o,i2o+1,i3o-2,1,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,1)+672.*rsxy(i1o,i2o+1,i3o+1,1,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,1)+32.*rsxy(i1o,i2o+1,i3o+3,1,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,1)-32.*rsxy(i1o,i2o+2,i3o-3,1,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,1)-672.*rsxy(i1o,i2o+2,i3o-1,1,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,1)-168.*rsxy(i1o,i2o+2,i3o+2,1,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,1)-3.*rsxy(i1o,i2o+2,i3o+4,1,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,1)-32.*rsxy(i1o,i2o+3,i3o-3,1,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,1)-672.*rsxy(i1o,i2o+3,i3o-1,1,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,1)-168.*rsxy(i1o,i2o+3,i3o+2,1,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,1)-3.*rsxy(i1o,i2o+3,i3o+4,1,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,1)+168.*rsxy(i1o,i2o+4,i3o-2,1,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,1)+672.*rsxy(i1o,i2o+4,i3o+1,1,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,1)+32.*rsxy(i1o,i2o+4,i3o+3,1,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_sytt = (-9.*rsxy(i1o,i2o,i3o-4,1,1)+128.*
     & rsxy(i1o,i2o,i3o-3,1,1)-1008.*rsxy(i1o,i2o,i3o-2,1,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,1)-14350.*rsxy(i1o,i2o,i3o,1,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,1)-1008.*rsxy(i1o,i2o,i3o+2,1,1)+128.*
     & rsxy(i1o,i2o,i3o+3,1,1)-9.*rsxy(i1o,i2o,i3o+4,1,1))/(5040.*dr(
     & 2)**2)
                        aj_ty = rsxy(i1o,i2o,i3o,2,1)
                        aj_tyr = (3.*rsxy(i1o-4,i2o,i3o,2,1)-32.*rsxy(
     & i1o-3,i2o,i3o,2,1)+168.*rsxy(i1o-2,i2o,i3o,2,1)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,1)+672.*rsxy(i1o+1,i2o,i3o,2,1)-168.*rsxy(i1o+2,
     & i2o,i3o,2,1)+32.*rsxy(i1o+3,i2o,i3o,2,1)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,1))/(840.*dr(0))
                        aj_tys = (3.*rsxy(i1o,i2o-4,i3o,2,1)-32.*rsxy(
     & i1o,i2o-3,i3o,2,1)+168.*rsxy(i1o,i2o-2,i3o,2,1)-672.*rsxy(i1o,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o,i2o+1,i3o,2,1)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,1)+32.*rsxy(i1o,i2o+3,i3o,2,1)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 1))/(840.*dr(1))
                        aj_tyt = (3.*rsxy(i1o,i2o,i3o-4,2,1)-32.*rsxy(
     & i1o,i2o,i3o-3,2,1)+168.*rsxy(i1o,i2o,i3o-2,2,1)-672.*rsxy(i1o,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o,i2o,i3o+1,2,1)-168.*rsxy(i1o,i2o,
     & i3o+2,2,1)+32.*rsxy(i1o,i2o,i3o+3,2,1)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 1))/(840.*dr(2))
                        aj_tyrr = (-9.*rsxy(i1o-4,i2o,i3o,2,1)+128.*
     & rsxy(i1o-3,i2o,i3o,2,1)-1008.*rsxy(i1o-2,i2o,i3o,2,1)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,1)-1008.*rsxy(i1o+2,i2o,i3o,2,1)+128.*
     & rsxy(i1o+3,i2o,i3o,2,1)-9.*rsxy(i1o+4,i2o,i3o,2,1))/(5040.*dr(
     & 0)**2)
                        aj_tyrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,1)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,1)+168.*rsxy(i1o-4,i2o-2,i3o,2,1)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,1)+672.*rsxy(i1o-4,i2o+1,i3o,2,1)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,1)+32.*rsxy(i1o-4,i2o+3,i3o,2,1)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,1))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,1)-32.*rsxy(i1o-3,i2o-3,i3o,2,1)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,1)-672.*rsxy(i1o-3,i2o-1,i3o,2,1)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,1)-168.*rsxy(i1o-3,i2o+2,i3o,2,1)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,1)-3.*rsxy(i1o-3,i2o+4,i3o,2,1))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,1)-32.*rsxy(i1o-2,i2o-3,i3o,2,1)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,1)-672.*rsxy(i1o-2,i2o-1,i3o,2,1)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,1)-168.*rsxy(i1o-2,i2o+2,i3o,2,1)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,1)-3.*rsxy(i1o-2,i2o+4,i3o,2,1))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,1)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,1)+168.*rsxy(i1o-1,i2o-2,i3o,2,1)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o-1,i2o+1,i3o,2,1)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,1)+32.*rsxy(i1o-1,i2o+3,i3o,2,1)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,1))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,1)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,1)+168.*rsxy(i1o+1,i2o-2,i3o,2,1)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,1)+672.*rsxy(i1o+1,i2o+1,i3o,2,1)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,1)+32.*rsxy(i1o+1,i2o+3,i3o,2,1)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,1))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,1)-32.*rsxy(i1o+2,i2o-3,i3o,2,1)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,1)-672.*rsxy(i1o+2,i2o-1,i3o,2,1)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,1)-168.*rsxy(i1o+2,i2o+2,i3o,2,1)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,1)-3.*rsxy(i1o+2,i2o+4,i3o,2,1))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,1)-32.*rsxy(i1o+3,i2o-3,i3o,2,1)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,1)-672.*rsxy(i1o+3,i2o-1,i3o,2,1)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,1)-168.*rsxy(i1o+3,i2o+2,i3o,2,1)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,1)-3.*rsxy(i1o+3,i2o+4,i3o,2,1))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,1)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,1)+168.*rsxy(i1o+4,i2o-2,i3o,2,1)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,1)+672.*rsxy(i1o+4,i2o+1,i3o,2,1)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,1)+32.*rsxy(i1o+4,i2o+3,i3o,2,1)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,1))/(840.*dr(1)))/(840.*dr(0))
                        aj_tyss = (-9.*rsxy(i1o,i2o-4,i3o,2,1)+128.*
     & rsxy(i1o,i2o-3,i3o,2,1)-1008.*rsxy(i1o,i2o-2,i3o,2,1)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,1)-1008.*rsxy(i1o,i2o+2,i3o,2,1)+128.*
     & rsxy(i1o,i2o+3,i3o,2,1)-9.*rsxy(i1o,i2o+4,i3o,2,1))/(5040.*dr(
     & 1)**2)
                        aj_tyrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,1)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,1)+168.*rsxy(i1o-4,i2o,i3o-2,2,1)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,1)+672.*rsxy(i1o-4,i2o,i3o+1,2,1)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,1)+32.*rsxy(i1o-4,i2o,i3o+3,2,1)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,1))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,1)-32.*rsxy(i1o-3,i2o,i3o-3,2,1)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,1)-672.*rsxy(i1o-3,i2o,i3o-1,2,1)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,1)-168.*rsxy(i1o-3,i2o,i3o+2,2,1)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,1)-3.*rsxy(i1o-3,i2o,i3o+4,2,1))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,1)-32.*rsxy(i1o-2,i2o,i3o-3,2,1)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,1)-672.*rsxy(i1o-2,i2o,i3o-1,2,1)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,1)-168.*rsxy(i1o-2,i2o,i3o+2,2,1)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,1)-3.*rsxy(i1o-2,i2o,i3o+4,2,1))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,1)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,1)+168.*rsxy(i1o-1,i2o,i3o-2,2,1)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o-1,i2o,i3o+1,2,1)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,1)+32.*rsxy(i1o-1,i2o,i3o+3,2,1)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,1))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,1)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,1)+168.*rsxy(i1o+1,i2o,i3o-2,2,1)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,1)+672.*rsxy(i1o+1,i2o,i3o+1,2,1)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,1)+32.*rsxy(i1o+1,i2o,i3o+3,2,1)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,1))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,1)-32.*rsxy(i1o+2,i2o,i3o-3,2,1)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,1)-672.*rsxy(i1o+2,i2o,i3o-1,2,1)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,1)-168.*rsxy(i1o+2,i2o,i3o+2,2,1)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,1)-3.*rsxy(i1o+2,i2o,i3o+4,2,1))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,1)-32.*rsxy(i1o+3,i2o,i3o-3,2,1)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,1)-672.*rsxy(i1o+3,i2o,i3o-1,2,1)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,1)-168.*rsxy(i1o+3,i2o,i3o+2,2,1)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,1)-3.*rsxy(i1o+3,i2o,i3o+4,2,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,1)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,1)+168.*rsxy(i1o+4,i2o,i3o-2,2,1)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,1)+672.*rsxy(i1o+4,i2o,i3o+1,2,1)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,1)+32.*rsxy(i1o+4,i2o,i3o+3,2,1)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,1))/(840.*dr(2)))/(840.*dr(0))
                        aj_tyst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,1)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,1)+168.*rsxy(i1o,i2o-4,i3o-2,2,1)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,1)+672.*rsxy(i1o,i2o-4,i3o+1,2,1)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,1)+32.*rsxy(i1o,i2o-4,i3o+3,2,1)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,1))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,1)-32.*rsxy(i1o,i2o-3,i3o-3,2,1)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,1)-672.*rsxy(i1o,i2o-3,i3o-1,2,1)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,1)-168.*rsxy(i1o,i2o-3,i3o+2,2,1)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,1)-3.*rsxy(i1o,i2o-3,i3o+4,2,1))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,1)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 1)+168.*rsxy(i1o,i2o-2,i3o-2,2,1)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 1)+672.*rsxy(i1o,i2o-2,i3o+1,2,1)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 1)+32.*rsxy(i1o,i2o-2,i3o+3,2,1)-3.*rsxy(i1o,i2o-2,i3o+4,2,1))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,1)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,1)+168.*rsxy(i1o,i2o-1,i3o-2,2,1)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,1)+672.*rsxy(i1o,i2o-1,i3o+1,2,1)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,1)+32.*rsxy(i1o,i2o-1,i3o+3,2,1)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,1))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,1)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,1)+168.*rsxy(i1o,i2o+1,i3o-2,2,1)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,1)+672.*rsxy(i1o,i2o+1,i3o+1,2,1)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,1)+32.*rsxy(i1o,i2o+1,i3o+3,2,1)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,1))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,1)-32.*rsxy(i1o,i2o+2,i3o-3,2,1)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,1)-672.*rsxy(i1o,i2o+2,i3o-1,2,1)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,1)-168.*rsxy(i1o,i2o+2,i3o+2,2,1)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,1)-3.*rsxy(i1o,i2o+2,i3o+4,2,1))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,1)-32.*rsxy(i1o,i2o+3,i3o-3,2,1)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,1)-672.*rsxy(i1o,i2o+3,i3o-1,2,1)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,1)-168.*rsxy(i1o,i2o+3,i3o+2,2,1)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,1)-3.*rsxy(i1o,i2o+3,i3o+4,2,1))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,1)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,1)+168.*rsxy(i1o,i2o+4,i3o-2,2,1)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,1)+672.*rsxy(i1o,i2o+4,i3o+1,2,1)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,1)+32.*rsxy(i1o,i2o+4,i3o+3,2,1)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,1))/(840.*dr(2)))/(840.*dr(1))
                        aj_tytt = (-9.*rsxy(i1o,i2o,i3o-4,2,1)+128.*
     & rsxy(i1o,i2o,i3o-3,2,1)-1008.*rsxy(i1o,i2o,i3o-2,2,1)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,1)-14350.*rsxy(i1o,i2o,i3o,2,1)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,1)-1008.*rsxy(i1o,i2o,i3o+2,2,1)+128.*
     & rsxy(i1o,i2o,i3o+3,2,1)-9.*rsxy(i1o,i2o,i3o+4,2,1))/(5040.*dr(
     & 2)**2)
                        aj_rz = rsxy(i1o,i2o,i3o,0,2)
                        aj_rzr = (3.*rsxy(i1o-4,i2o,i3o,0,2)-32.*rsxy(
     & i1o-3,i2o,i3o,0,2)+168.*rsxy(i1o-2,i2o,i3o,0,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,0,2)+672.*rsxy(i1o+1,i2o,i3o,0,2)-168.*rsxy(i1o+2,
     & i2o,i3o,0,2)+32.*rsxy(i1o+3,i2o,i3o,0,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 0,2))/(840.*dr(0))
                        aj_rzs = (3.*rsxy(i1o,i2o-4,i3o,0,2)-32.*rsxy(
     & i1o,i2o-3,i3o,0,2)+168.*rsxy(i1o,i2o-2,i3o,0,2)-672.*rsxy(i1o,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o,i2o+1,i3o,0,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,0,2)+32.*rsxy(i1o,i2o+3,i3o,0,2)-3.*rsxy(i1o,i2o+4,i3o,0,
     & 2))/(840.*dr(1))
                        aj_rzt = (3.*rsxy(i1o,i2o,i3o-4,0,2)-32.*rsxy(
     & i1o,i2o,i3o-3,0,2)+168.*rsxy(i1o,i2o,i3o-2,0,2)-672.*rsxy(i1o,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o,i2o,i3o+1,0,2)-168.*rsxy(i1o,i2o,
     & i3o+2,0,2)+32.*rsxy(i1o,i2o,i3o+3,0,2)-3.*rsxy(i1o,i2o,i3o+4,0,
     & 2))/(840.*dr(2))
                        aj_rzrr = (-9.*rsxy(i1o-4,i2o,i3o,0,2)+128.*
     & rsxy(i1o-3,i2o,i3o,0,2)-1008.*rsxy(i1o-2,i2o,i3o,0,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,0,2)-1008.*rsxy(i1o+2,i2o,i3o,0,2)+128.*
     & rsxy(i1o+3,i2o,i3o,0,2)-9.*rsxy(i1o+4,i2o,i3o,0,2))/(5040.*dr(
     & 0)**2)
                        aj_rzrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,0,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,0,2)+168.*rsxy(i1o-4,i2o-2,i3o,0,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,0,2)+672.*rsxy(i1o-4,i2o+1,i3o,0,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,0,2)+32.*rsxy(i1o-4,i2o+3,i3o,0,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,0,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,0,2)-32.*rsxy(i1o-3,i2o-3,i3o,0,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,0,2)-672.*rsxy(i1o-3,i2o-1,i3o,0,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,0,2)-168.*rsxy(i1o-3,i2o+2,i3o,0,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,0,2)-3.*rsxy(i1o-3,i2o+4,i3o,0,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,0,2)-32.*rsxy(i1o-2,i2o-3,i3o,0,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,0,2)-672.*rsxy(i1o-2,i2o-1,i3o,0,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,0,2)-168.*rsxy(i1o-2,i2o+2,i3o,0,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,0,2)-3.*rsxy(i1o-2,i2o+4,i3o,0,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,0,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,0,2)+168.*rsxy(i1o-1,i2o-2,i3o,0,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o-1,i2o+1,i3o,0,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,0,2)+32.*rsxy(i1o-1,i2o+3,i3o,0,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,0,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,0,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,0,2)+168.*rsxy(i1o+1,i2o-2,i3o,0,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,0,2)+672.*rsxy(i1o+1,i2o+1,i3o,0,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,0,2)+32.*rsxy(i1o+1,i2o+3,i3o,0,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,0,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,0,2)-32.*rsxy(i1o+2,i2o-3,i3o,0,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,0,2)-672.*rsxy(i1o+2,i2o-1,i3o,0,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,0,2)-168.*rsxy(i1o+2,i2o+2,i3o,0,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,0,2)-3.*rsxy(i1o+2,i2o+4,i3o,0,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,0,2)-32.*rsxy(i1o+3,i2o-3,i3o,0,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,0,2)-672.*rsxy(i1o+3,i2o-1,i3o,0,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,0,2)-168.*rsxy(i1o+3,i2o+2,i3o,0,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,0,2)-3.*rsxy(i1o+3,i2o+4,i3o,0,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,0,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,0,2)+168.*rsxy(i1o+4,i2o-2,i3o,0,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,0,2)+672.*rsxy(i1o+4,i2o+1,i3o,0,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,0,2)+32.*rsxy(i1o+4,i2o+3,i3o,0,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,0,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_rzss = (-9.*rsxy(i1o,i2o-4,i3o,0,2)+128.*
     & rsxy(i1o,i2o-3,i3o,0,2)-1008.*rsxy(i1o,i2o-2,i3o,0,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,0,2)-1008.*rsxy(i1o,i2o+2,i3o,0,2)+128.*
     & rsxy(i1o,i2o+3,i3o,0,2)-9.*rsxy(i1o,i2o+4,i3o,0,2))/(5040.*dr(
     & 1)**2)
                        aj_rzrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,0,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,0,2)+168.*rsxy(i1o-4,i2o,i3o-2,0,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,0,2)+672.*rsxy(i1o-4,i2o,i3o+1,0,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,0,2)+32.*rsxy(i1o-4,i2o,i3o+3,0,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,0,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,0,2)-32.*rsxy(i1o-3,i2o,i3o-3,0,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,0,2)-672.*rsxy(i1o-3,i2o,i3o-1,0,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,0,2)-168.*rsxy(i1o-3,i2o,i3o+2,0,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,0,2)-3.*rsxy(i1o-3,i2o,i3o+4,0,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,0,2)-32.*rsxy(i1o-2,i2o,i3o-3,0,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,0,2)-672.*rsxy(i1o-2,i2o,i3o-1,0,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,0,2)-168.*rsxy(i1o-2,i2o,i3o+2,0,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,0,2)-3.*rsxy(i1o-2,i2o,i3o+4,0,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,0,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,0,2)+168.*rsxy(i1o-1,i2o,i3o-2,0,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o-1,i2o,i3o+1,0,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,0,2)+32.*rsxy(i1o-1,i2o,i3o+3,0,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,0,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,0,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,0,2)+168.*rsxy(i1o+1,i2o,i3o-2,0,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,0,2)+672.*rsxy(i1o+1,i2o,i3o+1,0,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,0,2)+32.*rsxy(i1o+1,i2o,i3o+3,0,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,0,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,0,2)-32.*rsxy(i1o+2,i2o,i3o-3,0,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,0,2)-672.*rsxy(i1o+2,i2o,i3o-1,0,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,0,2)-168.*rsxy(i1o+2,i2o,i3o+2,0,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,0,2)-3.*rsxy(i1o+2,i2o,i3o+4,0,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,0,2)-32.*rsxy(i1o+3,i2o,i3o-3,0,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,0,2)-672.*rsxy(i1o+3,i2o,i3o-1,0,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,0,2)-168.*rsxy(i1o+3,i2o,i3o+2,0,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,0,2)-3.*rsxy(i1o+3,i2o,i3o+4,0,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,0,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,0,2)+168.*rsxy(i1o+4,i2o,i3o-2,0,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,0,2)+672.*rsxy(i1o+4,i2o,i3o+1,0,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,0,2)+32.*rsxy(i1o+4,i2o,i3o+3,0,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,0,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_rzst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,0,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,0,2)+168.*rsxy(i1o,i2o-4,i3o-2,0,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,0,2)+672.*rsxy(i1o,i2o-4,i3o+1,0,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,0,2)+32.*rsxy(i1o,i2o-4,i3o+3,0,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,0,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,0,2)-32.*rsxy(i1o,i2o-3,i3o-3,0,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,0,2)-672.*rsxy(i1o,i2o-3,i3o-1,0,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,0,2)-168.*rsxy(i1o,i2o-3,i3o+2,0,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,0,2)-3.*rsxy(i1o,i2o-3,i3o+4,0,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,0,2)-32.*rsxy(i1o,i2o-2,i3o-3,0,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,0,2)-672.*rsxy(i1o,i2o-2,i3o-1,0,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,0,2)-168.*rsxy(i1o,i2o-2,i3o+2,0,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,0,2)-3.*rsxy(i1o,i2o-2,i3o+4,0,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,0,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,0,2)+168.*rsxy(i1o,i2o-1,i3o-2,0,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,0,2)+672.*rsxy(i1o,i2o-1,i3o+1,0,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,0,2)+32.*rsxy(i1o,i2o-1,i3o+3,0,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,0,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,0,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,0,2)+168.*rsxy(i1o,i2o+1,i3o-2,0,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,0,2)+672.*rsxy(i1o,i2o+1,i3o+1,0,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,0,2)+32.*rsxy(i1o,i2o+1,i3o+3,0,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,0,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,0,2)-32.*rsxy(i1o,i2o+2,i3o-3,0,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,0,2)-672.*rsxy(i1o,i2o+2,i3o-1,0,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,0,2)-168.*rsxy(i1o,i2o+2,i3o+2,0,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,0,2)-3.*rsxy(i1o,i2o+2,i3o+4,0,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,0,2)-32.*rsxy(i1o,i2o+3,i3o-3,0,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,0,2)-672.*rsxy(i1o,i2o+3,i3o-1,0,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,0,2)-168.*rsxy(i1o,i2o+3,i3o+2,0,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,0,2)-3.*rsxy(i1o,i2o+3,i3o+4,0,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,0,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,0,2)+168.*rsxy(i1o,i2o+4,i3o-2,0,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,0,2)+672.*rsxy(i1o,i2o+4,i3o+1,0,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,0,2)+32.*rsxy(i1o,i2o+4,i3o+3,0,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,0,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_rztt = (-9.*rsxy(i1o,i2o,i3o-4,0,2)+128.*
     & rsxy(i1o,i2o,i3o-3,0,2)-1008.*rsxy(i1o,i2o,i3o-2,0,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,0,2)-14350.*rsxy(i1o,i2o,i3o,0,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,0,2)-1008.*rsxy(i1o,i2o,i3o+2,0,2)+128.*
     & rsxy(i1o,i2o,i3o+3,0,2)-9.*rsxy(i1o,i2o,i3o+4,0,2))/(5040.*dr(
     & 2)**2)
                        aj_sz = rsxy(i1o,i2o,i3o,1,2)
                        aj_szr = (3.*rsxy(i1o-4,i2o,i3o,1,2)-32.*rsxy(
     & i1o-3,i2o,i3o,1,2)+168.*rsxy(i1o-2,i2o,i3o,1,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,1,2)+672.*rsxy(i1o+1,i2o,i3o,1,2)-168.*rsxy(i1o+2,
     & i2o,i3o,1,2)+32.*rsxy(i1o+3,i2o,i3o,1,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 1,2))/(840.*dr(0))
                        aj_szs = (3.*rsxy(i1o,i2o-4,i3o,1,2)-32.*rsxy(
     & i1o,i2o-3,i3o,1,2)+168.*rsxy(i1o,i2o-2,i3o,1,2)-672.*rsxy(i1o,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o,i2o+1,i3o,1,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,1,2)+32.*rsxy(i1o,i2o+3,i3o,1,2)-3.*rsxy(i1o,i2o+4,i3o,1,
     & 2))/(840.*dr(1))
                        aj_szt = (3.*rsxy(i1o,i2o,i3o-4,1,2)-32.*rsxy(
     & i1o,i2o,i3o-3,1,2)+168.*rsxy(i1o,i2o,i3o-2,1,2)-672.*rsxy(i1o,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o,i2o,i3o+1,1,2)-168.*rsxy(i1o,i2o,
     & i3o+2,1,2)+32.*rsxy(i1o,i2o,i3o+3,1,2)-3.*rsxy(i1o,i2o,i3o+4,1,
     & 2))/(840.*dr(2))
                        aj_szrr = (-9.*rsxy(i1o-4,i2o,i3o,1,2)+128.*
     & rsxy(i1o-3,i2o,i3o,1,2)-1008.*rsxy(i1o-2,i2o,i3o,1,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,1,2)-1008.*rsxy(i1o+2,i2o,i3o,1,2)+128.*
     & rsxy(i1o+3,i2o,i3o,1,2)-9.*rsxy(i1o+4,i2o,i3o,1,2))/(5040.*dr(
     & 0)**2)
                        aj_szrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,1,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,1,2)+168.*rsxy(i1o-4,i2o-2,i3o,1,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,1,2)+672.*rsxy(i1o-4,i2o+1,i3o,1,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,1,2)+32.*rsxy(i1o-4,i2o+3,i3o,1,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,1,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,1,2)-32.*rsxy(i1o-3,i2o-3,i3o,1,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,1,2)-672.*rsxy(i1o-3,i2o-1,i3o,1,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,1,2)-168.*rsxy(i1o-3,i2o+2,i3o,1,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,1,2)-3.*rsxy(i1o-3,i2o+4,i3o,1,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,1,2)-32.*rsxy(i1o-2,i2o-3,i3o,1,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,1,2)-672.*rsxy(i1o-2,i2o-1,i3o,1,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,1,2)-168.*rsxy(i1o-2,i2o+2,i3o,1,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,1,2)-3.*rsxy(i1o-2,i2o+4,i3o,1,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,1,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,1,2)+168.*rsxy(i1o-1,i2o-2,i3o,1,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o-1,i2o+1,i3o,1,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,1,2)+32.*rsxy(i1o-1,i2o+3,i3o,1,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,1,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,1,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,1,2)+168.*rsxy(i1o+1,i2o-2,i3o,1,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,1,2)+672.*rsxy(i1o+1,i2o+1,i3o,1,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,1,2)+32.*rsxy(i1o+1,i2o+3,i3o,1,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,1,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,1,2)-32.*rsxy(i1o+2,i2o-3,i3o,1,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,1,2)-672.*rsxy(i1o+2,i2o-1,i3o,1,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,1,2)-168.*rsxy(i1o+2,i2o+2,i3o,1,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,1,2)-3.*rsxy(i1o+2,i2o+4,i3o,1,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,1,2)-32.*rsxy(i1o+3,i2o-3,i3o,1,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,1,2)-672.*rsxy(i1o+3,i2o-1,i3o,1,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,1,2)-168.*rsxy(i1o+3,i2o+2,i3o,1,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,1,2)-3.*rsxy(i1o+3,i2o+4,i3o,1,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,1,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,1,2)+168.*rsxy(i1o+4,i2o-2,i3o,1,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,1,2)+672.*rsxy(i1o+4,i2o+1,i3o,1,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,1,2)+32.*rsxy(i1o+4,i2o+3,i3o,1,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,1,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_szss = (-9.*rsxy(i1o,i2o-4,i3o,1,2)+128.*
     & rsxy(i1o,i2o-3,i3o,1,2)-1008.*rsxy(i1o,i2o-2,i3o,1,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,1,2)-1008.*rsxy(i1o,i2o+2,i3o,1,2)+128.*
     & rsxy(i1o,i2o+3,i3o,1,2)-9.*rsxy(i1o,i2o+4,i3o,1,2))/(5040.*dr(
     & 1)**2)
                        aj_szrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,1,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,1,2)+168.*rsxy(i1o-4,i2o,i3o-2,1,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,1,2)+672.*rsxy(i1o-4,i2o,i3o+1,1,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,1,2)+32.*rsxy(i1o-4,i2o,i3o+3,1,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,1,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,1,2)-32.*rsxy(i1o-3,i2o,i3o-3,1,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,1,2)-672.*rsxy(i1o-3,i2o,i3o-1,1,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,1,2)-168.*rsxy(i1o-3,i2o,i3o+2,1,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,1,2)-3.*rsxy(i1o-3,i2o,i3o+4,1,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,1,2)-32.*rsxy(i1o-2,i2o,i3o-3,1,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,1,2)-672.*rsxy(i1o-2,i2o,i3o-1,1,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,1,2)-168.*rsxy(i1o-2,i2o,i3o+2,1,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,1,2)-3.*rsxy(i1o-2,i2o,i3o+4,1,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,1,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,1,2)+168.*rsxy(i1o-1,i2o,i3o-2,1,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o-1,i2o,i3o+1,1,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,1,2)+32.*rsxy(i1o-1,i2o,i3o+3,1,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,1,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,1,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,1,2)+168.*rsxy(i1o+1,i2o,i3o-2,1,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,1,2)+672.*rsxy(i1o+1,i2o,i3o+1,1,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,1,2)+32.*rsxy(i1o+1,i2o,i3o+3,1,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,1,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,1,2)-32.*rsxy(i1o+2,i2o,i3o-3,1,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,1,2)-672.*rsxy(i1o+2,i2o,i3o-1,1,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,1,2)-168.*rsxy(i1o+2,i2o,i3o+2,1,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,1,2)-3.*rsxy(i1o+2,i2o,i3o+4,1,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,1,2)-32.*rsxy(i1o+3,i2o,i3o-3,1,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,1,2)-672.*rsxy(i1o+3,i2o,i3o-1,1,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,1,2)-168.*rsxy(i1o+3,i2o,i3o+2,1,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,1,2)-3.*rsxy(i1o+3,i2o,i3o+4,1,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,1,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,1,2)+168.*rsxy(i1o+4,i2o,i3o-2,1,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,1,2)+672.*rsxy(i1o+4,i2o,i3o+1,1,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,1,2)+32.*rsxy(i1o+4,i2o,i3o+3,1,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,1,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_szst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,1,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,1,2)+168.*rsxy(i1o,i2o-4,i3o-2,1,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,1,2)+672.*rsxy(i1o,i2o-4,i3o+1,1,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,1,2)+32.*rsxy(i1o,i2o-4,i3o+3,1,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,1,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,1,2)-32.*rsxy(i1o,i2o-3,i3o-3,1,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,1,2)-672.*rsxy(i1o,i2o-3,i3o-1,1,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,1,2)-168.*rsxy(i1o,i2o-3,i3o+2,1,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,1,2)-3.*rsxy(i1o,i2o-3,i3o+4,1,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,1,2)-32.*rsxy(i1o,i2o-2,i3o-3,1,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,1,2)-672.*rsxy(i1o,i2o-2,i3o-1,1,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,1,2)-168.*rsxy(i1o,i2o-2,i3o+2,1,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,1,2)-3.*rsxy(i1o,i2o-2,i3o+4,1,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,1,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,1,2)+168.*rsxy(i1o,i2o-1,i3o-2,1,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,1,2)+672.*rsxy(i1o,i2o-1,i3o+1,1,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,1,2)+32.*rsxy(i1o,i2o-1,i3o+3,1,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,1,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,1,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,1,2)+168.*rsxy(i1o,i2o+1,i3o-2,1,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,1,2)+672.*rsxy(i1o,i2o+1,i3o+1,1,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,1,2)+32.*rsxy(i1o,i2o+1,i3o+3,1,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,1,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,1,2)-32.*rsxy(i1o,i2o+2,i3o-3,1,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,1,2)-672.*rsxy(i1o,i2o+2,i3o-1,1,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,1,2)-168.*rsxy(i1o,i2o+2,i3o+2,1,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,1,2)-3.*rsxy(i1o,i2o+2,i3o+4,1,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,1,2)-32.*rsxy(i1o,i2o+3,i3o-3,1,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,1,2)-672.*rsxy(i1o,i2o+3,i3o-1,1,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,1,2)-168.*rsxy(i1o,i2o+3,i3o+2,1,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,1,2)-3.*rsxy(i1o,i2o+3,i3o+4,1,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,1,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,1,2)+168.*rsxy(i1o,i2o+4,i3o-2,1,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,1,2)+672.*rsxy(i1o,i2o+4,i3o+1,1,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,1,2)+32.*rsxy(i1o,i2o+4,i3o+3,1,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,1,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_sztt = (-9.*rsxy(i1o,i2o,i3o-4,1,2)+128.*
     & rsxy(i1o,i2o,i3o-3,1,2)-1008.*rsxy(i1o,i2o,i3o-2,1,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,1,2)-14350.*rsxy(i1o,i2o,i3o,1,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,1,2)-1008.*rsxy(i1o,i2o,i3o+2,1,2)+128.*
     & rsxy(i1o,i2o,i3o+3,1,2)-9.*rsxy(i1o,i2o,i3o+4,1,2))/(5040.*dr(
     & 2)**2)
                        aj_tz = rsxy(i1o,i2o,i3o,2,2)
                        aj_tzr = (3.*rsxy(i1o-4,i2o,i3o,2,2)-32.*rsxy(
     & i1o-3,i2o,i3o,2,2)+168.*rsxy(i1o-2,i2o,i3o,2,2)-672.*rsxy(i1o-
     & 1,i2o,i3o,2,2)+672.*rsxy(i1o+1,i2o,i3o,2,2)-168.*rsxy(i1o+2,
     & i2o,i3o,2,2)+32.*rsxy(i1o+3,i2o,i3o,2,2)-3.*rsxy(i1o+4,i2o,i3o,
     & 2,2))/(840.*dr(0))
                        aj_tzs = (3.*rsxy(i1o,i2o-4,i3o,2,2)-32.*rsxy(
     & i1o,i2o-3,i3o,2,2)+168.*rsxy(i1o,i2o-2,i3o,2,2)-672.*rsxy(i1o,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o,i2o+1,i3o,2,2)-168.*rsxy(i1o,i2o+
     & 2,i3o,2,2)+32.*rsxy(i1o,i2o+3,i3o,2,2)-3.*rsxy(i1o,i2o+4,i3o,2,
     & 2))/(840.*dr(1))
                        aj_tzt = (3.*rsxy(i1o,i2o,i3o-4,2,2)-32.*rsxy(
     & i1o,i2o,i3o-3,2,2)+168.*rsxy(i1o,i2o,i3o-2,2,2)-672.*rsxy(i1o,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o,i2o,i3o+1,2,2)-168.*rsxy(i1o,i2o,
     & i3o+2,2,2)+32.*rsxy(i1o,i2o,i3o+3,2,2)-3.*rsxy(i1o,i2o,i3o+4,2,
     & 2))/(840.*dr(2))
                        aj_tzrr = (-9.*rsxy(i1o-4,i2o,i3o,2,2)+128.*
     & rsxy(i1o-3,i2o,i3o,2,2)-1008.*rsxy(i1o-2,i2o,i3o,2,2)+8064.*
     & rsxy(i1o-1,i2o,i3o,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o+1,i2o,i3o,2,2)-1008.*rsxy(i1o+2,i2o,i3o,2,2)+128.*
     & rsxy(i1o+3,i2o,i3o,2,2)-9.*rsxy(i1o+4,i2o,i3o,2,2))/(5040.*dr(
     & 0)**2)
                        aj_tzrs = (3.*(3.*rsxy(i1o-4,i2o-4,i3o,2,2)-
     & 32.*rsxy(i1o-4,i2o-3,i3o,2,2)+168.*rsxy(i1o-4,i2o-2,i3o,2,2)-
     & 672.*rsxy(i1o-4,i2o-1,i3o,2,2)+672.*rsxy(i1o-4,i2o+1,i3o,2,2)-
     & 168.*rsxy(i1o-4,i2o+2,i3o,2,2)+32.*rsxy(i1o-4,i2o+3,i3o,2,2)-
     & 3.*rsxy(i1o-4,i2o+4,i3o,2,2))/(840.*dr(1))-32.*(3.*rsxy(i1o-3,
     & i2o-4,i3o,2,2)-32.*rsxy(i1o-3,i2o-3,i3o,2,2)+168.*rsxy(i1o-3,
     & i2o-2,i3o,2,2)-672.*rsxy(i1o-3,i2o-1,i3o,2,2)+672.*rsxy(i1o-3,
     & i2o+1,i3o,2,2)-168.*rsxy(i1o-3,i2o+2,i3o,2,2)+32.*rsxy(i1o-3,
     & i2o+3,i3o,2,2)-3.*rsxy(i1o-3,i2o+4,i3o,2,2))/(840.*dr(1))+168.*
     & (3.*rsxy(i1o-2,i2o-4,i3o,2,2)-32.*rsxy(i1o-2,i2o-3,i3o,2,2)+
     & 168.*rsxy(i1o-2,i2o-2,i3o,2,2)-672.*rsxy(i1o-2,i2o-1,i3o,2,2)+
     & 672.*rsxy(i1o-2,i2o+1,i3o,2,2)-168.*rsxy(i1o-2,i2o+2,i3o,2,2)+
     & 32.*rsxy(i1o-2,i2o+3,i3o,2,2)-3.*rsxy(i1o-2,i2o+4,i3o,2,2))/(
     & 840.*dr(1))-672.*(3.*rsxy(i1o-1,i2o-4,i3o,2,2)-32.*rsxy(i1o-1,
     & i2o-3,i3o,2,2)+168.*rsxy(i1o-1,i2o-2,i3o,2,2)-672.*rsxy(i1o-1,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o-1,i2o+1,i3o,2,2)-168.*rsxy(i1o-1,
     & i2o+2,i3o,2,2)+32.*rsxy(i1o-1,i2o+3,i3o,2,2)-3.*rsxy(i1o-1,i2o+
     & 4,i3o,2,2))/(840.*dr(1))+672.*(3.*rsxy(i1o+1,i2o-4,i3o,2,2)-
     & 32.*rsxy(i1o+1,i2o-3,i3o,2,2)+168.*rsxy(i1o+1,i2o-2,i3o,2,2)-
     & 672.*rsxy(i1o+1,i2o-1,i3o,2,2)+672.*rsxy(i1o+1,i2o+1,i3o,2,2)-
     & 168.*rsxy(i1o+1,i2o+2,i3o,2,2)+32.*rsxy(i1o+1,i2o+3,i3o,2,2)-
     & 3.*rsxy(i1o+1,i2o+4,i3o,2,2))/(840.*dr(1))-168.*(3.*rsxy(i1o+2,
     & i2o-4,i3o,2,2)-32.*rsxy(i1o+2,i2o-3,i3o,2,2)+168.*rsxy(i1o+2,
     & i2o-2,i3o,2,2)-672.*rsxy(i1o+2,i2o-1,i3o,2,2)+672.*rsxy(i1o+2,
     & i2o+1,i3o,2,2)-168.*rsxy(i1o+2,i2o+2,i3o,2,2)+32.*rsxy(i1o+2,
     & i2o+3,i3o,2,2)-3.*rsxy(i1o+2,i2o+4,i3o,2,2))/(840.*dr(1))+32.*(
     & 3.*rsxy(i1o+3,i2o-4,i3o,2,2)-32.*rsxy(i1o+3,i2o-3,i3o,2,2)+
     & 168.*rsxy(i1o+3,i2o-2,i3o,2,2)-672.*rsxy(i1o+3,i2o-1,i3o,2,2)+
     & 672.*rsxy(i1o+3,i2o+1,i3o,2,2)-168.*rsxy(i1o+3,i2o+2,i3o,2,2)+
     & 32.*rsxy(i1o+3,i2o+3,i3o,2,2)-3.*rsxy(i1o+3,i2o+4,i3o,2,2))/(
     & 840.*dr(1))-3.*(3.*rsxy(i1o+4,i2o-4,i3o,2,2)-32.*rsxy(i1o+4,
     & i2o-3,i3o,2,2)+168.*rsxy(i1o+4,i2o-2,i3o,2,2)-672.*rsxy(i1o+4,
     & i2o-1,i3o,2,2)+672.*rsxy(i1o+4,i2o+1,i3o,2,2)-168.*rsxy(i1o+4,
     & i2o+2,i3o,2,2)+32.*rsxy(i1o+4,i2o+3,i3o,2,2)-3.*rsxy(i1o+4,i2o+
     & 4,i3o,2,2))/(840.*dr(1)))/(840.*dr(0))
                        aj_tzss = (-9.*rsxy(i1o,i2o-4,i3o,2,2)+128.*
     & rsxy(i1o,i2o-3,i3o,2,2)-1008.*rsxy(i1o,i2o-2,i3o,2,2)+8064.*
     & rsxy(i1o,i2o-1,i3o,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o,i2o+1,i3o,2,2)-1008.*rsxy(i1o,i2o+2,i3o,2,2)+128.*
     & rsxy(i1o,i2o+3,i3o,2,2)-9.*rsxy(i1o,i2o+4,i3o,2,2))/(5040.*dr(
     & 1)**2)
                        aj_tzrt = (3.*(3.*rsxy(i1o-4,i2o,i3o-4,2,2)-
     & 32.*rsxy(i1o-4,i2o,i3o-3,2,2)+168.*rsxy(i1o-4,i2o,i3o-2,2,2)-
     & 672.*rsxy(i1o-4,i2o,i3o-1,2,2)+672.*rsxy(i1o-4,i2o,i3o+1,2,2)-
     & 168.*rsxy(i1o-4,i2o,i3o+2,2,2)+32.*rsxy(i1o-4,i2o,i3o+3,2,2)-
     & 3.*rsxy(i1o-4,i2o,i3o+4,2,2))/(840.*dr(2))-32.*(3.*rsxy(i1o-3,
     & i2o,i3o-4,2,2)-32.*rsxy(i1o-3,i2o,i3o-3,2,2)+168.*rsxy(i1o-3,
     & i2o,i3o-2,2,2)-672.*rsxy(i1o-3,i2o,i3o-1,2,2)+672.*rsxy(i1o-3,
     & i2o,i3o+1,2,2)-168.*rsxy(i1o-3,i2o,i3o+2,2,2)+32.*rsxy(i1o-3,
     & i2o,i3o+3,2,2)-3.*rsxy(i1o-3,i2o,i3o+4,2,2))/(840.*dr(2))+168.*
     & (3.*rsxy(i1o-2,i2o,i3o-4,2,2)-32.*rsxy(i1o-2,i2o,i3o-3,2,2)+
     & 168.*rsxy(i1o-2,i2o,i3o-2,2,2)-672.*rsxy(i1o-2,i2o,i3o-1,2,2)+
     & 672.*rsxy(i1o-2,i2o,i3o+1,2,2)-168.*rsxy(i1o-2,i2o,i3o+2,2,2)+
     & 32.*rsxy(i1o-2,i2o,i3o+3,2,2)-3.*rsxy(i1o-2,i2o,i3o+4,2,2))/(
     & 840.*dr(2))-672.*(3.*rsxy(i1o-1,i2o,i3o-4,2,2)-32.*rsxy(i1o-1,
     & i2o,i3o-3,2,2)+168.*rsxy(i1o-1,i2o,i3o-2,2,2)-672.*rsxy(i1o-1,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o-1,i2o,i3o+1,2,2)-168.*rsxy(i1o-1,
     & i2o,i3o+2,2,2)+32.*rsxy(i1o-1,i2o,i3o+3,2,2)-3.*rsxy(i1o-1,i2o,
     & i3o+4,2,2))/(840.*dr(2))+672.*(3.*rsxy(i1o+1,i2o,i3o-4,2,2)-
     & 32.*rsxy(i1o+1,i2o,i3o-3,2,2)+168.*rsxy(i1o+1,i2o,i3o-2,2,2)-
     & 672.*rsxy(i1o+1,i2o,i3o-1,2,2)+672.*rsxy(i1o+1,i2o,i3o+1,2,2)-
     & 168.*rsxy(i1o+1,i2o,i3o+2,2,2)+32.*rsxy(i1o+1,i2o,i3o+3,2,2)-
     & 3.*rsxy(i1o+1,i2o,i3o+4,2,2))/(840.*dr(2))-168.*(3.*rsxy(i1o+2,
     & i2o,i3o-4,2,2)-32.*rsxy(i1o+2,i2o,i3o-3,2,2)+168.*rsxy(i1o+2,
     & i2o,i3o-2,2,2)-672.*rsxy(i1o+2,i2o,i3o-1,2,2)+672.*rsxy(i1o+2,
     & i2o,i3o+1,2,2)-168.*rsxy(i1o+2,i2o,i3o+2,2,2)+32.*rsxy(i1o+2,
     & i2o,i3o+3,2,2)-3.*rsxy(i1o+2,i2o,i3o+4,2,2))/(840.*dr(2))+32.*(
     & 3.*rsxy(i1o+3,i2o,i3o-4,2,2)-32.*rsxy(i1o+3,i2o,i3o-3,2,2)+
     & 168.*rsxy(i1o+3,i2o,i3o-2,2,2)-672.*rsxy(i1o+3,i2o,i3o-1,2,2)+
     & 672.*rsxy(i1o+3,i2o,i3o+1,2,2)-168.*rsxy(i1o+3,i2o,i3o+2,2,2)+
     & 32.*rsxy(i1o+3,i2o,i3o+3,2,2)-3.*rsxy(i1o+3,i2o,i3o+4,2,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o+4,i2o,i3o-4,2,2)-32.*rsxy(i1o+4,
     & i2o,i3o-3,2,2)+168.*rsxy(i1o+4,i2o,i3o-2,2,2)-672.*rsxy(i1o+4,
     & i2o,i3o-1,2,2)+672.*rsxy(i1o+4,i2o,i3o+1,2,2)-168.*rsxy(i1o+4,
     & i2o,i3o+2,2,2)+32.*rsxy(i1o+4,i2o,i3o+3,2,2)-3.*rsxy(i1o+4,i2o,
     & i3o+4,2,2))/(840.*dr(2)))/(840.*dr(0))
                        aj_tzst = (3.*(3.*rsxy(i1o,i2o-4,i3o-4,2,2)-
     & 32.*rsxy(i1o,i2o-4,i3o-3,2,2)+168.*rsxy(i1o,i2o-4,i3o-2,2,2)-
     & 672.*rsxy(i1o,i2o-4,i3o-1,2,2)+672.*rsxy(i1o,i2o-4,i3o+1,2,2)-
     & 168.*rsxy(i1o,i2o-4,i3o+2,2,2)+32.*rsxy(i1o,i2o-4,i3o+3,2,2)-
     & 3.*rsxy(i1o,i2o-4,i3o+4,2,2))/(840.*dr(2))-32.*(3.*rsxy(i1o,
     & i2o-3,i3o-4,2,2)-32.*rsxy(i1o,i2o-3,i3o-3,2,2)+168.*rsxy(i1o,
     & i2o-3,i3o-2,2,2)-672.*rsxy(i1o,i2o-3,i3o-1,2,2)+672.*rsxy(i1o,
     & i2o-3,i3o+1,2,2)-168.*rsxy(i1o,i2o-3,i3o+2,2,2)+32.*rsxy(i1o,
     & i2o-3,i3o+3,2,2)-3.*rsxy(i1o,i2o-3,i3o+4,2,2))/(840.*dr(2))+
     & 168.*(3.*rsxy(i1o,i2o-2,i3o-4,2,2)-32.*rsxy(i1o,i2o-2,i3o-3,2,
     & 2)+168.*rsxy(i1o,i2o-2,i3o-2,2,2)-672.*rsxy(i1o,i2o-2,i3o-1,2,
     & 2)+672.*rsxy(i1o,i2o-2,i3o+1,2,2)-168.*rsxy(i1o,i2o-2,i3o+2,2,
     & 2)+32.*rsxy(i1o,i2o-2,i3o+3,2,2)-3.*rsxy(i1o,i2o-2,i3o+4,2,2))
     & /(840.*dr(2))-672.*(3.*rsxy(i1o,i2o-1,i3o-4,2,2)-32.*rsxy(i1o,
     & i2o-1,i3o-3,2,2)+168.*rsxy(i1o,i2o-1,i3o-2,2,2)-672.*rsxy(i1o,
     & i2o-1,i3o-1,2,2)+672.*rsxy(i1o,i2o-1,i3o+1,2,2)-168.*rsxy(i1o,
     & i2o-1,i3o+2,2,2)+32.*rsxy(i1o,i2o-1,i3o+3,2,2)-3.*rsxy(i1o,i2o-
     & 1,i3o+4,2,2))/(840.*dr(2))+672.*(3.*rsxy(i1o,i2o+1,i3o-4,2,2)-
     & 32.*rsxy(i1o,i2o+1,i3o-3,2,2)+168.*rsxy(i1o,i2o+1,i3o-2,2,2)-
     & 672.*rsxy(i1o,i2o+1,i3o-1,2,2)+672.*rsxy(i1o,i2o+1,i3o+1,2,2)-
     & 168.*rsxy(i1o,i2o+1,i3o+2,2,2)+32.*rsxy(i1o,i2o+1,i3o+3,2,2)-
     & 3.*rsxy(i1o,i2o+1,i3o+4,2,2))/(840.*dr(2))-168.*(3.*rsxy(i1o,
     & i2o+2,i3o-4,2,2)-32.*rsxy(i1o,i2o+2,i3o-3,2,2)+168.*rsxy(i1o,
     & i2o+2,i3o-2,2,2)-672.*rsxy(i1o,i2o+2,i3o-1,2,2)+672.*rsxy(i1o,
     & i2o+2,i3o+1,2,2)-168.*rsxy(i1o,i2o+2,i3o+2,2,2)+32.*rsxy(i1o,
     & i2o+2,i3o+3,2,2)-3.*rsxy(i1o,i2o+2,i3o+4,2,2))/(840.*dr(2))+
     & 32.*(3.*rsxy(i1o,i2o+3,i3o-4,2,2)-32.*rsxy(i1o,i2o+3,i3o-3,2,2)
     & +168.*rsxy(i1o,i2o+3,i3o-2,2,2)-672.*rsxy(i1o,i2o+3,i3o-1,2,2)+
     & 672.*rsxy(i1o,i2o+3,i3o+1,2,2)-168.*rsxy(i1o,i2o+3,i3o+2,2,2)+
     & 32.*rsxy(i1o,i2o+3,i3o+3,2,2)-3.*rsxy(i1o,i2o+3,i3o+4,2,2))/(
     & 840.*dr(2))-3.*(3.*rsxy(i1o,i2o+4,i3o-4,2,2)-32.*rsxy(i1o,i2o+
     & 4,i3o-3,2,2)+168.*rsxy(i1o,i2o+4,i3o-2,2,2)-672.*rsxy(i1o,i2o+
     & 4,i3o-1,2,2)+672.*rsxy(i1o,i2o+4,i3o+1,2,2)-168.*rsxy(i1o,i2o+
     & 4,i3o+2,2,2)+32.*rsxy(i1o,i2o+4,i3o+3,2,2)-3.*rsxy(i1o,i2o+4,
     & i3o+4,2,2))/(840.*dr(2)))/(840.*dr(1))
                        aj_tztt = (-9.*rsxy(i1o,i2o,i3o-4,2,2)+128.*
     & rsxy(i1o,i2o,i3o-3,2,2)-1008.*rsxy(i1o,i2o,i3o-2,2,2)+8064.*
     & rsxy(i1o,i2o,i3o-1,2,2)-14350.*rsxy(i1o,i2o,i3o,2,2)+8064.*
     & rsxy(i1o,i2o,i3o+1,2,2)-1008.*rsxy(i1o,i2o,i3o+2,2,2)+128.*
     & rsxy(i1o,i2o,i3o+3,2,2)-9.*rsxy(i1o,i2o,i3o+4,2,2))/(5040.*dr(
     & 2)**2)
                        aj_rxx = aj_rx*aj_rxr+aj_sx*aj_rxs+aj_tx*aj_rxt
                        aj_rxy = aj_ry*aj_rxr+aj_sy*aj_rxs+aj_ty*aj_rxt
                        aj_rxz = aj_rz*aj_rxr+aj_sz*aj_rxs+aj_tz*aj_rxt
                        aj_sxx = aj_rx*aj_sxr+aj_sx*aj_sxs+aj_tx*aj_sxt
                        aj_sxy = aj_ry*aj_sxr+aj_sy*aj_sxs+aj_ty*aj_sxt
                        aj_sxz = aj_rz*aj_sxr+aj_sz*aj_sxs+aj_tz*aj_sxt
                        aj_txx = aj_rx*aj_txr+aj_sx*aj_txs+aj_tx*aj_txt
                        aj_txy = aj_ry*aj_txr+aj_sy*aj_txs+aj_ty*aj_txt
                        aj_txz = aj_rz*aj_txr+aj_sz*aj_txs+aj_tz*aj_txt
                        aj_ryx = aj_rx*aj_ryr+aj_sx*aj_rys+aj_tx*aj_ryt
                        aj_ryy = aj_ry*aj_ryr+aj_sy*aj_rys+aj_ty*aj_ryt
                        aj_ryz = aj_rz*aj_ryr+aj_sz*aj_rys+aj_tz*aj_ryt
                        aj_syx = aj_rx*aj_syr+aj_sx*aj_sys+aj_tx*aj_syt
                        aj_syy = aj_ry*aj_syr+aj_sy*aj_sys+aj_ty*aj_syt
                        aj_syz = aj_rz*aj_syr+aj_sz*aj_sys+aj_tz*aj_syt
                        aj_tyx = aj_rx*aj_tyr+aj_sx*aj_tys+aj_tx*aj_tyt
                        aj_tyy = aj_ry*aj_tyr+aj_sy*aj_tys+aj_ty*aj_tyt
                        aj_tyz = aj_rz*aj_tyr+aj_sz*aj_tys+aj_tz*aj_tyt
                        aj_rzx = aj_rx*aj_rzr+aj_sx*aj_rzs+aj_tx*aj_rzt
                        aj_rzy = aj_ry*aj_rzr+aj_sy*aj_rzs+aj_ty*aj_rzt
                        aj_rzz = aj_rz*aj_rzr+aj_sz*aj_rzs+aj_tz*aj_rzt
                        aj_szx = aj_rx*aj_szr+aj_sx*aj_szs+aj_tx*aj_szt
                        aj_szy = aj_ry*aj_szr+aj_sy*aj_szs+aj_ty*aj_szt
                        aj_szz = aj_rz*aj_szr+aj_sz*aj_szs+aj_tz*aj_szt
                        aj_tzx = aj_rx*aj_tzr+aj_sx*aj_tzs+aj_tx*aj_tzt
                        aj_tzy = aj_ry*aj_tzr+aj_sy*aj_tzs+aj_ty*aj_tzt
                        aj_tzz = aj_rz*aj_tzr+aj_sz*aj_tzs+aj_tz*aj_tzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rxxx = t1*aj_rxrr+2*aj_rx*aj_sx*aj_rxrs+t6*
     & aj_rxss+2*aj_rx*aj_tx*aj_rxrt+2*aj_sx*aj_tx*aj_rxst+t14*
     & aj_rxtt+aj_rxx*aj_rxr+aj_sxx*aj_rxs+aj_txx*aj_rxt
                        aj_rxxy = aj_ry*aj_rx*aj_rxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rxrs+aj_sy*aj_sx*aj_rxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rxst+aj_ty*aj_tx*
     & aj_rxtt+aj_rxy*aj_rxr+aj_sxy*aj_rxs+aj_txy*aj_rxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rxyy = t1*aj_rxrr+2*aj_ry*aj_sy*aj_rxrs+t6*
     & aj_rxss+2*aj_ry*aj_ty*aj_rxrt+2*aj_sy*aj_ty*aj_rxst+t14*
     & aj_rxtt+aj_ryy*aj_rxr+aj_syy*aj_rxs+aj_tyy*aj_rxt
                        aj_rxxz = aj_rz*aj_rx*aj_rxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rxrs+aj_sz*aj_sx*aj_rxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rxst+aj_tz*aj_tx*
     & aj_rxtt+aj_rxz*aj_rxr+aj_sxz*aj_rxs+aj_txz*aj_rxt
                        aj_rxyz = aj_rz*aj_ry*aj_rxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rxrs+aj_sz*aj_sy*aj_rxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rxst+aj_tz*aj_ty*
     & aj_rxtt+aj_ryz*aj_rxr+aj_syz*aj_rxs+aj_tyz*aj_rxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rxzz = t1*aj_rxrr+2*aj_rz*aj_sz*aj_rxrs+t6*
     & aj_rxss+2*aj_rz*aj_tz*aj_rxrt+2*aj_sz*aj_tz*aj_rxst+t14*
     & aj_rxtt+aj_rzz*aj_rxr+aj_szz*aj_rxs+aj_tzz*aj_rxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_sxxx = t1*aj_sxrr+2*aj_rx*aj_sx*aj_sxrs+t6*
     & aj_sxss+2*aj_rx*aj_tx*aj_sxrt+2*aj_sx*aj_tx*aj_sxst+t14*
     & aj_sxtt+aj_rxx*aj_sxr+aj_sxx*aj_sxs+aj_txx*aj_sxt
                        aj_sxxy = aj_ry*aj_rx*aj_sxrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_sxrs+aj_sy*aj_sx*aj_sxss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_sxrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_sxst+aj_ty*aj_tx*
     & aj_sxtt+aj_rxy*aj_sxr+aj_sxy*aj_sxs+aj_txy*aj_sxt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_sxyy = t1*aj_sxrr+2*aj_ry*aj_sy*aj_sxrs+t6*
     & aj_sxss+2*aj_ry*aj_ty*aj_sxrt+2*aj_sy*aj_ty*aj_sxst+t14*
     & aj_sxtt+aj_ryy*aj_sxr+aj_syy*aj_sxs+aj_tyy*aj_sxt
                        aj_sxxz = aj_rz*aj_rx*aj_sxrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_sxrs+aj_sz*aj_sx*aj_sxss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_sxrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_sxst+aj_tz*aj_tx*
     & aj_sxtt+aj_rxz*aj_sxr+aj_sxz*aj_sxs+aj_txz*aj_sxt
                        aj_sxyz = aj_rz*aj_ry*aj_sxrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_sxrs+aj_sz*aj_sy*aj_sxss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_sxrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_sxst+aj_tz*aj_ty*
     & aj_sxtt+aj_ryz*aj_sxr+aj_syz*aj_sxs+aj_tyz*aj_sxt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_sxzz = t1*aj_sxrr+2*aj_rz*aj_sz*aj_sxrs+t6*
     & aj_sxss+2*aj_rz*aj_tz*aj_sxrt+2*aj_sz*aj_tz*aj_sxst+t14*
     & aj_sxtt+aj_rzz*aj_sxr+aj_szz*aj_sxs+aj_tzz*aj_sxt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_txxx = t1*aj_txrr+2*aj_rx*aj_sx*aj_txrs+t6*
     & aj_txss+2*aj_rx*aj_tx*aj_txrt+2*aj_sx*aj_tx*aj_txst+t14*
     & aj_txtt+aj_rxx*aj_txr+aj_sxx*aj_txs+aj_txx*aj_txt
                        aj_txxy = aj_ry*aj_rx*aj_txrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_txrs+aj_sy*aj_sx*aj_txss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_txrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_txst+aj_ty*aj_tx*
     & aj_txtt+aj_rxy*aj_txr+aj_sxy*aj_txs+aj_txy*aj_txt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_txyy = t1*aj_txrr+2*aj_ry*aj_sy*aj_txrs+t6*
     & aj_txss+2*aj_ry*aj_ty*aj_txrt+2*aj_sy*aj_ty*aj_txst+t14*
     & aj_txtt+aj_ryy*aj_txr+aj_syy*aj_txs+aj_tyy*aj_txt
                        aj_txxz = aj_rz*aj_rx*aj_txrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_txrs+aj_sz*aj_sx*aj_txss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_txrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_txst+aj_tz*aj_tx*
     & aj_txtt+aj_rxz*aj_txr+aj_sxz*aj_txs+aj_txz*aj_txt
                        aj_txyz = aj_rz*aj_ry*aj_txrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_txrs+aj_sz*aj_sy*aj_txss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_txrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_txst+aj_tz*aj_ty*
     & aj_txtt+aj_ryz*aj_txr+aj_syz*aj_txs+aj_tyz*aj_txt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_txzz = t1*aj_txrr+2*aj_rz*aj_sz*aj_txrs+t6*
     & aj_txss+2*aj_rz*aj_tz*aj_txrt+2*aj_sz*aj_tz*aj_txst+t14*
     & aj_txtt+aj_rzz*aj_txr+aj_szz*aj_txs+aj_tzz*aj_txt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_ryxx = t1*aj_ryrr+2*aj_rx*aj_sx*aj_ryrs+t6*
     & aj_ryss+2*aj_rx*aj_tx*aj_ryrt+2*aj_sx*aj_tx*aj_ryst+t14*
     & aj_rytt+aj_rxx*aj_ryr+aj_sxx*aj_rys+aj_txx*aj_ryt
                        aj_ryxy = aj_ry*aj_rx*aj_ryrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_ryrs+aj_sy*aj_sx*aj_ryss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_ryrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_ryst+aj_ty*aj_tx*
     & aj_rytt+aj_rxy*aj_ryr+aj_sxy*aj_rys+aj_txy*aj_ryt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_ryyy = t1*aj_ryrr+2*aj_ry*aj_sy*aj_ryrs+t6*
     & aj_ryss+2*aj_ry*aj_ty*aj_ryrt+2*aj_sy*aj_ty*aj_ryst+t14*
     & aj_rytt+aj_ryy*aj_ryr+aj_syy*aj_rys+aj_tyy*aj_ryt
                        aj_ryxz = aj_rz*aj_rx*aj_ryrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_ryrs+aj_sz*aj_sx*aj_ryss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_ryrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_ryst+aj_tz*aj_tx*
     & aj_rytt+aj_rxz*aj_ryr+aj_sxz*aj_rys+aj_txz*aj_ryt
                        aj_ryyz = aj_rz*aj_ry*aj_ryrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_ryrs+aj_sz*aj_sy*aj_ryss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_ryrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_ryst+aj_tz*aj_ty*
     & aj_rytt+aj_ryz*aj_ryr+aj_syz*aj_rys+aj_tyz*aj_ryt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_ryzz = t1*aj_ryrr+2*aj_rz*aj_sz*aj_ryrs+t6*
     & aj_ryss+2*aj_rz*aj_tz*aj_ryrt+2*aj_sz*aj_tz*aj_ryst+t14*
     & aj_rytt+aj_rzz*aj_ryr+aj_szz*aj_rys+aj_tzz*aj_ryt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_syxx = t1*aj_syrr+2*aj_rx*aj_sx*aj_syrs+t6*
     & aj_syss+2*aj_rx*aj_tx*aj_syrt+2*aj_sx*aj_tx*aj_syst+t14*
     & aj_sytt+aj_rxx*aj_syr+aj_sxx*aj_sys+aj_txx*aj_syt
                        aj_syxy = aj_ry*aj_rx*aj_syrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_syrs+aj_sy*aj_sx*aj_syss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_syrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_syst+aj_ty*aj_tx*
     & aj_sytt+aj_rxy*aj_syr+aj_sxy*aj_sys+aj_txy*aj_syt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_syyy = t1*aj_syrr+2*aj_ry*aj_sy*aj_syrs+t6*
     & aj_syss+2*aj_ry*aj_ty*aj_syrt+2*aj_sy*aj_ty*aj_syst+t14*
     & aj_sytt+aj_ryy*aj_syr+aj_syy*aj_sys+aj_tyy*aj_syt
                        aj_syxz = aj_rz*aj_rx*aj_syrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_syrs+aj_sz*aj_sx*aj_syss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_syrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_syst+aj_tz*aj_tx*
     & aj_sytt+aj_rxz*aj_syr+aj_sxz*aj_sys+aj_txz*aj_syt
                        aj_syyz = aj_rz*aj_ry*aj_syrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_syrs+aj_sz*aj_sy*aj_syss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_syrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_syst+aj_tz*aj_ty*
     & aj_sytt+aj_ryz*aj_syr+aj_syz*aj_sys+aj_tyz*aj_syt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_syzz = t1*aj_syrr+2*aj_rz*aj_sz*aj_syrs+t6*
     & aj_syss+2*aj_rz*aj_tz*aj_syrt+2*aj_sz*aj_tz*aj_syst+t14*
     & aj_sytt+aj_rzz*aj_syr+aj_szz*aj_sys+aj_tzz*aj_syt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tyxx = t1*aj_tyrr+2*aj_rx*aj_sx*aj_tyrs+t6*
     & aj_tyss+2*aj_rx*aj_tx*aj_tyrt+2*aj_sx*aj_tx*aj_tyst+t14*
     & aj_tytt+aj_rxx*aj_tyr+aj_sxx*aj_tys+aj_txx*aj_tyt
                        aj_tyxy = aj_ry*aj_rx*aj_tyrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tyrs+aj_sy*aj_sx*aj_tyss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tyrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tyst+aj_ty*aj_tx*
     & aj_tytt+aj_rxy*aj_tyr+aj_sxy*aj_tys+aj_txy*aj_tyt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tyyy = t1*aj_tyrr+2*aj_ry*aj_sy*aj_tyrs+t6*
     & aj_tyss+2*aj_ry*aj_ty*aj_tyrt+2*aj_sy*aj_ty*aj_tyst+t14*
     & aj_tytt+aj_ryy*aj_tyr+aj_syy*aj_tys+aj_tyy*aj_tyt
                        aj_tyxz = aj_rz*aj_rx*aj_tyrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tyrs+aj_sz*aj_sx*aj_tyss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tyrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tyst+aj_tz*aj_tx*
     & aj_tytt+aj_rxz*aj_tyr+aj_sxz*aj_tys+aj_txz*aj_tyt
                        aj_tyyz = aj_rz*aj_ry*aj_tyrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tyrs+aj_sz*aj_sy*aj_tyss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tyrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tyst+aj_tz*aj_ty*
     & aj_tytt+aj_ryz*aj_tyr+aj_syz*aj_tys+aj_tyz*aj_tyt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tyzz = t1*aj_tyrr+2*aj_rz*aj_sz*aj_tyrs+t6*
     & aj_tyss+2*aj_rz*aj_tz*aj_tyrt+2*aj_sz*aj_tz*aj_tyst+t14*
     & aj_tytt+aj_rzz*aj_tyr+aj_szz*aj_tys+aj_tzz*aj_tyt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_rzxx = t1*aj_rzrr+2*aj_rx*aj_sx*aj_rzrs+t6*
     & aj_rzss+2*aj_rx*aj_tx*aj_rzrt+2*aj_sx*aj_tx*aj_rzst+t14*
     & aj_rztt+aj_rxx*aj_rzr+aj_sxx*aj_rzs+aj_txx*aj_rzt
                        aj_rzxy = aj_ry*aj_rx*aj_rzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_rzrs+aj_sy*aj_sx*aj_rzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_rzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_rzst+aj_ty*aj_tx*
     & aj_rztt+aj_rxy*aj_rzr+aj_sxy*aj_rzs+aj_txy*aj_rzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_rzyy = t1*aj_rzrr+2*aj_ry*aj_sy*aj_rzrs+t6*
     & aj_rzss+2*aj_ry*aj_ty*aj_rzrt+2*aj_sy*aj_ty*aj_rzst+t14*
     & aj_rztt+aj_ryy*aj_rzr+aj_syy*aj_rzs+aj_tyy*aj_rzt
                        aj_rzxz = aj_rz*aj_rx*aj_rzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_rzrs+aj_sz*aj_sx*aj_rzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_rzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_rzst+aj_tz*aj_tx*
     & aj_rztt+aj_rxz*aj_rzr+aj_sxz*aj_rzs+aj_txz*aj_rzt
                        aj_rzyz = aj_rz*aj_ry*aj_rzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_rzrs+aj_sz*aj_sy*aj_rzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_rzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_rzst+aj_tz*aj_ty*
     & aj_rztt+aj_ryz*aj_rzr+aj_syz*aj_rzs+aj_tyz*aj_rzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_rzzz = t1*aj_rzrr+2*aj_rz*aj_sz*aj_rzrs+t6*
     & aj_rzss+2*aj_rz*aj_tz*aj_rzrt+2*aj_sz*aj_tz*aj_rzst+t14*
     & aj_rztt+aj_rzz*aj_rzr+aj_szz*aj_rzs+aj_tzz*aj_rzt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_szxx = t1*aj_szrr+2*aj_rx*aj_sx*aj_szrs+t6*
     & aj_szss+2*aj_rx*aj_tx*aj_szrt+2*aj_sx*aj_tx*aj_szst+t14*
     & aj_sztt+aj_rxx*aj_szr+aj_sxx*aj_szs+aj_txx*aj_szt
                        aj_szxy = aj_ry*aj_rx*aj_szrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_szrs+aj_sy*aj_sx*aj_szss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_szrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_szst+aj_ty*aj_tx*
     & aj_sztt+aj_rxy*aj_szr+aj_sxy*aj_szs+aj_txy*aj_szt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_szyy = t1*aj_szrr+2*aj_ry*aj_sy*aj_szrs+t6*
     & aj_szss+2*aj_ry*aj_ty*aj_szrt+2*aj_sy*aj_ty*aj_szst+t14*
     & aj_sztt+aj_ryy*aj_szr+aj_syy*aj_szs+aj_tyy*aj_szt
                        aj_szxz = aj_rz*aj_rx*aj_szrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_szrs+aj_sz*aj_sx*aj_szss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_szrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_szst+aj_tz*aj_tx*
     & aj_sztt+aj_rxz*aj_szr+aj_sxz*aj_szs+aj_txz*aj_szt
                        aj_szyz = aj_rz*aj_ry*aj_szrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_szrs+aj_sz*aj_sy*aj_szss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_szrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_szst+aj_tz*aj_ty*
     & aj_sztt+aj_ryz*aj_szr+aj_syz*aj_szs+aj_tyz*aj_szt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_szzz = t1*aj_szrr+2*aj_rz*aj_sz*aj_szrs+t6*
     & aj_szss+2*aj_rz*aj_tz*aj_szrt+2*aj_sz*aj_tz*aj_szst+t14*
     & aj_sztt+aj_rzz*aj_szr+aj_szz*aj_szs+aj_tzz*aj_szt
                        t1 = aj_rx**2
                        t6 = aj_sx**2
                        t14 = aj_tx**2
                        aj_tzxx = t1*aj_tzrr+2*aj_rx*aj_sx*aj_tzrs+t6*
     & aj_tzss+2*aj_rx*aj_tx*aj_tzrt+2*aj_sx*aj_tx*aj_tzst+t14*
     & aj_tztt+aj_rxx*aj_tzr+aj_sxx*aj_tzs+aj_txx*aj_tzt
                        aj_tzxy = aj_ry*aj_rx*aj_tzrr+(aj_sy*aj_rx+
     & aj_ry*aj_sx)*aj_tzrs+aj_sy*aj_sx*aj_tzss+(aj_ry*aj_tx+aj_ty*
     & aj_rx)*aj_tzrt+(aj_ty*aj_sx+aj_sy*aj_tx)*aj_tzst+aj_ty*aj_tx*
     & aj_tztt+aj_rxy*aj_tzr+aj_sxy*aj_tzs+aj_txy*aj_tzt
                        t1 = aj_ry**2
                        t6 = aj_sy**2
                        t14 = aj_ty**2
                        aj_tzyy = t1*aj_tzrr+2*aj_ry*aj_sy*aj_tzrs+t6*
     & aj_tzss+2*aj_ry*aj_ty*aj_tzrt+2*aj_sy*aj_ty*aj_tzst+t14*
     & aj_tztt+aj_ryy*aj_tzr+aj_syy*aj_tzs+aj_tyy*aj_tzt
                        aj_tzxz = aj_rz*aj_rx*aj_tzrr+(aj_sz*aj_rx+
     & aj_rz*aj_sx)*aj_tzrs+aj_sz*aj_sx*aj_tzss+(aj_rz*aj_tx+aj_tz*
     & aj_rx)*aj_tzrt+(aj_tz*aj_sx+aj_sz*aj_tx)*aj_tzst+aj_tz*aj_tx*
     & aj_tztt+aj_rxz*aj_tzr+aj_sxz*aj_tzs+aj_txz*aj_tzt
                        aj_tzyz = aj_rz*aj_ry*aj_tzrr+(aj_sz*aj_ry+
     & aj_rz*aj_sy)*aj_tzrs+aj_sz*aj_sy*aj_tzss+(aj_rz*aj_ty+aj_tz*
     & aj_ry)*aj_tzrt+(aj_tz*aj_sy+aj_sz*aj_ty)*aj_tzst+aj_tz*aj_ty*
     & aj_tztt+aj_ryz*aj_tzr+aj_syz*aj_tzs+aj_tyz*aj_tzt
                        t1 = aj_rz**2
                        t6 = aj_sz**2
                        t14 = aj_tz**2
                        aj_tzzz = t1*aj_tzrr+2*aj_rz*aj_sz*aj_tzrs+t6*
     & aj_tzss+2*aj_rz*aj_tz*aj_tzrt+2*aj_sz*aj_tz*aj_tzst+t14*
     & aj_tztt+aj_rzz*aj_tzr+aj_szz*aj_tzs+aj_tzz*aj_tzt
                     endif ! order of accuracy
                  endif  ! number of dimensions
                  rx( io,0,0) = aj_rx
                  rxx(io,0,0) = aj_rxx
                  rxr(io,0,0) = aj_rxr
                  rx( io,1,0) = aj_sx
                  rxx(io,1,0) = aj_sxx
                  rxr(io,1,0) = aj_sxs
                  rx( io,0,1) = aj_ry
                  rxx(io,0,1) = aj_ryy
                  rxr(io,0,1) = aj_ryr
                  rx( io,1,1) = aj_sy
                  rxx(io,1,1) = aj_syy
                  rxr(io,1,1) = aj_sys
                  if (nd.eq.3) then
                     rx( io,0,2) = aj_rz
                     rxx(io,0,2) = aj_rzz
                     rxr(io,0,2) = aj_rzr
                     rx( io,1,2) = aj_sz
                     rxx(io,1,2) = aj_szz
                     rxr(io,1,2) = aj_szs
                     rx( io,2,0) = aj_tx
                     rxx(io,2,0) = aj_txx
                     rxr(io,2,0) = aj_txt
                     rx( io,2,1) = aj_ty
                     rxx(io,2,1) = aj_tyy
                     rxr(io,2,1) = aj_tyt
                     rx( io,2,2) = aj_tz
                     rxx(io,2,2) = aj_tzz
                     rxr(io,2,2) = aj_tzt
                  endif
                  else                               ! use one-sided derivatives near boundaries
                     do id=0,nd-1
                     do ic=0,nd-1
                        rx(io,id,ic) = rsxy(i1o,i2o,i3o,id,ic)
                     enddo
                     enddo
                     if ( order.ge.4 .or. .true.) then
                        do ic=0,nd-1
                        do id=0,nd-1
                           !! d( dr(id)/dx(ic) )/dr(id2)
                        id2 = 0 !! rxr, ryr, rzr, sxr, syr, szr, txr, tyr, tzr
                        if ( (i1o.le.(dims(0,id2)+1)) ) then
                           rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o+1,i2o,i3o,id,ic) + (
     & -3D0) * rsxy(i1o+2,i2o,i3o,id,ic) + (4D0/3D0) * rsxy(i1o+3,i2o,
     & i3o,id,ic) + (-1D0/4D0) * rsxy(i1o+4,i2o,i3o,id,ic))
                        else if ( (i1o.ge.dims(1,id2)-1) ) then
                           rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o-1,i2o,i3o,id,ic) + 
     & (3D0) * rsxy(i1o-2,i2o,i3o,id,ic) + (-4D0/3D0) * rsxy(i1o-3,
     & i2o,i3o,id,ic) + (1D0/4D0) * rsxy(i1o-4,i2o,i3o,id,ic))
                        else
                           rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*rsxy(
     & i1o-2,i2o,i3o,id,ic) + (-2D0/3D0)*rsxy(i1o-1,i2o,i3o,id,ic) +  
     & (2D0/3D0)*rsxy(i1o+1,i2o,i3o,id,ic)-(1D0/12D0)*rsxy(i1o+2,i2o,
     & i3o,id,ic)  )
                        endif
                        id2 = 1 !! rxs, rys, rzs, sxs, sys, szs, txs, tys, tzs
                        if ( (i2o.le.(dims(0,id2)+1)) ) then
                           rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o,i2o+1,i3o,id,ic) + (
     & -3D0) * rsxy(i1o,i2o+2,i3o,id,ic) + (4D0/3D0) * rsxy(i1o,i2o+3,
     & i3o,id,ic) + (-1D0/4D0) * rsxy(i1o,i2o+4,i3o,id,ic))
                        else if ( (i2o.ge.dims(1,id2)-1) ) then
                           rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o,i2o-1,i3o,id,ic) + 
     & (3D0) * rsxy(i1o,i2o-2,i3o,id,ic) + (-4D0/3D0) * rsxy(i1o,i2o-
     & 3,i3o,id,ic) + (1D0/4D0) * rsxy(i1o,i2o-4,i3o,id,ic))
                        else
                           rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*rsxy(
     & i1o,i2o-2,i3o,id,ic) + (-2D0/3D0)*rsxy(i1o,i2o-1,i3o,id,ic) +  
     & (2D0/3D0)*rsxy(i1o,i2o+1,i3o,id,ic)-(1D0/12D0)*rsxy(i1o,i2o+2,
     & i3o,id,ic)  )
                        endif
                        if ( nd.eq.3 ) then
                           id2 = 2 !!rxt, ryt, rzt, sxt, syt, szt, txt, tyt, tzt
                           if ( (i3o.le.(dims(0,id2)+1)) ) then
                              rxs(id,ic,id2) = dri(id2)*((-25D0/12D0) *
     &  rsxy(i1o,i2o,i3o,id,ic) + (4D0) * rsxy(i1o,i2o,i3o+1,id,ic) + 
     & (-3D0) * rsxy(i1o,i2o,i3o+2,id,ic) + (4D0/3D0) * rsxy(i1o,i2o,
     & i3o+3,id,ic) + (-1D0/4D0) * rsxy(i1o,i2o,i3o+4,id,ic))
                           else if ( (i3o.ge.dims(1,id2)-1) ) then
                              rxs(id,ic,id2) = dri(id2)*((25D0/12D0) * 
     & rsxy(i1o,i2o,i3o,id,ic) + (-4D0) * rsxy(i1o,i2o,i3o-1,id,ic) + 
     & (3D0) * rsxy(i1o,i2o,i3o-2,id,ic) + (-4D0/3D0) * rsxy(i1o,i2o,
     & i3o-3,id,ic) + (1D0/4D0) * rsxy(i1o,i2o,i3o-4,id,ic))
                           else
                              rxs(id,ic,id2) = dri(id2)*( (1D0/12D0)*
     & rsxy(i1o,i2o,i3o-2,id,ic) + (-2D0/3D0)*rsxy(i1o,i2o,i3o-1,id,
     & ic) +  (2D0/3D0)*rsxy(i1o,i2o,i3o+1,id,ic)-(1D0/12D0)*rsxy(i1o,
     & i2o,i3o+2,id,ic)  )
                           endif
                        endif
                        enddo
                        enddo
                     else ! 2nd order accurate
                        do ic=0,nd-1
                        do id=0,nd-1
                           !! d( dr(id)/dx(ic) )/dr(id2)
                        id2 = 0 !! rxr, ryr, rzr, sxr, syr, szr, txr, tyr, tzr
                        if ( (i1o.le.dims(0,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o+1,i2o,i3o,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o+2,i2o,i3o,id,ic) )
                        else if ( (i1o.ge.dims(1,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o-1,i2o,i3o,id,ic) + (
     & 1D0/2D0)*rsxy(i1o-2,i2o,i3o,id,ic) )
                        else
                           rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*rsxy(
     & i1o-1,i2o,i3o,id,ic) +  (1D0/2D0)*rsxy(i1o+1,i2o,i3o,id,ic) )
                        endif
                        id2 = 1 !! rxs, rys, rzs, sxs, sys, szs, txs, tys, tzs
                        if ( (i2o.le.(dims(0,id2))) ) then
                           rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o,i2o+1,i3o,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o,i2o+2,i3o,id,ic) )
                        else if ( (i2o.ge.dims(1,id2)) ) then
                           rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*rsxy(
     & i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o,i2o-1,i3o,id,ic) + (
     & 1D0/2D0)*rsxy(i1o,i2o-2,i3o,id,ic) )
                        else
                           rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*rsxy(
     & i1o,i2o-1,i3o,id,ic) +  (1D0/2D0)*rsxy(i1o,i2o+1,i3o,id,ic) )
                        endif
                        if ( nd.eq.3 ) then
                           id2 = 2 !!rxt, ryt, rzt, sxt, syt, szt, txt, tyt, tzt
                           if ( (i3o.le.dims(0,id2) )) then
                              rxs(id,ic,id2) = dri(id2)*( (-3D0/2D0)*
     & rsxy(i1o,i2o,i3o,id,ic) + (2D0)*rsxy(i1o,i2o,i3o+1,id,ic) + (-
     & 1D0/2D0)*rsxy(i1o,i2o,i3o+2,id,ic) )
                           else if ( i3o.ge.dims(1,id2) ) then
                              rxs(id,ic,id2) = dri(id2)*( (3D0/2D0)*
     & rsxy(i1o,i2o,i3o,id,ic) + (-2D0)*rsxy(i1o,i2o,i3o-1,id,ic) + (
     & 1D0/2D0)*rsxy(i1o,i2o,i3o-2,id,ic) )
                           else
                              rxs(id,ic,id2) = dri(id2)*( (-1D0/2D0)*
     & rsxy(i1o,i2o,i3o-1,id,ic) +  (1D0/2D0)*rsxy(i1o,i2o,i3o+1,id,
     & ic) )
                           endif
                        endif
                        enddo
                        enddo
                     endif ! order of accuracy
                     do id=0,nd-1
                     do ic=0,nd-1
                        rxr(io,id,ic) = rxs(id,ic,id)
                        rxx(io,id,ic) = rx(io,0,ic)*rxs(id,ic,0) + rx(
     & io,1,ic)*rxs(id,ic,1) + rx(io,2,ic)*rxs(id,ic,2)
                     enddo
                     enddo
                  endif
               enddo ! do loop (io) over stencil
               endif                     ! if not rectangular
         !!! fill in the variable coefficient at each point to be used in later loops over discretization coefficients
         do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
            b_ik(io) = 0d0
            do id=0,nd-1
               b_ik(io) = b_ik(io) + rx(io,dir,id)*rx(io,dir,id)
            enddo
            b_ik(io) = 1d0/(b_ik(io)) ! take the reciprocal here instead of dividing everywhere in the loops below
         enddo

         if ( mode.eq.solve_rhs .or. mode.eq.solve_lhs ) then
         !!!x here we assume there is always space for the first upper and lower diagonals
         dl1(i1,i2,i3) = pxx_coeff(-1)*b_ik(-1)
         d(i1,i2,i3)   = pxx_coeff( 0)*b_ik( 0)
         du1(i1,i2,i3) = pxx_coeff( 1)*b_ik( 1)
         if ( is_penta ) then
            dl2(i1,i2,i3) = pxx_coeff(-2)*b_ik(-2)
            du2(i1,i2,i3) = pxx_coeff( 2)*b_ik( 2)
         endif
         endif ! if one of the matrix fill-in modes

         if ( mode.eq.solve_rhs ) then
            rhs(i1,i2,i3) = 0d0
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
               !!!                                 (P b_ik^{-1}  - (-nu)*(dt/2) D_rr) ( U^* )
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               rhs(i1,i2,i3) = rhs(i1,i2,i3) + (pxx_coeff(io)*b_ik(io) 
     & + nu_eq*dto2*drid*drid*dxx_coeff(io))*ul(i1o,i2o,i3o,cc)
            enddo
         else if ( mode.eq.solve_lhs ) then
            rhs(i1,i2,i3) = 0d0
            do io=-half_width,half_width !!!x this loop may need to be changed if the grid does not have ghost points with sufficient width
               !!!                                 P b_ik^{-1} U^{*}
                     i1o = i1l + io*is1
                     i2o = i2l + io*is2
                     i3o = i3l + io*is3
               rhs(i1,i2,i3) = rhs(i1,i2,i3) + pxx_coeff(io)*ul(i1o,
     & i2o,i3o,cc)*b_ik(io)
            enddo
               !!!                                 (P b_ik^{-1} + (-nu)*(dt/2) D_rr) U_i 
            io = -1
            dl1(i1,i2,i3)    = dl1(i1,i2,i3) - nu_eq*dto2*drid*drid*
     & dxx_coeff(io)
            io = 0
            d(i1,i2,i3)      = d(i1,i2,i3)   - nu_eq*dto2*drid*drid*
     & dxx_coeff(io)
            io = 1
            du1(i1,i2,i3)    = du1(i1,i2,i3) - nu_eq*dto2*drid*drid*
     & dxx_coeff(io)
            if ( is_penta ) then
               io = -2
               dl2(i1,i2,i3) = dl2(i1,i2,i3) - nu_eq*dto2*drid*drid*
     & dxx_coeff(io)
               io =  2
               du2(i1,i2,i3) = du2(i1,i2,i3) - nu_eq*dto2*drid*drid*
     & dxx_coeff(io)
            endif

         else if ( mode.eq.get_explicit ) then
            rhs(i1,i2,i3) = 0d0
         endif ! if mode = solve_rhs or solve_lhs or get_explicit

      endif ! if mask gt 0

      enddo ! i1l
      enddo ! i2l
      enddo ! i3l

      if (mode.ne.get_explicit) then
c      if ( nu .gt. 1e-10 ) then
               if ( .not. is_periodic ) then
         ! fixup the matrix and rhs at the ends of each line
               do side=0,1
                  is_dirichlet_bc = ((bc(side,dir)
     & .eq.dirichletBoundaryCondition).or.(bc(side,dir)
     & .eq.inflowWithVelocityGiven).or.(bc(side,dir).eq.noSlipWall))
     & .or.(bc(side,dir).eq.slipWall.and.dir.eq.(cc-uc)).and.(bc(side,
     & dir).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*
     & 2),side,dir,grid).ne.0d0)))
                  is_neumann_bc = ((bc(side,dir)
     & .eq.neumannBoundaryCondition))
                  is_outflow_bc = bc(side,dir).eq.outflow
                  if ( is_dirichlet_bc ) then
         !cc            print *,"dbg: ","dirichlet : ",dir,side,cc-uc,mode
                     do i3l=bc_range(side,0,2),bc_range(side,1,2)
                     do i2l=bc_range(side,0,1),bc_range(side,1,1)
                     do i1l=bc_range(side,0,0),bc_range(side,1,0)
                              i1mm = i1l-2*is1
                              i2mm = i2l-2*is2
                              i3mm = i3l-2*is3
                              i1m = i1l-is1
                              i2m = i2l-is2
                              i3m = i3l-is3
                              i1  = i1l
                              i2  = i2l
                              i3  = i3l
                              i1p = i1l+is1
                              i2p = i2l+is2
                              i3p = i3l+is3
                              i1pp = i1l+2*is1
                              i2pp = i2l+2*is2
                              i3pp = i3l+2*is3
                        if ( mask(i1,i2,i3).gt.0 ) then
                        if ( have_ghost_points ) then
                           io = 1-2*side
                                 i1o = i1l + io*is1
                                 i2o = i2l + io*is2
                                 i3o = i3l + io*is3
                           if ( .false. ) then
                                         ! the ghost point equation is interior equation at the boundary point
                              if ( .not. is_penta ) then
                                 if ( side.eq.0) then
                                    d(i1,i2,i3)    = dl1(i1o,i2o,i3o)
                                    du1(i1,i2,i3)  = d(i1o,i2o,i3o)
                                    dl1(i1,i2,i3)  = du1(i1o,i2o,i3o)
                                 else
                                    d(i1,i2,i3)    = du1(i1o,i2o,i3o)
                                    dl1(i1,i2,i3)  = d(i1o,i2o,i3o)
                                    du1(i1,i2,i3)  = dl1(i1o,i2o,i3o)
                                 endif
                              else
                                 stop 99400
                              endif
         !     if ( dir.eq.0 ) print *,"bc at ",i1,i2,i3
                              rhs(i1,i2,i3) = rhs(i1o,i2o,i3o)
                           else
                           ! extrapolate the ghost point
                              rhs(i1l,i2l,i3l) = 0d0
                              if ( .not. rhs_only ) then
                                 d(i1l,i2l,i3l) = 1d0
                                 if ( .not. is_penta ) then
                                    if ( side.eq.0 ) then
                                       dl1(i1l,i2l,i3l) =  1d0
                                       du1(i1l,i2l,i3l) = -2d0
                                    else
                                       du1(i1l,i2l,i3l) =  1d0
                                       dl1(i1l,i2l,i3l) = -2d0
                                    endif
                                 else
                                    if ( side.eq.0 ) then
                                       du1(i1l,i2l,i3l) = -4d0
                                       du2(i1l,i2l,i3l) =  6d0
                                       dl1(i1l,i2l,i3l) = -4d0
                                       dl2(i1l,i2l,i3l) =  1d0
                                    else
                                       dl1(i1l,i2l,i3l) = -4d0
                                       dl2(i1l,i2l,i3l) =  6d0
                                       du2(i1l,i2l,i3l) = -4d0
                                       du1(i1l,i2l,i3l) =  1d0
                                    endif
                                 endif
                              endif
                           endif
                        else
                           io = 0
                                 i1o = i1l + io*is1
                                 i2o = i2l + io*is2
                                 i3o = i3l + io*is3
                        endif ! have ghost points
         !c dirichlet everywhere               d(i1,i2,i3) = 1d0
                        if ( mode.ne.get_explicit ) then
         !                  if ( dir.eq.0 ) print *,i1,i2,ul(i1o,i2o,i3o,cc)
                           rhs(i1o,i2o,i3o) = ul(i1o,i2o,i3o,cc)
         !c dirichlet everywhere                  rhs(i1,i2,i3) = ul(i1,i2,i3,cc)
                        else
            ! the explicit contribution should add the difference of the old and new time level bc values
                           rhs(i1o,i2o,i3o) = 0d0
         !c dirichlet everywhere                  rhs(i1,i2,i3) = 0d0
                        endif
                        if ( .not. rhs_only ) then
                           d(i1o,i2o,i3o) = 1d0
                           dl1(i1o,i2o,i3o) = 0d0
                           du1(i1o,i2o,i3o) = 0d0
         !     c dirichlet everywhere               dl1(i1,i2,i3) = 0d0
         !     c dirichlet everywhere               du1(i1,i2,i3) = 0d0
                           if ( is_penta ) then
                              dl2(i1o,i2o,i3o) = 0d0
                              du2(i1o,i2o,i3o) = 0d0
         !     c dirichlet everywhere                  dl2(i1,i2,i3) = 0d0
         !     c dirichlet everywhere                  du2(i1,i2,i3) = 0d0
                           endif
                        endif !not rhs_only
                        endif ! mask
                     enddo ! i1l
                     enddo ! i2l
                     enddo ! i3l
                  elseif (is_neumann_bc ) then !!.or. is_outflow_bc) then
         !cc            print *,"dbg: ","neumann : ",dir,side,cc-uc,mode
                     call get_os_mop_coeffs(half_width,1,side,order,
     & compact,px_coeff,dx_coeff)
                     do i3l=bc_range(side,0,2),bc_range(side,1,2)
                     do i2l=bc_range(side,0,1),bc_range(side,1,1)
                     do i1l=bc_range(side,0,0),bc_range(side,1,0)
                              i1mm = i1l-2*is1
                              i2mm = i2l-2*is2
                              i3mm = i3l-2*is3
                              i1m = i1l-is1
                              i2m = i2l-is2
                              i3m = i3l-is3
                              i1  = i1l
                              i2  = i2l
                              i3  = i3l
                              i1p = i1l+is1
                              i2p = i2l+is2
                              i3p = i3l+is3
                              i1pp = i1l+2*is1
                              i2pp = i2l+2*is2
                              i3pp = i3l+2*is3
                        if ( mode.eq.solve_lhs ) then
                           if ( side.eq.0 ) then
                              d(i1,i2,i3) = dx_coeff(-half_width+0)*
     & dxid
                              du1(i1,i2,i3) = dx_coeff(-half_width+1)*
     & dxid
                              if ( .not. is_penta ) then
                                 dl1(i1,i2,i3) = dx_coeff(-half_width+
     & 2)*dxid
                              else
                                 du2(i1,i2,i3) = dx_coeff(-half_width+
     & 2)*dxid
                                 dl2(i1,i2,i3) = dx_coeff(-half_width+
     & 3)*dxid
                                 dl1(i1,i2,i3) = dx_coeff(-half_width+
     & 4)*dxid
                              endif
                           else
                              d(i1,i2,i3) = dx_coeff(half_width)*dxid
                              dl1(i1,i2,i3) = dx_coeff(half_width-1)*
     & dxid
                              if ( .not. is_penta ) then
                                 du1(i1,i2,i3) = dx_coeff(half_width-2)
     & *dxid
                              else
                                 dl2(i1,i2,i3) = dx_coeff(half_width-2)
     & *dxid
                                 du2(i1,i2,i3) = dx_coeff(half_width-3)
     & *dxid
                                 du1(i1,i2,i3) = dx_coeff(half_width-4)
     & *dxid
                              endif
                           endif
                        else if ( mode.eq.solve_rhs ) then
                           d(i1,i2,i3) = 1d0
                           du1(i1,i2,i3) = 0d0
                           dl1(i1,i2,i3) = 0d0
                           if ( is_penta ) then
                              du2(i1,i2,i3) = 0d0
                              dl2(i1,i2,i3) = 0d0
                           endif
                           rhs(i1,i2,i3) = 0d0
                           do io=0,2*half_width
                                    i1o = i1l + (1-2*side)*io*is1
                                    i2o = i2l + (1-2*side)*io*is2
                                    i3o = i3l + (1-2*side)*io*is3
                              rhs(i1,i2,i3) = rhs(i1,i2,i3) + ul(i1o,
     & i2o,i3o,cc)*dx_coeff(-half_width + side*2*half_width + (1-2*
     & side)*io)*dxid
                           enddo
                        endif            ! mode
                     enddo !i1l
                     enddo !i2l
                     enddo !i3l
                  elseif (.true..and.is_outflow_bc) then
                     if ( .true. ) then
                     do i3l=bc_range(side,0,2),bc_range(side,1,2)
                     do i2l=bc_range(side,0,1),bc_range(side,1,1)
                     do i1l=bc_range(side,0,0),bc_range(side,1,0)
                              i1mm = i1l-2*is1
                              i2mm = i2l-2*is2
                              i3mm = i3l-2*is3
                              i1m = i1l-is1
                              i2m = i2l-is2
                              i3m = i3l-is3
                              i1  = i1l
                              i2  = i2l
                              i3  = i3l
                              i1p = i1l+is1
                              i2p = i2l+is2
                              i3p = i3l+is3
                              i1pp = i1l+2*is1
                              i2pp = i2l+2*is2
                              i3pp = i3l+2*is3
                        if ( mask(i1,i2,i3).gt.0 ) then
                        rhs(i1l,i2l,i3l) = 0d0
                        if ( .true. .or. mode.eq.solve_lhs ) then
                           if ( .not. rhs_only ) then
                           d(i1l,i2l,i3l) = 1d0
                           if ( extrap_all_1 .or. .not. is_penta ) then
                              if ( side.eq.0 ) then
                                 dl1(i1l,i2l,i3l) = 0d0 !1d0
                                 du1(i1l,i2l,i3l) = -1d0 !-2d0
                              else
                                 du1(i1l,i2l,i3l) = 0d0 ! 1d0
                                 dl1(i1l,i2l,i3l) = -1d0 !-2d0
                              endif
                              if ( is_penta ) then
                                 du2(i1l,i2l,i3l) = 0d0
                                 dl2(i1l,i2l,i3l) = 0d0
                              endif
                           elseif ( is_penta ) then
                              if ( side.eq.0 ) then
                                 du1(i1l,i2l,i3l) = -4d0
                                 du2(i1l,i2l,i3l) =  6d0
                                 dl2(i1l,i2l,i3l) = -4d0
                                 dl1(i1l,i2l,i3l) =  1d0
                              else
                                 dl1(i1l,i2l,i3l) = -4d0
                                 dl2(i1l,i2l,i3l) =  6d0
                                 du2(i1l,i2l,i3l) = -4d0
                                 du1(i1l,i2l,i3l) =  1d0
                              endif
                           endif
                           endif !not rhs_only
                        else if ( mode.eq.solve_rhs) then
                           if ( .not. rhs_only)  then
                           d(i1l,i2l,i3l) = 1d0
                           du1(i1l,i2l,i3l) = 0d0
                           dl1(i1l,i2l,i3l) = 0d0
                           if ( is_penta ) then
                              du2(i1l,i2l,i3l) = 0d0
                              dl2(i1l,i2l,i3l) = 0d0
                           endif
                           endif !not rhs_only
                           if ( extrap_all_1 .or. .not. is_penta ) then
                              io = 1-2*side
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              rhs(i1l,i2l,i3l) = (ul(i1o,i2o,i3o,cc))
                           elseif (is_penta) then
                              io = 1-2*side
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              rhs(i1l,i2l,i3l) = 4d0*ul(i1o,i2o,i3o,cc)
                              io = 2*(1-2*side)
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)-6d0*
     & ul(i1o,i2o,i3o,cc)
                              io = 3*(1-2*side)
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)+4d0*
     & ul(i1o,i2o,i3o,cc)
                              io = 4*(1-2*side)
                                    i1o = i1l + io*is1
                                    i2o = i2l + io*is2
                                    i3o = i3l + io*is3
                              rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)-1d0*
     & ul(i1o,i2o,i3o,cc)
                              rhs(i1l,i2l,i3l) = rhs(i1l,i2l,i3l)
         !!                     rhs(i1l,i2l,i3l) = (1-2*side)*rhs(i1l,i2l,i3l)
                           endif
                        endif
                        endif !mask
                     enddo
                     enddo
                     enddo
                     endif
                  elseif(.not.(cc.eq.tc .and. bcData(tc+tc*2,SIDE,dir,
     & grid).ne.0d0)) then
                  elseif (bc(side,dir).gt.0 .and. .not.is_outflow_bc 
     & .and. bc(side,dir).ne.slipwall ) then
                     print *,"ins_factors: APPLY_BOUNDARY_CONDITIONS 
     & macro: unknown bc : ",bc(side,dir)
         !"
                     stop 99999
                  endif ! type of boundary condition
               enddo ! side
               endif ! not periodic
         ! now fixup entire lines that sit on boundaries
         if ( .true. ) then
               if ( dir.eq.0 ) then
                  if ( (((bc(0,1).eq.dirichletBoundaryCondition).or.(
     & bc(0,1).eq.inflowWithVelocityGiven).or.(bc(0,1).eq.noSlipWall))
     & .or.(bc(0,1).eq.slipWall.and.1.eq.(cc-uc)).and.(bc(0,1)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),0,
     & 1,grid).ne.0d0)))) ) then
                                   i2l = index_range(0,2-1)
                                 do i3l=i3s,i3e
                                 do i1l=i1s,i1e
                                    if ( .not. rhs_only ) then
                                    dl1(i1l,i2l,i3l) = 0d0
                                    d(i1l,i2l,i3l) = 1d0
                                    du1(i1l,i2l,i3l) = 0d0
                                    if ( is_penta ) then
                                       dl2(i1l,i2l,i3l) = 0d0
                                       du2(i1l,i2l,i3l) = 0d0
                                    endif
                                    endif ! not rhs_only
                                    if ( mode .ne. get_explicit ) then
                                       rhs(i1l,i2l,i3l) = ul(i1l,i2l,
     & i3l,cc)
                                    else
                                       rhs(i1l,i2l,i3l) = 0d0
                                    endif
                                 enddo
                                 enddo
                  endif
                  if ( (((bc(1,1).eq.dirichletBoundaryCondition).or.(
     & bc(1,1).eq.inflowWithVelocityGiven).or.(bc(1,1).eq.noSlipWall))
     & .or.(bc(1,1).eq.slipWall.and.1.eq.(cc-uc)).and.(bc(1,1)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),1,
     & 1,grid).ne.0d0)))) ) then
                                   i2l = index_range(1,2-1)
                                 do i3l=i3s,i3e
                                 do i1l=i1s,i1e
                                    if ( .not. rhs_only ) then
                                    dl1(i1l,i2l,i3l) = 0d0
                                    d(i1l,i2l,i3l) = 1d0
                                    du1(i1l,i2l,i3l) = 0d0
                                    if ( is_penta ) then
                                       dl2(i1l,i2l,i3l) = 0d0
                                       du2(i1l,i2l,i3l) = 0d0
                                    endif
                                    endif ! not rhs_only
                                    if ( mode .ne. get_explicit ) then
                                       rhs(i1l,i2l,i3l) = ul(i1l,i2l,
     & i3l,cc)
                                    else
                                       rhs(i1l,i2l,i3l) = 0d0
                                    endif
                                 enddo
                                 enddo
                  endif
                  if ( nd.gt.2 ) then
                     if ( (((bc(0,2).eq.dirichletBoundaryCondition)
     & .or.(bc(0,2).eq.inflowWithVelocityGiven).or.(bc(0,2)
     & .eq.noSlipWall)).or.(bc(0,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(0,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,2,grid).ne.0d0)))) ) then
                                      i3l = index_range(0,3-1)
                                    do i2l=i2s,i2e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( (((bc(1,2).eq.dirichletBoundaryCondition)
     & .or.(bc(1,2).eq.inflowWithVelocityGiven).or.(bc(1,2)
     & .eq.noSlipWall)).or.(bc(1,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(1,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,2,grid).ne.0d0)))) ) then
                                      i3l = index_range(1,3-1)
                                    do i2l=i2s,i2e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                  endif
               else if ( dir.eq.1 ) then
                  if ( (((bc(0,0).eq.dirichletBoundaryCondition).or.(
     & bc(0,0).eq.inflowWithVelocityGiven).or.(bc(0,0).eq.noSlipWall))
     & .or.(bc(0,0).eq.slipWall.and.0.eq.(cc-uc)).and.(bc(0,0)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),0,
     & 0,grid).ne.0d0)))) ) then
                                   i1l = index_range(0,1-1)
                                 do i3l=i3s,i3e
                                 do i2l=i2s,i2e
                                    if ( .not. rhs_only ) then
                                    dl1(i1l,i2l,i3l) = 0d0
                                    d(i1l,i2l,i3l) = 1d0
                                    du1(i1l,i2l,i3l) = 0d0
                                    if ( is_penta ) then
                                       dl2(i1l,i2l,i3l) = 0d0
                                       du2(i1l,i2l,i3l) = 0d0
                                    endif
                                    endif ! not rhs_only
                                    if ( mode .ne. get_explicit ) then
                                       rhs(i1l,i2l,i3l) = ul(i1l,i2l,
     & i3l,cc)
                                    else
                                       rhs(i1l,i2l,i3l) = 0d0
                                    endif
                                 enddo
                                 enddo
                  endif
                  if ( (((bc(1,0).eq.dirichletBoundaryCondition).or.(
     & bc(1,0).eq.inflowWithVelocityGiven).or.(bc(1,0).eq.noSlipWall))
     & .or.(bc(1,0).eq.slipWall.and.0.eq.(cc-uc)).and.(bc(1,0)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),1,
     & 0,grid).ne.0d0)))) ) then
                                   i1l = index_range(1,1-1)
                                 do i3l=i3s,i3e
                                 do i2l=i2s,i2e
                                    if ( .not. rhs_only ) then
                                    dl1(i1l,i2l,i3l) = 0d0
                                    d(i1l,i2l,i3l) = 1d0
                                    du1(i1l,i2l,i3l) = 0d0
                                    if ( is_penta ) then
                                       dl2(i1l,i2l,i3l) = 0d0
                                       du2(i1l,i2l,i3l) = 0d0
                                    endif
                                    endif ! not rhs_only
                                    if ( mode .ne. get_explicit ) then
                                       rhs(i1l,i2l,i3l) = ul(i1l,i2l,
     & i3l,cc)
                                    else
                                       rhs(i1l,i2l,i3l) = 0d0
                                    endif
                                 enddo
                                 enddo
                  endif
                  if ( nd.gt.2 ) then
                     if ( (((bc(0,2).eq.dirichletBoundaryCondition)
     & .or.(bc(0,2).eq.inflowWithVelocityGiven).or.(bc(0,2)
     & .eq.noSlipWall)).or.(bc(0,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(0,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),0,2,grid).ne.0d0)))) ) then
                                      i3l = index_range(0,3-1)
                                    do i1l=i1s,i1e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                     if ( (((bc(1,2).eq.dirichletBoundaryCondition)
     & .or.(bc(1,2).eq.inflowWithVelocityGiven).or.(bc(1,2)
     & .eq.noSlipWall)).or.(bc(1,2).eq.slipWall.and.2.eq.(cc-uc))
     & .and.(bc(1,2).eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(
     & 0,tc+tc*2),1,2,grid).ne.0d0)))) ) then
                                      i3l = index_range(1,3-1)
                                    do i1l=i1s,i1e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                     endif
                  endif
               else if ( dir.eq.2) then
                  if ( (((bc(0,0).eq.dirichletBoundaryCondition).or.(
     & bc(0,0).eq.inflowWithVelocityGiven).or.(bc(0,0).eq.noSlipWall))
     & .or.(bc(0,0).eq.slipWall.and.0.eq.(cc-uc)).and.(bc(0,0)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),0,
     & 0,grid).ne.0d0)))) ) then
                                      i1l = index_range(0,1-1)
                                    do i3l=i3s,i3e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                  endif
                  if ( (((bc(1,0).eq.dirichletBoundaryCondition).or.(
     & bc(1,0).eq.inflowWithVelocityGiven).or.(bc(1,0).eq.noSlipWall))
     & .or.(bc(1,0).eq.slipWall.and.0.eq.(cc-uc)).and.(bc(1,0)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),1,
     & 0,grid).ne.0d0)))) ) then
                                      i1l = index_range(1,1-1)
                                    do i3l=i3s,i3e
                                    do i2l=i2s,i2e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                  endif
                  if ( (((bc(0,1).eq.dirichletBoundaryCondition).or.(
     & bc(0,1).eq.inflowWithVelocityGiven).or.(bc(0,1).eq.noSlipWall))
     & .or.(bc(0,1).eq.slipWall.and.1.eq.(cc-uc)).and.(bc(0,1)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),0,
     & 1,grid).ne.0d0)))) ) then
                                      i2l = index_range(0,2-1)
                                    do i3l=i3s,i3e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                  endif
                  if ( (((bc(1,1).eq.dirichletBoundaryCondition).or.(
     & bc(1,1).eq.inflowWithVelocityGiven).or.(bc(1,1).eq.noSlipWall))
     & .or.(bc(1,1).eq.slipWall.and.1.eq.(cc-uc)).and.(bc(1,1)
     & .eq.noSlipWall.and.(.not.(cc.eq.tc.and.bcData(max(0,tc+tc*2),1,
     & 1,grid).ne.0d0)))) ) then
                                      i2l = index_range(1,2-1)
                                    do i3l=i3s,i3e
                                    do i1l=i1s,i1e
                                       if ( .not. rhs_only ) then
                                       dl1(i1l,i2l,i3l) = 0d0
                                       d(i1l,i2l,i3l) = 1d0
                                       du1(i1l,i2l,i3l) = 0d0
                                       if ( is_penta ) then
                                          dl2(i1l,i2l,i3l) = 0d0
                                          du2(i1l,i2l,i3l) = 0d0
                                       endif
                                       endif ! not rhs_only
                                       if ( mode .ne. get_explicit ) 
     & then
                                          rhs(i1l,i2l,i3l) = ul(i1l,
     & i2l,i3l,cc)
                                       else
                                          rhs(i1l,i2l,i3l) = 0d0
                                       endif
                                    enddo
                                    enddo
                  endif
               endif
         endif
c      else
c         IDENTITY_GHOST()
c      endif
      endif

      end ! subroutine ins_rrfactor
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! subroutine ins_diagfactor
      subroutine ins_diagfactor(nd,nd1a,nd1b,nd2a,nd2b,nd3a,nd3b,nd4a,
     & nd4b,mask, rsxy, u, ul, gv, bc, boundaryCondition, ndbcd1a,
     & ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,ndbcd4b,bcData,
     &  ipar, rpar, pdb, mode, dir, cc,dl2,dl1,d,du1,du2, rhs, ierr )
!     Incompressible Navier Stokes factor for an approximate factorization scheme
!     
!     INPUT::
!     nd : number of dimensions
!     mask : mask array
!     rsxy : mapping jacobian matrix
!     u : current solution
!     ul : solution to be used for the rhs
!     gv : grid velocity
!     mode : 0 means solve for the rhs temporary af variable, 1 means solve for the lhs, 2 add any explicit contribution
!     dir  : grid direction for the line sweep
!     cc : component to solve for
!
!     OUTPUT::
!     dl2,dl1,d,du1,du2 : arrays for the tri(penta)-diagonal blocks 
!                 note that dl1, d, and dl2 are used for tri-systems and dl2,dl1,d,du1,du2 for pentas
!                 name naming goes DLO or DUO meaning Diagonal Lower/Upper Offset so that dl2 is the lower diagonal with offset 2
!                 d is the diagonal
!     rhs : right hand side vector for the solve
!     ierr : error flag
!
!
      implicit none
            integer compact,finite_difference
            parameter(finite_difference=0,compact=1)
            integer solve_rhs,solve_lhs,get_explicit
            parameter(solve_rhs=0,solve_lhs=1,get_explicit=2)
            integer max_width,half_width
            parameter(max_width=5,half_width=2)
            integer max_dim
            parameter(max_dim=3)
            integer pdeModel,standardModel,BoussinesqModel,
     & viscoPlasticModel,twoPhaseFlowModel
            parameter( standardModel=0,BoussinesqModel=1,
     & viscoPlasticModel=2,twoPhaseFlowModel=3 )
            integer noSlipWall, inflowWithVelocityGiven, slipWall, 
     & outflow, convectiveOutflow, tractionFree, inflowWithPandTV, 
     & dirichletBoundaryCondition, symmetry, axisymmetric, 
     & interfaceBoundaryCondition,neumannBoundaryCondition, 
     & parallelbc, periodicbc
            parameter( noSlipWall=1,inflowWithVelocityGiven=2,
     & slipWall=4, outflow=5,convectiveOutflow=14,tractionFree=15, 
     & inflowWithPandTV=3, dirichletBoundaryCondition=12, symmetry=11,
     & axisymmetric=13,interfaceBoundaryCondition=17,
     & neumannBoundaryCondition=18,parallelbc=-31415,periodicbc=-1 )
      integer ipar(0:*)
      real rpar(0:*)
      integer nd, n1a,n1b,n2a,n2b,n3a,n3b,nd1a,nd1b,nd2a,nd2b,nd3a,
     & nd3b,nd4a,nd4b
      integer nde,nr1a,nr1b,nr2a,nr2b,nr3a,nr3b
      real u(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real ul(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,nd4a:nd4b)
      real dl2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real dl1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real   d(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du1(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real du2(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real rhs(ipar(38):ipar(39),ipar(40):ipar(41),ipar(42):ipar(43))
      real gv(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real gvl(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
!      real dw(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
!      real xy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1)
      real rsxy(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b,0:nd-1,0:nd-1)
!      real radiusInverse(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer mask(nd1a:nd1b,nd2a:nd2b,nd3a:nd3b)
      integer bc(0:1,0:2),boundaryCondition(0:1,0:2),indexRange(0:1,
     & 0:2),ierr
      integer ndbcd1a,ndbcd1b,ndbcd2a,ndbcd2b,ndbcd3a,ndbcd3b,ndbcd4a,
     & ndbcd4b
      real bcData(ndbcd1a:ndbcd1b,ndbcd2a:ndbcd2b,ndbcd3a:ndbcd3b,
     & ndbcd4a:ndbcd4b)
      integer mode,dir,cc
      double precision pdb  ! pointer to data base
      !  declareParametricDerivativeVariables(v,DIM)
      !      declareJacobianDerivativeVariables(aj_m2_,3)
      !      declareJacobianDerivativeVariables(aj_m1_,3)
             real aj_rx,aj_rxr,aj_rxs,aj_rxt,aj_rxrr,aj_rxrs,aj_rxss,
     & aj_rxrt,aj_rxst,aj_rxtt,aj_rxrrr,aj_rxrrs,aj_rxrss,aj_rxsss,
     & aj_rxrrt,aj_rxrst,aj_rxsst,aj_rxrtt,aj_rxstt,aj_rxttt,
     & aj_rxrrrr,aj_rxrrrs,aj_rxrrss,aj_rxrsss,aj_rxssss,aj_rxrrrt,
     & aj_rxrrst,aj_rxrsst,aj_rxssst,aj_rxrrtt,aj_rxrstt,aj_rxsstt,
     & aj_rxrttt,aj_rxsttt,aj_rxtttt,aj_rxrrrrr,aj_rxrrrrs,aj_rxrrrss,
     & aj_rxrrsss,aj_rxrssss,aj_rxsssss,aj_rxrrrrt,aj_rxrrrst,
     & aj_rxrrsst,aj_rxrssst,aj_rxsssst,aj_rxrrrtt,aj_rxrrstt,
     & aj_rxrsstt,aj_rxssstt,aj_rxrrttt,aj_rxrsttt,aj_rxssttt,
     & aj_rxrtttt,aj_rxstttt,aj_rxttttt,aj_rxrrrrrr,aj_rxrrrrrs,
     & aj_rxrrrrss,aj_rxrrrsss,aj_rxrrssss,aj_rxrsssss,aj_rxssssss,
     & aj_rxrrrrrt,aj_rxrrrrst,aj_rxrrrsst,aj_rxrrssst,aj_rxrsssst,
     & aj_rxssssst,aj_rxrrrrtt,aj_rxrrrstt,aj_rxrrsstt,aj_rxrssstt,
     & aj_rxsssstt,aj_rxrrrttt,aj_rxrrsttt,aj_rxrssttt,aj_rxsssttt,
     & aj_rxrrtttt,aj_rxrstttt,aj_rxsstttt,aj_rxrttttt,aj_rxsttttt,
     & aj_rxtttttt
             real aj_sx,aj_sxr,aj_sxs,aj_sxt,aj_sxrr,aj_sxrs,aj_sxss,
     & aj_sxrt,aj_sxst,aj_sxtt,aj_sxrrr,aj_sxrrs,aj_sxrss,aj_sxsss,
     & aj_sxrrt,aj_sxrst,aj_sxsst,aj_sxrtt,aj_sxstt,aj_sxttt,
     & aj_sxrrrr,aj_sxrrrs,aj_sxrrss,aj_sxrsss,aj_sxssss,aj_sxrrrt,
     & aj_sxrrst,aj_sxrsst,aj_sxssst,aj_sxrrtt,aj_sxrstt,aj_sxsstt,
     & aj_sxrttt,aj_sxsttt,aj_sxtttt,aj_sxrrrrr,aj_sxrrrrs,aj_sxrrrss,
     & aj_sxrrsss,aj_sxrssss,aj_sxsssss,aj_sxrrrrt,aj_sxrrrst,
     & aj_sxrrsst,aj_sxrssst,aj_sxsssst,aj_sxrrrtt,aj_sxrrstt,
     & aj_sxrsstt,aj_sxssstt,aj_sxrrttt,aj_sxrsttt,aj_sxssttt,
     & aj_sxrtttt,aj_sxstttt,aj_sxttttt,aj_sxrrrrrr,aj_sxrrrrrs,
     & aj_sxrrrrss,aj_sxrrrsss,aj_sxrrssss,aj_sxrsssss,aj_sxssssss,
     & aj_sxrrrrrt,aj_sxrrrrst,aj_sxrrrsst,aj_sxrrssst,aj_sxrsssst,
     & aj_sxssssst,aj_sxrrrrtt,aj_sxrrrstt,aj_sxrrsstt,aj_sxrssstt,
     & aj_sxsssstt,aj_sxrrrttt,aj_sxrrsttt,aj_sxrssttt,aj_sxsssttt,
     & aj_sxrrtttt,aj_sxrstttt,aj_sxsstttt,aj_sxrttttt,aj_sxsttttt,
     & aj_sxtttttt
             real aj_ry,aj_ryr,aj_rys,aj_ryt,aj_ryrr,aj_ryrs,aj_ryss,
     & aj_ryrt,aj_ryst,aj_rytt,aj_ryrrr,aj_ryrrs,aj_ryrss,aj_rysss,
     & aj_ryrrt,aj_ryrst,aj_rysst,aj_ryrtt,aj_rystt,aj_ryttt,
     & aj_ryrrrr,aj_ryrrrs,aj_ryrrss,aj_ryrsss,aj_ryssss,aj_ryrrrt,
     & aj_ryrrst,aj_ryrsst,aj_ryssst,aj_ryrrtt,aj_ryrstt,aj_rysstt,
     & aj_ryrttt,aj_rysttt,aj_rytttt,aj_ryrrrrr,aj_ryrrrrs,aj_ryrrrss,
     & aj_ryrrsss,aj_ryrssss,aj_rysssss,aj_ryrrrrt,aj_ryrrrst,
     & aj_ryrrsst,aj_ryrssst,aj_rysssst,aj_ryrrrtt,aj_ryrrstt,
     & aj_ryrsstt,aj_ryssstt,aj_ryrrttt,aj_ryrsttt,aj_ryssttt,
     & aj_ryrtttt,aj_rystttt,aj_ryttttt,aj_ryrrrrrr,aj_ryrrrrrs,
     & aj_ryrrrrss,aj_ryrrrsss,aj_ryrrssss,aj_ryrsssss,aj_ryssssss,
     & aj_ryrrrrrt,aj_ryrrrrst,aj_ryrrrsst,aj_ryrrssst,aj_ryrsssst,
     & aj_ryssssst,aj_ryrrrrtt,aj_ryrrrstt,aj_ryrrsstt,aj_ryrssstt,
     & aj_rysssstt,aj_ryrrrttt,aj_ryrrsttt,aj_ryrssttt,aj_rysssttt,
     & aj_ryrrtttt,aj_ryrstttt,aj_rysstttt,aj_ryrttttt,aj_rysttttt,
     & aj_rytttttt
             real aj_sy,aj_syr,aj_sys,aj_syt,aj_syrr,aj_syrs,aj_syss,
     & aj_syrt,aj_syst,aj_sytt,aj_syrrr,aj_syrrs,aj_syrss,aj_sysss,
     & aj_syrrt,aj_syrst,aj_sysst,aj_syrtt,aj_systt,aj_syttt,
     & aj_syrrrr,aj_syrrrs,aj_syrrss,aj_syrsss,aj_syssss,aj_syrrrt,
     & aj_syrrst,aj_syrsst,aj_syssst,aj_syrrtt,aj_syrstt,aj_sysstt,
     & aj_syrttt,aj_systtt,aj_sytttt,aj_syrrrrr,aj_syrrrrs,aj_syrrrss,
     & aj_syrrsss,aj_syrssss,aj_sysssss,aj_syrrrrt,aj_syrrrst,
     & aj_syrrsst,aj_syrssst,aj_sysssst,aj_syrrrtt,aj_syrrstt,
     & aj_syrsstt,aj_syssstt,aj_syrrttt,aj_syrsttt,aj_syssttt,
     & aj_syrtttt,aj_systttt,aj_syttttt,aj_syrrrrrr,aj_syrrrrrs,
     & aj_syrrrrss,aj_syrrrsss,aj_syrrssss,aj_syrsssss,aj_syssssss,
     & aj_syrrrrrt,aj_syrrrrst,aj_syrrrsst,aj_syrrssst,aj_syrsssst,
     & aj_syssssst,aj_syrrrrtt,aj_syrrrstt,aj_syrrsstt,aj_syrssstt,
     & aj_sysssstt,aj_syrrrttt,aj_syrrsttt,aj_syrssttt,aj_sysssttt,
     & aj_syrrtttt,aj_syrstttt,aj_sysstttt,aj_syrttttt,aj_systtttt,
     & aj_sytttttt
             real aj_rxx,aj_rxy,aj_rxz,aj_rxxx,aj_rxxy,aj_rxyy,aj_rxxz,
     & aj_rxyz,aj_rxzz,aj_rxxxx,aj_rxxxy,aj_rxxyy,aj_rxyyy,aj_rxxxz,
     & aj_rxxyz,aj_rxyyz,aj_rxxzz,aj_rxyzz,aj_rxzzz,aj_rxxxxx,
     & aj_rxxxxy,aj_rxxxyy,aj_rxxyyy,aj_rxyyyy,aj_rxxxxz,aj_rxxxyz,
     & aj_rxxyyz,aj_rxyyyz,aj_rxxxzz,aj_rxxyzz,aj_rxyyzz,aj_rxxzzz,
     & aj_rxyzzz,aj_rxzzzz,aj_rxxxxxx,aj_rxxxxxy,aj_rxxxxyy,
     & aj_rxxxyyy,aj_rxxyyyy,aj_rxyyyyy,aj_rxxxxxz,aj_rxxxxyz,
     & aj_rxxxyyz,aj_rxxyyyz,aj_rxyyyyz,aj_rxxxxzz,aj_rxxxyzz,
     & aj_rxxyyzz,aj_rxyyyzz,aj_rxxxzzz,aj_rxxyzzz,aj_rxyyzzz,
     & aj_rxxzzzz,aj_rxyzzzz,aj_rxzzzzz,aj_rxxxxxxx,aj_rxxxxxxy,
     & aj_rxxxxxyy,aj_rxxxxyyy,aj_rxxxyyyy,aj_rxxyyyyy,aj_rxyyyyyy,
     & aj_rxxxxxxz,aj_rxxxxxyz,aj_rxxxxyyz,aj_rxxxyyyz,aj_rxxyyyyz,
     & aj_rxyyyyyz,aj_rxxxxxzz,aj_rxxxxyzz,aj_rxxxyyzz,aj_rxxyyyzz,
     & aj_rxyyyyzz,aj_rxxxxzzz,aj_rxxxyzzz,aj_rxxyyzzz,aj_rxyyyzzz,
     & aj_rxxxzzzz,aj_rxxyzzzz,aj_rxyyzzzz,aj_rxxzzzzz,aj_rxyzzzzz,
     & aj_rxzzzzzz
             real aj_sxx,aj_sxy,aj_sxz,aj_sxxx,aj_sxxy,aj_sxyy,aj_sxxz,
     & aj_sxyz,aj_sxzz,aj_sxxxx,aj_sxxxy,aj_sxxyy,aj_sxyyy,aj_sxxxz,
     & aj_sxxyz,aj_sxyyz,aj_sxxzz,aj_sxyzz,aj_sxzzz,aj_sxxxxx,
     & aj_sxxxxy,aj_sxxxyy,aj_sxxyyy,aj_sxyyyy,aj_sxxxxz,aj_sxxxyz,
     & aj_sxxyyz,aj_sxyyyz,aj_sxxxzz,aj_sxxyzz,aj_sxyyzz,aj_sxxzzz,
     & aj_sxyzzz,aj_sxzzzz,aj_sxxxxxx,aj_sxxxxxy,aj_sxxxxyy,
     & aj_sxxxyyy,aj_sxxyyyy,aj_sxyyyyy,aj_sxxxxxz,aj_sxxxxyz,
     & aj_sxxxyyz,aj_sxxyyyz,aj_sxyyyyz,aj_sxxxxzz,aj_sxxxyzz,
     & aj_sxxyyzz,aj_sxyyyzz,aj_sxxxzzz,aj_sxxyzzz,aj_sxyyzzz,
     & aj_sxxzzzz,aj_sxyzzzz,aj_sxzzzzz,aj_sxxxxxxx,aj_sxxxxxxy,
     & aj_sxxxxxyy,aj_sxxxxyyy,aj_sxxxyyyy,aj_sxxyyyyy,aj_sxyyyyyy,
     & aj_sxxxxxxz,aj_sxxxxxyz,aj_sxxxxyyz,aj_sxxxyyyz,aj_sxxyyyyz,
     & aj_sxyyyyyz,aj_sxxxxxzz,aj_sxxxxyzz,aj_sxxxyyzz,aj_sxxyyyzz,
     & aj_sxyyyyzz,aj_sxxxxzzz,aj_sxxxyzzz,aj_sxxyyzzz,aj_sxyyyzzz,
     & aj_sxxxzzzz,aj_sxxyzzzz,aj_sxyyzzzz,aj_sxxzzzzz,aj_sxyzzzzz,
     & aj_sxzzzzzz
             real aj_ryx,aj_ryy,aj_ryz,aj_ryxx,aj_ryxy,aj_ryyy,aj_ryxz,
     & aj_ryyz,aj_ryzz,aj_ryxxx,aj_ryxxy,aj_ryxyy,aj_ryyyy,aj_ryxxz,
     & aj_ryxyz,aj_ryyyz,aj_ryxzz,aj_ryyzz,aj_ryzzz,aj_ryxxxx,
     & aj_ryxxxy,aj_ryxxyy,aj_ryxyyy,aj_ryyyyy,aj_ryxxxz,aj_ryxxyz,
     & aj_ryxyyz,aj_ryyyyz,aj_ryxxzz,aj_ryxyzz,aj_ryyyzz,aj_ryxzzz,
     & aj_ryyzzz,aj_ryzzzz,aj_ryxxxxx,aj_ryxxxxy,aj_ryxxxyy,
     & aj_ryxxyyy,aj_ryxyyyy,aj_ryyyyyy,aj_ryxxxxz,aj_ryxxxyz,
     & aj_ryxxyyz,aj_ryxyyyz,aj_ryyyyyz,aj_ryxxxzz,aj_ryxxyzz,
     & aj_ryxyyzz,aj_ryyyyzz,aj_ryxxzzz,aj_ryxyzzz,aj_ryyyzzz,
     & aj_ryxzzzz,aj_ryyzzzz,aj_ryzzzzz,aj_ryxxxxxx,aj_ryxxxxxy,
     & aj_ryxxxxyy,aj_ryxxxyyy,aj_ryxxyyyy,aj_ryxyyyyy,aj_ryyyyyyy,
     & aj_ryxxxxxz,aj_ryxxxxyz,aj_ryxxxyyz,aj_ryxxyyyz,aj_ryxyyyyz,
     & aj_ryyyyyyz,aj_ryxxxxzz,aj_ryxxxyzz,aj_ryxxyyzz,aj_ryxyyyzz,
     & aj_ryyyyyzz,aj_ryxxxzzz,aj_ryxxyzzz,aj_ryxyyzzz,aj_ryyyyzzz,
     & aj_ryxxzzzz,aj_ryxyzzzz,aj_ryyyzzzz,aj_ryxzzzzz,aj_ryyzzzzz,
     & aj_ryzzzzzz
             real aj_syx,aj_syy,aj_syz,aj_syxx,aj_syxy,aj_syyy,aj_syxz,
     & aj_syyz,aj_syzz,aj_syxxx,aj_syxxy,aj_syxyy,aj_syyyy,aj_syxxz,
     & aj_syxyz,aj_syyyz,aj_syxzz,aj_syyzz,aj_syzzz,aj_syxxxx,
     & aj_syxxxy,aj_syxxyy,aj_syxyyy,aj_syyyyy,aj_syxxxz,aj_syxxyz,
     & aj_syxyyz,aj_syyyyz,aj_syxxzz,aj_syxyzz,aj_syyyzz,aj_syxzzz,
     & aj_syyzzz,aj_syzzzz,aj_syxxxxx,aj_syxxxxy,aj_syxxxyy,
     & aj_syxxyyy,aj_syxyyyy,aj_syyyyyy,aj_syxxxxz,aj_syxxxyz,
     & aj_syxxyyz,aj_syxyyyz,aj_syyyyyz,aj_syxxxzz,aj_syxxyzz,
     & aj_syxyyzz,aj_syyyyzz,aj_syxxzzz,aj_syxyzzz,aj_syyyzzz,
     & aj_syxzzzz,aj_syyzzzz,aj_syzzzzz,aj_syxxxxxx,aj_syxxxxxy,
     & aj_syxxxxyy,aj_syxxxyyy,aj_syxxyyyy,aj_syxyyyyy,aj_syyyyyyy,
     & aj_syxxxxxz,aj_syxxxxyz,aj_syxxxyyz,aj_syxxyyyz,aj_syxyyyyz,
     & aj_syyyyyyz,aj_syxxxxzz,aj_syxxxyzz,aj_syxxyyzz,aj_syxyyyzz,
     & aj_syyyyyzz,aj_syxxxzzz,aj_syxxyzzz,aj_syxyyzzz,aj_syyyyzzz,
     & aj_syxxzzzz,aj_syxyzzzz,aj_syyyzzzz,aj_syxzzzzz,aj_syyzzzzz,
     & aj_syzzzzzz
             real aj_rz,aj_rzr,aj_rzs,aj_rzt,aj_rzrr,aj_rzrs,aj_rzss,
     & aj_rzrt,aj_rzst,aj_rztt,aj_rzrrr,aj_rzrrs,aj_rzrss,aj_rzsss,
     & aj_rzrrt,aj_rzrst,aj_rzsst,aj_rzrtt,aj_rzstt,aj_rzttt,
     & aj_rzrrrr,aj_rzrrrs,aj_rzrrss,aj_rzrsss,aj_rzssss,aj_rzrrrt,
     & aj_rzrrst,aj_rzrsst,aj_rzssst,aj_rzrrtt,aj_rzrstt,aj_rzsstt,
     & aj_rzrttt,aj_rzsttt,aj_rztttt,aj_rzrrrrr,aj_rzrrrrs,aj_rzrrrss,
     & aj_rzrrsss,aj_rzrssss,aj_rzsssss,aj_rzrrrrt,aj_rzrrrst,
     & aj_rzrrsst,aj_rzrssst,aj_rzsssst,aj_rzrrrtt,aj_rzrrstt,
     & aj_rzrsstt,aj_rzssstt,aj_rzrrttt,aj_rzrsttt,aj_rzssttt,
     & aj_rzrtttt,aj_rzstttt,aj_rzttttt,aj_rzrrrrrr,aj_rzrrrrrs,
     & aj_rzrrrrss,aj_rzrrrsss,aj_rzrrssss,aj_rzrsssss,aj_rzssssss,
     & aj_rzrrrrrt,aj_rzrrrrst,aj_rzrrrsst,aj_rzrrssst,aj_rzrsssst,
     & aj_rzssssst,aj_rzrrrrtt,aj_rzrrrstt,aj_rzrrsstt,aj_rzrssstt,
     & aj_rzsssstt,aj_rzrrrttt,aj_rzrrsttt,aj_rzrssttt,aj_rzsssttt,
     & aj_rzrrtttt,aj_rzrstttt,aj_rzsstttt,aj_rzrttttt,aj_rzsttttt,
     & aj_rztttttt
             real aj_sz,aj_szr,aj_szs,aj_szt,aj_szrr,aj_szrs,aj_szss,
     & aj_szrt,aj_szst,aj_sztt,aj_szrrr,aj_szrrs,aj_szrss,aj_szsss,
     & aj_szrrt,aj_szrst,aj_szsst,aj_szrtt,aj_szstt,aj_szttt,
     & aj_szrrrr,aj_szrrrs,aj_szrrss,aj_szrsss,aj_szssss,aj_szrrrt,
     & aj_szrrst,aj_szrsst,aj_szssst,aj_szrrtt,aj_szrstt,aj_szsstt,
     & aj_szrttt,aj_szsttt,aj_sztttt,aj_szrrrrr,aj_szrrrrs,aj_szrrrss,
     & aj_szrrsss,aj_szrssss,aj_szsssss,aj_szrrrrt,aj_szrrrst,
     & aj_szrrsst,aj_szrssst,aj_szsssst,aj_szrrrtt,aj_szrrstt,
     & aj_szrsstt,aj_szssstt,aj_szrrttt,aj_szrsttt,aj_szssttt,
     & aj_szrtttt,aj_szstttt,aj_szttttt,aj_szrrrrrr,aj_szrrrrrs,
     & aj_szrrrrss,aj_szrrrsss,aj_szrrssss,aj_szrsssss,aj_szssssss,
     & aj_szrrrrrt,aj_szrrrrst,aj_szrrrsst,aj_szrrssst,aj_szrsssst,
     & aj_szssssst,aj_szrrrrtt,aj_szrrrstt,aj_szrrsstt,aj_szrssstt,
     & aj_szsssstt,aj_szrrrttt,aj_szrrsttt,aj_szrssttt,aj_szsssttt,
     & aj_szrrtttt,aj_szrstttt,aj_szsstttt,aj_szrttttt,aj_szsttttt,
     & aj_sztttttt
             real aj_tx,aj_txr,aj_txs,aj_txt,aj_txrr,aj_txrs,aj_txss,
     & aj_txrt,aj_txst,aj_txtt,aj_txrrr,aj_txrrs,aj_txrss,aj_txsss,
     & aj_txrrt,aj_txrst,aj_txsst,aj_txrtt,aj_txstt,aj_txttt,
     & aj_txrrrr,aj_txrrrs,aj_txrrss,aj_txrsss,aj_txssss,aj_txrrrt,
     & aj_txrrst,aj_txrsst,aj_txssst,aj_txrrtt,aj_txrstt,aj_txsstt,
     & aj_txrttt,aj_txsttt,aj_txtttt,aj_txrrrrr,aj_txrrrrs,aj_txrrrss,
     & aj_txrrsss,aj_txrssss,aj_txsssss,aj_txrrrrt,aj_txrrrst,
     & aj_txrrsst,aj_txrssst,aj_txsssst,aj_txrrrtt,aj_txrrstt,
     & aj_txrsstt,aj_txssstt,aj_txrrttt,aj_txrsttt,aj_txssttt,
     & aj_txrtttt,aj_txstttt,aj_txttttt,aj_txrrrrrr,aj_txrrrrrs,
     & aj_txrrrrss,aj_txrrrsss,aj_txrrssss,aj_txrsssss,aj_txssssss,
     & aj_txrrrrrt,aj_txrrrrst,aj_txrrrsst,aj_txrrssst,aj_txrsssst,
     & aj_txssssst,aj_txrrrrtt,aj_txrrrstt,aj_txrrsstt,aj_txrssstt,
     & aj_txsssstt,aj_txrrrttt,aj_txrrsttt,aj_txrssttt,aj_txsssttt,
     & aj_txrrtttt,aj_txrstttt,aj_txsstttt,aj_txrttttt,aj_txsttttt,
     & aj_txtttttt
             real aj_ty,aj_tyr,aj_tys,aj_tyt,aj_tyrr,aj_tyrs,aj_tyss,
     & aj_tyrt,aj_tyst,aj_tytt,aj_tyrrr,aj_tyrrs,aj_tyrss,aj_tysss,
     & aj_tyrrt,aj_tyrst,aj_tysst,aj_tyrtt,aj_tystt,aj_tyttt,
     & aj_tyrrrr,aj_tyrrrs,aj_tyrrss,aj_tyrsss,aj_tyssss,aj_tyrrrt,
     & aj_tyrrst,aj_tyrsst,aj_tyssst,aj_tyrrtt,aj_tyrstt,aj_tysstt,
     & aj_tyrttt,aj_tysttt,aj_tytttt,aj_tyrrrrr,aj_tyrrrrs,aj_tyrrrss,
     & aj_tyrrsss,aj_tyrssss,aj_tysssss,aj_tyrrrrt,aj_tyrrrst,
     & aj_tyrrsst,aj_tyrssst,aj_tysssst,aj_tyrrrtt,aj_tyrrstt,
     & aj_tyrsstt,aj_tyssstt,aj_tyrrttt,aj_tyrsttt,aj_tyssttt,
     & aj_tyrtttt,aj_tystttt,aj_tyttttt,aj_tyrrrrrr,aj_tyrrrrrs,
     & aj_tyrrrrss,aj_tyrrrsss,aj_tyrrssss,aj_tyrsssss,aj_tyssssss,
     & aj_tyrrrrrt,aj_tyrrrrst,aj_tyrrrsst,aj_tyrrssst,aj_tyrsssst,
     & aj_tyssssst,aj_tyrrrrtt,aj_tyrrrstt,aj_tyrrsstt,aj_tyrssstt,
     & aj_tysssstt,aj_tyrrrttt,aj_tyrrsttt,aj_tyrssttt,aj_tysssttt,
     & aj_tyrrtttt,aj_tyrstttt,aj_tysstttt,aj_tyrttttt,aj_tysttttt,
     & aj_tytttttt
             real aj_tz,aj_tzr,aj_tzs,aj_tzt,aj_tzrr,aj_tzrs,aj_tzss,
     & aj_tzrt,aj_tzst,aj_tztt,aj_tzrrr,aj_tzrrs,aj_tzrss,aj_tzsss,
     & aj_tzrrt,aj_tzrst,aj_tzsst,aj_tzrtt,aj_tzstt,aj_tzttt,
     & aj_tzrrrr,aj_tzrrrs,aj_tzrrss,aj_tzrsss,aj_tzssss,aj_tzrrrt,
     & aj_tzrrst,aj_tzrsst,aj_tzssst,aj_tzrrtt,aj_tzrstt,aj_tzsstt,
     & aj_tzrttt,aj_tzsttt,aj_tztttt,aj_tzrrrrr,aj_tzrrrrs,aj_tzrrrss,
     & aj_tzrrsss,aj_tzrssss,aj_tzsssss,aj_tzrrrrt,aj_tzrrrst,
     & aj_tzrrsst,aj_tzrssst,aj_tzsssst,aj_tzrrrtt,aj_tzrrstt,
     & aj_tzrsstt,aj_tzssstt,aj_tzrrttt,aj_tzrsttt,aj_tzssttt,
     & aj_tzrtttt,aj_tzstttt,aj_tzttttt,aj_tzrrrrrr,aj_tzrrrrrs,
     & aj_tzrrrrss,aj_tzrrrsss,aj_tzrrssss,aj_tzrsssss,aj_tzssssss,
     & aj_tzrrrrrt,aj_tzrrrrst,aj_tzrrrsst,aj_tzrrssst,aj_tzrsssst,
     & aj_tzssssst,aj_tzrrrrtt,aj_tzrrrstt,aj_tzrrsstt,aj_tzrssstt,
     & aj_tzsssstt,aj_tzrrrttt,aj_tzrrsttt,aj_tzrssttt,aj_tzsssttt,
     & aj_tzrrtttt,aj_tzrstttt,aj_tzsstttt,aj_tzrttttt,aj_tzsttttt,
     & aj_tztttttt
             real aj_rzx,aj_rzy,aj_rzz,aj_rzxx,aj_rzxy,aj_rzyy,aj_rzxz,
     & aj_rzyz,aj_rzzz,aj_rzxxx,aj_rzxxy,aj_rzxyy,aj_rzyyy,aj_rzxxz,
     & aj_rzxyz,aj_rzyyz,aj_rzxzz,aj_rzyzz,aj_rzzzz,aj_rzxxxx,
     & aj_rzxxxy,aj_rzxxyy,aj_rzxyyy,aj_rzyyyy,aj_rzxxxz,aj_rzxxyz,
     & aj_rzxyyz,aj_rzyyyz,aj_rzxxzz,aj_rzxyzz,aj_rzyyzz,aj_rzxzzz,
     & aj_rzyzzz,aj_rzzzzz,aj_rzxxxxx,aj_rzxxxxy,aj_rzxxxyy,
     & aj_rzxxyyy,aj_rzxyyyy,aj_rzyyyyy,aj_rzxxxxz,aj_rzxxxyz,
     & aj_rzxxyyz,aj_rzxyyyz,aj_rzyyyyz,aj_rzxxxzz,aj_rzxxyzz,
     & aj_rzxyyzz,aj_rzyyyzz,aj_rzxxzzz,aj_rzxyzzz,aj_rzyyzzz,
     & aj_rzxzzzz,aj_rzyzzzz,aj_rzzzzzz,aj_rzxxxxxx,aj_rzxxxxxy,
     & aj_rzxxxxyy,aj_rzxxxyyy,aj_rzxxyyyy,aj_rzxyyyyy,aj_rzyyyyyy,
     & aj_rzxxxxxz,aj_rzxxxxyz,aj_rzxxxyyz,aj_rzxxyyyz,aj_rzxyyyyz,
     & aj_rzyyyyyz,aj_rzxxxxzz,aj_rzxxxyzz,aj_rzxxyyzz,aj_rzxyyyzz,
     & aj_rzyyyyzz,aj_rzxxxzzz,aj_rzxxyzzz,aj_rzxyyzzz,aj_rzyyyzzz,
     & aj_rzxxzzzz,aj_rzxyzzzz,aj_rzyyzzzz,aj_rzxzzzzz,aj_rzyzzzzz,
     & aj_rzzzzzzz
             real aj_szx,aj_szy,aj_szz,aj_szxx,aj_szxy,aj_szyy,aj_szxz,
     & aj_szyz,aj_szzz,aj_szxxx,aj_szxxy,aj_szxyy,aj_szyyy,aj_szxxz,
     & aj_szxyz,aj_szyyz,aj_szxzz,aj_szyzz,aj_szzzz,aj_szxxxx,
     & aj_szxxxy,aj_szxxyy,aj_szxyyy,aj_szyyyy,aj_szxxxz,aj_szxxyz,
     & aj_szxyyz,aj_szyyyz,aj_szxxzz,aj_szxyzz,aj_szyyzz,aj_szxzzz,
     & aj_szyzzz,aj_szzzzz,aj_szxxxxx,aj_szxxxxy,aj_szxxxyy,
     & aj_szxxyyy,aj_szxyyyy,aj_szyyyyy,aj_szxxxxz,aj_szxxxyz,
     & aj_szxxyyz,aj_szxyyyz,aj_szyyyyz,aj_szxxxzz,aj_szxxyzz,
     & aj_szxyyzz,aj_szyyyzz,aj_szxxzzz,aj_szxyzzz,aj_szyyzzz,
     & aj_szxzzzz,aj_szyzzzz,aj_szzzzzz,aj_szxxxxxx,aj_szxxxxxy,
     & aj_szxxxxyy,aj_szxxxyyy,aj_szxxyyyy,aj_szxyyyyy,aj_szyyyyyy,
     & aj_szxxxxxz,aj_szxxxxyz,aj_szxxxyyz,aj_szxxyyyz,aj_szxyyyyz,
     & aj_szyyyyyz,aj_szxxxxzz,aj_szxxxyzz,aj_szxxyyzz,aj_szxyyyzz,
     & aj_szyyyyzz,aj_szxxxzzz,aj_szxxyzzz,aj_szxyyzzz,aj_szyyyzzz,
     & aj_szxxzzzz,aj_szxyzzzz,aj_szyyzzzz,aj_szxzzzzz,aj_szyzzzzz,
     & aj_szzzzzzz
             real aj_txx,aj_txy,aj_txz,aj_txxx,aj_txxy,aj_txyy,aj_txxz,
     & aj_txyz,aj_txzz,aj_txxxx,aj_txxxy,aj_txxyy,aj_txyyy,aj_txxxz,
     & aj_txxyz,aj_txyyz,aj_txxzz,aj_txyzz,aj_txzzz,aj_txxxxx,
     & aj_txxxxy,aj_txxxyy,aj_txxyyy,aj_txyyyy,aj_txxxxz,aj_txxxyz,
     & aj_txxyyz,aj_txyyyz,aj_txxxzz,aj_txxyzz,aj_txyyzz,aj_txxzzz,
     & aj_txyzzz,aj_txzzzz,aj_txxxxxx,aj_txxxxxy,aj_txxxxyy,
     & aj_txxxyyy,aj_txxyyyy,aj_txyyyyy,aj_txxxxxz,aj_txxxxyz,
     & aj_txxxyyz,aj_txxyyyz,aj_txyyyyz,aj_txxxxzz,aj_txxxyzz,
     & aj_txxyyzz,aj_txyyyzz,aj_txxxzzz,aj_txxyzzz,aj_txyyzzz,
     & aj_txxzzzz,aj_txyzzzz,aj_txzzzzz,aj_txxxxxxx,aj_txxxxxxy,
     & aj_txxxxxyy,aj_txxxxyyy,aj_txxxyyyy,aj_txxyyyyy,aj_txyyyyyy,
     & aj_txxxxxxz,aj_txxxxxyz,aj_txxxxyyz,aj_txxxyyyz,aj_txxyyyyz,
     & aj_txyyyyyz,aj_txxxxxzz,aj_txxxxyzz,aj_txxxyyzz,aj_txxyyyzz,
     & aj_txyyyyzz,aj_txxxxzzz,aj_txxxyzzz,aj_txxyyzzz,aj_txyyyzzz,
     & aj_txxxzzzz,aj_txxyzzzz,aj_txyyzzzz,aj_txxzzzzz,aj_txyzzzzz,
     & aj_txzzzzzz
             real aj_tyx,aj_tyy,aj_tyz,aj_tyxx,aj_tyxy,aj_tyyy,aj_tyxz,
     & aj_tyyz,aj_tyzz,aj_tyxxx,aj_tyxxy,aj_tyxyy,aj_tyyyy,aj_tyxxz,
     & aj_tyxyz,aj_tyyyz,aj_tyxzz,aj_tyyzz,aj_tyzzz,aj_tyxxxx,
     & aj_tyxxxy,aj_tyxxyy,aj_tyxyyy,aj_tyyyyy,aj_tyxxxz,aj_tyxxyz,
     & aj_tyxyyz,aj_tyyyyz,aj_tyxxzz,aj_tyxyzz,aj_tyyyzz,aj_tyxzzz,
     & aj_tyyzzz,aj_tyzzzz,aj_tyxxxxx,aj_tyxxxxy,aj_tyxxxyy,
     & aj_tyxxyyy,aj_tyxyyyy,aj_tyyyyyy,aj_tyxxxxz,aj_tyxxxyz,
     & aj_tyxxyyz,aj_tyxyyyz,aj_tyyyyyz,aj_tyxxxzz,aj_tyxxyzz,
     & aj_tyxyyzz,aj_tyyyyzz,aj_tyxxzzz,aj_tyxyzzz,aj_tyyyzzz,
     & aj_tyxzzzz,aj_tyyzzzz,aj_tyzzzzz,aj_tyxxxxxx,aj_tyxxxxxy,
     & aj_tyxxxxyy,aj_tyxxxyyy,aj_tyxxyyyy,aj_tyxyyyyy,aj_tyyyyyyy,
     & aj_tyxxxxxz,aj_tyxxxxyz,aj_tyxxxyyz,aj_tyxxyyyz,aj_tyxyyyyz,
     & aj_tyyyyyyz,aj_tyxxxxzz,aj_tyxxxyzz,aj_tyxxyyzz,aj_tyxyyyzz,
     & aj_tyyyyyzz,aj_tyxxxzzz,aj_tyxxyzzz,aj_tyxyyzzz,aj_tyyyyzzz,
     & aj_tyxxzzzz,aj_tyxyzzzz,aj_tyyyzzzz,aj_tyxzzzzz,aj_tyyzzzzz,
     & aj_tyzzzzzz
             real aj_tzx,aj_tzy,aj_tzz,aj_tzxx,aj_tzxy,aj_tzyy,aj_tzxz,
     & aj_tzyz,aj_tzzz,aj_tzxxx,aj_tzxxy,aj_tzxyy,aj_tzyyy,aj_tzxxz,
     & aj_tzxyz,aj_tzyyz,aj_tzxzz,aj_tzyzz,aj_tzzzz,aj_tzxxxx,
     & aj_tzxxxy,aj_tzxxyy,aj_tzxyyy,aj_tzyyyy,aj_tzxxxz,aj_tzxxyz,
     & aj_tzxyyz,aj_tzyyyz,aj_tzxxzz,aj_tzxyzz,aj_tzyyzz,aj_tzxzzz,
     & aj_tzyzzz,aj_tzzzzz,aj_tzxxxxx,aj_tzxxxxy,aj_tzxxxyy,
     & aj_tzxxyyy,aj_tzxyyyy,aj_tzyyyyy,aj_tzxxxxz,aj_tzxxxyz,
     & aj_tzxxyyz,aj_tzxyyyz,aj_tzyyyyz,aj_tzxxxzz,aj_tzxxyzz,
     & aj_tzxyyzz,aj_tzyyyzz,aj_tzxxzzz,aj_tzxyzzz,aj_tzyyzzz,
     & aj_tzxzzzz,aj_tzyzzzz,aj_tzzzzzz,aj_tzxxxxxx,aj_tzxxxxxy,
     & aj_tzxxxxyy,aj_tzxxxyyy,aj_tzxxyyyy,aj_tzxyyyyy,aj_tzyyyyyy,
     & aj_tzxxxxxz,aj_tzxxxxyz,aj_tzxxxyyz,aj_tzxxyyyz,aj_tzxyyyyz,
     & aj_tzyyyyyz,aj_tzxxxxzz,aj_tzxxxyzz,aj_tzxxyyzz,aj_tzxyyyzz,
     & aj_tzyyyyzz,aj_tzxxxzzz,aj_tzxxyzzz,aj_tzxyyzzz,aj_tzyyyzzz,
     & aj_tzxxzzzz,aj_tzxyzzzz,aj_tzyyzzzz,aj_tzxzzzzz,aj_tzyzzzzz,
     & aj_tzzzzzzz
      !      declareJacobianDerivativeVariables(aj_p1_,3)
      !      declareJacobianDerivativeVariables(aj_p2_,3)
            double precision t1,t14,t6
            integer i1s,i1e,i2s,i2e,i3s,i3e
            integer pc,uc,vc,wc,kc,sc,tc
            integer order,disc_approx
            logical is_periodic, is_dirichlet_bc, is_neumann_bc,
     & is_outflow_bc
            logical is_parallel,is_moving
            logical use_ad2,use_ad4
            integer index_range(0:1,0:2),dims(0:1,0:2),gir(0:1,0:2)
            integer debug,grid
            integer pde_model
            integer npghost
            integer processid
            double precision dr(0:max_dim-1),dx(0:max_dim-1)
            double precision dt
            double precision nu,kthermal
            double precision gravity(0:max_dim-1)
            double precision thermal_expansivity
            double precision advection_coefficient
            double precision ad21,ad22,ad41,ad42
            double precision adcBoussinesq
            logical is_rect, use_os_rxr,rhs_only
            logical is_penta, have_ghost_points, extrap_all_1
            integer isn(0:max_dim-1),is1,is2,is3
            integer ilo(0:max_dim-1),ilo1,ilo2,ilo3
            integer bc_range(0:1,0:1,0:2),side,bc_trange(0:1,0:1,0:2)
            integer i1,i2,i3,i1l,i2l,i3l,i1o,i2o,i3o
            integer i1p,i2p,i3p,i1m,i2m,i3m
            integer i1pp,i2pp,i3pp,i1mm,i2mm,i3mm
            integer id,id2,ic  !! loop variable over physical/parameter space dimension
            integer off
            double precision nu_eq,dri(0:max_dim-1),dxi(0:max_dim-1),
     & dto2,drid,dxid
            double precision uxnorm
      double precision px_coeff(-half_width:half_width)
      double precision pxx_coeff(-half_width:half_width)
      double precision dx_coeff(-half_width:half_width)
      double precision dxx_coeff(-half_width:half_width)
      double precision rx(-half_width:half_width,0:max_dim-1,0:max_dim-
     & 1) ! dr_i/dx_j
      double precision rxx(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dx^2_j
      double precision rxr(-half_width:half_width,0:max_dim-1,
     & 0:max_dim-1)! d^2r_i/dr_idx_j
      double precision rxs(0:max_dim-1,0:max_dim-1,0:max_dim-1)! d^2r_i/dr_jdx_k

      integer io !! loop variable for looping over adjacent grid points in the stencil (i.e. from -half_width to half_width)

      !!!!!!!! extract parameters from ipar and rpar
            i1s = ipar(0)
            i1e = ipar(1)
            i2s = ipar(2)
            i2e = ipar(3)
            i3s = ipar(4)
            i3e = ipar(5)
            gir(0,0) = i1s
            gir(1,0) = i1e
            gir(0,1) = i2s
            gir(1,1) = i2e
            gir(0,2) = i3s
            gir(1,2) = i3e
            pc = ipar(6)
            uc = ipar(7)
            vc = ipar(8)
            wc = ipar(9)
            kc = ipar(10)
            sc = ipar(11)
            tc = ipar(12)
            grid = ipar(13)
            order = ipar(14)
            is_moving = ipar(15).ne.0
            disc_approx = ipar(16)
            is_rect = ipar(26).eq.1
            is_periodic = ipar(27).ne.0
            index_range(0,0) = ipar(38)
            index_range(1,0) = ipar(39)
            index_range(0,1) = ipar(40)
            index_range(1,1) = ipar(41)
            index_range(0,2) = ipar(42)
            index_range(1,2) = ipar(43)
            dims(0,0) = nd1a
            dims(1,0) = nd1b
            dims(0,1) = nd2a
            dims(1,1) = nd2b
            dims(0,2) = nd3a
            dims(1,2) = nd3b
            do side=0,1
               bc_range(side,0,0) = i1s
               bc_range(side,1,0) = i1e
               bc_range(side,0,1) = i2s
               bc_range(side,1,1) = i2e
               bc_range(side,0,2) = i3s
               bc_range(side,1,2) = i3e
               do id=0,max_dim-1
                  bc_trange(side,0,id) = bc_range(side,0,id)
                  bc_trange(side,0,id) = bc_range(side,1,id)
               enddo
            enddo
      !     here are the loop bounds for the boundary conditions
            bc_range(0,0,dir) = bc_range(0,0,dir)
            bc_range(0,1,dir) = bc_range(0,0,dir)
            bc_range(1,0,dir) = bc_range(1,1,dir)
            bc_range(1,1,dir) = bc_range(1,1,dir)
            debug = ipar(48)
            pde_model = ipar(49)
            use_ad2 = ipar(50).ne.0
            use_ad4 = ipar(51).ne.0
            is_parallel = ipar(52).eq.1
            npghost = ipar(54)
            rhs_only = ipar(55).ne.0
            processid = ipar(56)
            dr(0) = rpar(0)
            dr(1) = rpar(1)
            dr(2) = rpar(2)
            dx(0) = rpar(3)
            dx(1) = rpar(4)
            dx(2) = rpar(5)
            dt = rpar(6)
            nu = rpar(8)
            kthermal = rpar(9)
            gravity(0) = rpar(20)
            gravity(1) = rpar(21)
            gravity(2) = rpar(22)
            thermal_expansivity = rpar(23)
            advection_coefficient = rpar(24)
      ! *wdh* 2013/09/24      if ( .false. ) then
            if ( .true. ) then ! *wdh* 2013/09/24 try this
      !! effectively use backward euler for the artificial dissipation
            ad21 = 2d0*rpar(25)
            ad22 = 2d0*rpar(26)
            ad41 = 2d0*rpar(27)
            ad42 = 2d0*rpar(28)
            if ( .not.use_ad2 .or. mode.eq.solve_rhs ) then
               ad21 = 0d0
               ad22 = 0d0
            endif
            if ( .not. use_ad4 .or. mode.eq.solve_rhs ) then
               ad41 = 0d0
               ad42 = 0d0
            endif
            if ( mode.eq.solve_rhs) then
               use_ad4 = .false.
               use_ad2 = .false.
            endif
            else
               ad21 = rpar(25)
               ad22 = rpar(26)
               ad41 = rpar(27)
               ad42 = rpar(28)
               if ( .not.use_ad2 ) then
                  ad21 = 0d0
                  ad22 = 0d0
               endif
               if ( .not. use_ad4 )then
                  ad41 = 0d0
                  ad42 = 0d0
               endif
            endif
      !!!!!!!! setup additional local variables based on the data in ipar and rpar
      !! old way      is_penta = (order.eq.4 .and. disc_approx.eq.finite_difference).or.(order.gt.4 .and. disc_approx.eq.compact)
            is_penta = (order.gt.2 .and. disc_approx.eq.compact)
            if ( cc.eq.tc .and. pde_model.eq.BoussinesqModel ) then
               nu_eq = kthermal
               ! Set dissipation for the T equation *wdh* 2013/02/02
               adcBoussinesq = rpar(29)
               ! write(*,'("ins_factors: adcBoussinesq=",e12.2)') adcBoussinesq
               ad21=0.
               ad22=0.
               ad41=0.
               ad42=0.
               if ( use_ad2 ) then
                 ad21=adcBoussinesq
               end if
               if( use_ad4 )then
                 ad41=adcBoussinesq
               end if
            else
               nu_eq = nu
            endif
            dto2 = dt/2d0
            do id=0,max_dim-1
               dxi(id) = 1d0/dx(id)
               dri(id) = 1d0/dr(id)
               do io=-half_width,half_width
                  do id2=0,max_dim-1
                     rx(io,id,id2) = 0d0
                     rxx(io,id,id2) = 0d0
                     rxr(io,id,id2) = 0d0
                  enddo
               enddo
               do ic=0,max_dim-1
               do id2=0,max_dim-1
                  rxs(id,ic,id2) = 0d0
               enddo
               enddo
            enddo
            drid = dri(dir)
            dxid = dxi(dir)
            !!! initialize the metrics to the rectangular case
            aj_rx    = dr(0)/dx(0)
            aj_ry    = 0d0
            aj_sx    = 0d0
            aj_sy    = dr(1)/dx(1)
            if ( nd.eq.3 ) then
               aj_rz = 0d0
               aj_sz = 0d0
               aj_tx = 0d0
               aj_ty = 0d0
               aj_tz = dr(2)/dx(2)
            endif
            aj_rxx    = 0d0
            aj_sxx    = 0d0
            aj_txx    = 0d0
            aj_rxr    = 0d0
            aj_sxs    = 0d0
            aj_txt    = 0d0
            aj_ryy    = 0d0
            aj_syy    = 0d0
            aj_tyy    = 0d0
            aj_ryr    = 0d0
            aj_sys    = 0d0
            aj_tyt    = 0d0
            aj_rzz    = 0d0
            aj_szz    = 0d0
            aj_tzz    = 0d0
            aj_rzr    = 0d0
            aj_szs    = 0d0
            aj_tzt    = 0d0
            do io=-half_width,half_width
            rx( io,0,0) = aj_rx
            rxx(io,0,0) = aj_rxx
            rxr(io,0,0) = aj_rxr
            rx( io,1,0) = aj_sx
            rxx(io,1,0) = aj_sxx
            rxr(io,1,0) = aj_sxs
            rx( io,0,1) = aj_ry
            rxx(io,0,1) = aj_ryy
            rxr(io,0,1) = aj_ryr
            rx( io,1,1) = aj_sy
            rxx(io,1,1) = aj_syy
            rxr(io,1,1) = aj_sys
            if (nd.eq.3) then
               rx( io,0,2) = aj_rz
               rxx(io,0,2) = aj_rzz
               rxr(io,0,2) = aj_rzr
               rx( io,1,2) = aj_sz
               rxx(io,1,2) = aj_szz
               rxr(io,1,2) = aj_szs
               rx( io,2,0) = aj_tx
               rxx(io,2,0) = aj_txx
               rxr(io,2,0) = aj_txt
               rx( io,2,1) = aj_ty
               rxx(io,2,1) = aj_tyy
               rxr(io,2,1) = aj_tyt
               rx( io,2,2) = aj_tz
               rxx(io,2,2) = aj_tzz
               rxr(io,2,2) = aj_tzt
            endif
            enddo
            ! set the stencil offset to zero
            off = 0
            have_ghost_points = .true.
            extrap_all_1 = .true.
            use_os_rxr = .false.
      !! adjust dims for parallel ghost ghost boundaries
            if ( is_parallel ) then
               do side=0,1
                  do id=0,nd-1
                     if ( bc(side,id).ne.parallelBC ) then
                          dims(side,id) = dims(side,id) + npghost*(1-2*
     & side)
                     endif
                  enddo
               enddo
            endif                     ! is_parallel

      is_penta = (order.gt.2 .and. disc_approx.eq.compact) !! FOR COMBINED/MERGED FACTORS ONLY

            ! *wdh* 2012/04/06 if ( debug.ge.3 .and. processid.eq.0 ) then
            if ( debug.ge.4 .and. processid.le.0 ) then
               print '(a20)',"INSIDE ins_diagfactor"
               print '("         nd : ",i3)',nd
               print '("  nd1a,nd1b : ",i4,2x,i4)',nd1a,nd1b
               print '("  nd2a,nd2b : ",i4,2x,i4)',nd2a,nd2b
               print '("  nd3a,nd3b : ",i4,2x,i4)',nd3a,nd3b
               print '("  nd4a,nd4b : ",i4,2x,i4)',nd4a,nd4b
               print '("    i1s,i1e : ",i4,2x,i4)',i1s,i1e
               print '("    i2s,i2e : ",i4,2x,i4)',i2s,i2e
               print '("    i3s,i3e : ",i4,2x,i4)',i3s,i3e
               print '("index_range0: ",i4,2x,i4)',index_range(0,0),
     & index_range(1,0)
               print '("index_range1: ",i4,2x,i4)',index_range(0,1),
     & index_range(1,1)
               print '("index_range2: ",i4,2x,i4)',index_range(0,2),
     & index_range(1,2)
               print '("dims0: ",i4,2x,i4)',dims(0,0),dims(1,0)
               print '("dims1: ",i4,2x,i4)',dims(0,1),dims(1,1)
               print '("dims2: ",i4,2x,i4)',dims(0,2),dims(1,2)
               print '("gir0: ",i4,2x,i4)',gir(0,0),gir(1,0)
               print '("gir1: ",i4,2x,i4)',gir(0,1),gir(1,1)
               print '("gir2: ",i4,2x,i4)',gir(0,2),gir(1,2)
               print '("       dx(0): ",f10.7)',dx(0)
               print '("       dx(1): ",f10.7)',dx(1)
               print '("       dx(2): ",f10.7)',dx(2)
               print '("       dr(0): ",f10.7)',dr(0)
               print '("       dr(1): ",f10.7)',dr(1)
               print '("       dr(2): ",f10.7)',dr(2)
               print '("          dt: ",f10.7)',dt
               print '("       grid : ",i5)',grid
               print '("      order : ",i2)',order
               print '("      approx: ",i2)',disc_approx
               print '("  is_moving : ",l)',is_moving
               print '("    is_rect : ",l)',is_rect
               print '(" is_periodic: ",l)',is_periodic
               print '("    is_penta: ",l)',is_penta
               print '(" is_parallel: ",l)',is_parallel
               print '("       mode : ",i5)',mode
               print '("        dir : ",i5)',dir
               print '("         cc : ",i5)',cc
               print '("       nu_eq: ",f10.7)',nu_eq
            endif ! debug.gt.0
            isn(0) = 0
            isn(1) = 0
            isn(2) = 0
            ilo(0) = 0
            ilo(1) = 0
            ilo(2) = 0
            isn(dir) = 1
            is1 = isn(0)
            is2 = isn(1)
            is3 = isn(2)
      !      if (.not.is_periodic) ilo(dir) = isn(dir)
            ilo1 = ilo(0)
            ilo2 = ilo(1)
            ilo3 = ilo(2)

!      do i3l=i3s,i3e
!      do i2l=i2s,i2e
!      do i1l=i1s,i1e
      do i3l=index_range(0,2),index_range(1,2)
      do i2l=index_range(0,1),index_range(1,1)
      do i1l=index_range(0,0),index_range(1,0)

            i1mm = i1l-2*is1
            i2mm = i2l-2*is2
            i3mm = i3l-2*is3
            i1m = i1l-is1
            i2m = i2l-is2
            i3m = i3l-is3
            i1  = i1l
            i2  = i2l
            i3  = i3l
            i1p = i1l+is1
            i2p = i2l+is2
            i3p = i3l+is3
            i1pp = i1l+2*is1
            i2pp = i2l+2*is2
            i3pp = i3l+2*is3
!we can do this on all points      if ( mask(i1,i2,i3).gt.0 ) then


         !!!x here we assume there is always space for the first upper and lower diagonals
         dl1(i1,i2,i3) = 0d0
         d(i1,i2,i3)   = 1d0
         du1(i1,i2,i3) = 0d0
         if ( is_penta ) then
            dl2(i1,i2,i3) = 0d0
            du2(i1,i2,i3) = 0d0
         endif
         if ( mode.eq.solve_rhs .or. mode.eq.solve_lhs ) then
            rhs(i1,i2,i3) = ul(i1,i2,i3,cc)
         else
            rhs(i1,i2,i3) = 0d0
         endif

         if ( mask(i1,i2,i3).eq.0) rhs(i1,i2,i3) = 0d0
 !     endif ! if mask gt 0

      enddo ! i1l
      enddo ! i2l
      enddo ! i3l

      if (mode.ne.get_explicit) then
c      if ( nu .gt. 1e-10 ) then
c         APPLY_BOUNDARY_CONDITIONS()
      else
c         IDENTITY_GHOST()
c      endif
      endif

c      IDENTITY_GHOST()

      end ! subroutine ins_diagfactor
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
